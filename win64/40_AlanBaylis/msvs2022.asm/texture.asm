; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33133.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG124635 DB	'invalid argument', 00H
	ORG $+3
$SG124636 DB	'%s', 00H
	ORG $+9
$SG124637 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.38.33130\include\xmemory', 00H
	ORG $+14
$SG124638 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '8', 00H, '.', 00H, '3', 00H, '3'
	DB	00H, '1', 00H, '3', 00H, '0', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG124639 DB	00H, 00H
	ORG $+2
$SG124640 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG122368 DB	'rb', 00H
	ORG $+1
$SG122372 DB	'Error', 00H
	ORG $+6
$SG122373 DB	'Image file was not found', 00H
	ORG $+3
$SG122375 DB	'Error', 00H
	ORG $+14
$SG122376 DB	'Image cannot be indexed color. ', 0dH, 0aH, ' Convert th'
	DB	'e image to RGB or RGBA.', 00H
$SG122378 DB	'Error', 00H
	ORG $+6
$SG122379 DB	'Image cannot be greyscale color. ', 0dH, 0aH, ' Convert '
	DB	'the image to RGB or RGBA.', 00H
	ORG $+2
$SG122382 DB	'Error', 00H
	ORG $+2
$SG122383 DB	'Image cannot be compressed. ', 0dH, 0aH, ' Convert the i'
	DB	'mage to an uncompressed format.', 00H
$SG122388 DB	'Error', 00H
	ORG $+6
$SG122389 DB	'Image must have a width and height greater than 0', 00H
	ORG $+2
$SG122391 DB	'Error', 00H
	ORG $+6
$SG122392 DB	'Image must be 24 or 32 bit', 00H
	ORG $+1
$SG122396 DB	'Error', 00H
	ORG $+6
$SG122397 DB	'Image load failed for unknown reason.', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??0TEXTURE@@QEAA@XZ				; TEXTURE::TEXTURE
PUBLIC	??1TEXTURE@@QEAA@XZ				; TEXTURE::~TEXTURE
PUBLIC	?LoadTGA@TEXTURE@@QEAA_NXZ			; TEXTURE::LoadTGA
PUBLIC	__real@46040000
PUBLIC	__real@46180400
PUBLIC	__real@461c0c00
PUBLIC	__real@46240000
EXTRN	memcmp:PROC
EXTRN	__imp_MessageBoxA:PROC
EXTRN	free:PROC
EXTRN	malloc:PROC
EXTRN	fclose:PROC
EXTRN	fopen:PROC
EXTRN	fread:PROC
EXTRN	__imp_glBindTexture:PROC
EXTRN	__imp_glGenTextures:PROC
EXTRN	__imp_glTexEnvf:PROC
EXTRN	__imp_glTexImage2D:PROC
EXTRN	__imp_glTexParameterf:PROC
EXTRN	gluBuild2DMipmaps:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0TEXTURE@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0TEXTURE@@QEAA@XZ
$pdata$??1TEXTURE@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1TEXTURE@@QEAA@XZ
$pdata$?LoadTGA@TEXTURE@@QEAA_NXZ DD imagerel $LN22
	DD	imagerel $LN22+1730
	DD	imagerel $unwind$?LoadTGA@TEXTURE@@QEAA_NXZ
pdata	ENDS
;	COMDAT __real@46240000
CONST	SEGMENT
__real@46240000 DD 046240000r			; 10496
CONST	ENDS
;	COMDAT __real@461c0c00
CONST	SEGMENT
__real@461c0c00 DD 0461c0c00r			; 9987
CONST	ENDS
;	COMDAT __real@46180400
CONST	SEGMENT
__real@46180400 DD 046180400r			; 9729
CONST	ENDS
;	COMDAT __real@46040000
CONST	SEGMENT
__real@46040000 DD 046040000r			; 8448
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?LoadTGA@TEXTURE@@QEAA_NXZ
	DD	030H
	DD	06a9H
voltbl	ENDS
CONST	SEGMENT
	ORG $+2
?LoadTGA@TEXTURE@@QEAA_NXZ$rtcName$0 DB 054H		; TEXTURE::LoadTGA
	DB	047H
	DB	041H
	DB	068H
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+6
?LoadTGA@TEXTURE@@QEAA_NXZ$rtcName$1 DB 054H		; TEXTURE::LoadTGA
	DB	047H
	DB	041H
	DB	063H
	DB	06fH
	DB	06dH
	DB	070H
	DB	061H
	DB	072H
	DB	065H
	DB	00H
	ORG $+1
?LoadTGA@TEXTURE@@QEAA_NXZ$rtcName$2 DB 068H		; TEXTURE::LoadTGA
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
?LoadTGA@TEXTURE@@QEAA_NXZ$rtcVarDesc DD 0b4H		; TEXTURE::LoadTGA
	DD	06H
	DQ	FLAT:?LoadTGA@TEXTURE@@QEAA_NXZ$rtcName$2
	DD	088H
	DD	0cH
	DQ	FLAT:?LoadTGA@TEXTURE@@QEAA_NXZ$rtcName$1
	DD	058H
	DD	0cH
	DQ	FLAT:?LoadTGA@TEXTURE@@QEAA_NXZ$rtcName$0
	ORG $+144
?LoadTGA@TEXTURE@@QEAA_NXZ$rtcFrameData DD 03H		; TEXTURE::LoadTGA
	DD	00H
	DQ	FLAT:?LoadTGA@TEXTURE@@QEAA_NXZ$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$??0TEXTURE@@QEAA@XZ DD 010601H
	DD	07006H
$unwind$??1TEXTURE@@QEAA@XZ DD 010601H
	DD	07006H
$unwind$?LoadTGA@TEXTURE@@QEAA_NXZ DD 033819H
	DD	020010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0f0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
TGAheader$ = 88
TGAcompare$ = 136
header$ = 180
bytesPerPixel$ = 196
imageSize$ = 200
temp$ = 204
type$ = 208
file$ = 216
i$6 = 224
__$ArrayPad$ = 240
this$ = 272
?LoadTGA@TEXTURE@@QEAA_NXZ PROC				; TEXTURE::LoadTGA
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\texture.cpp
; Line 14
$LN22:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rdi, QWORD PTR [rsp+80]
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+272]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 15
	mov	BYTE PTR TGAheader$[rsp], 0
	mov	BYTE PTR TGAheader$[rsp+1], 0
	mov	BYTE PTR TGAheader$[rsp+2], 2
	mov	BYTE PTR TGAheader$[rsp+3], 0
	mov	BYTE PTR TGAheader$[rsp+4], 0
	mov	BYTE PTR TGAheader$[rsp+5], 0
	mov	BYTE PTR TGAheader$[rsp+6], 0
	mov	BYTE PTR TGAheader$[rsp+7], 0
	mov	BYTE PTR TGAheader$[rsp+8], 0
	mov	BYTE PTR TGAheader$[rsp+9], 0
	mov	BYTE PTR TGAheader$[rsp+10], 0
	mov	BYTE PTR TGAheader$[rsp+11], 0
; Line 21
	mov	DWORD PTR type$[rsp], 6408		; 00001908H
; Line 22
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:$SG122368
	mov	rcx, rax
	call	fopen
	mov	QWORD PTR file$[rsp], rax
; Line 25
	cmp	QWORD PTR file$[rsp], 0
	je	SHORT $LN6@LoadTGA
	mov	r9, QWORD PTR file$[rsp]
	mov	r8d, 12
	mov	edx, 1
	lea	rcx, QWORD PTR TGAcompare$[rsp]
	call	fread
	cmp	rax, 12
	jne	SHORT $LN6@LoadTGA
	mov	r8d, 12
	lea	rdx, QWORD PTR TGAcompare$[rsp]
	lea	rcx, QWORD PTR TGAheader$[rsp]
	call	memcmp
	test	eax, eax
	jne	SHORT $LN6@LoadTGA
	mov	r9, QWORD PTR file$[rsp]
	mov	r8d, 6
	mov	edx, 1
	lea	rcx, QWORD PTR header$[rsp]
	call	fread
	cmp	rax, 6
	je	$LN5@LoadTGA
$LN6@LoadTGA:
; Line 28
	cmp	QWORD PTR file$[rsp], 0
	jne	SHORT $LN7@LoadTGA
; Line 30
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122372
	lea	rdx, OFFSET FLAT:$SG122373
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 31
	xor	al, al
	jmp	$LN1@LoadTGA
$LN7@LoadTGA:
; Line 33
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR TGAcompare$[rsp+rax]
	cmp	eax, 1
	jne	SHORT $LN8@LoadTGA
; Line 34
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122375
	lea	rdx, OFFSET FLAT:$SG122376
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN8@LoadTGA:
; Line 35
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR TGAcompare$[rsp+rax]
	cmp	eax, 3
	jne	SHORT $LN9@LoadTGA
; Line 36
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122378
	lea	rdx, OFFSET FLAT:$SG122379
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN9@LoadTGA:
; Line 37
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR TGAcompare$[rsp+rax]
	cmp	eax, 9
	je	SHORT $LN11@LoadTGA
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR TGAcompare$[rsp+rax]
	cmp	eax, 10
	jne	SHORT $LN10@LoadTGA
$LN11@LoadTGA:
; Line 38
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122382
	lea	rdx, OFFSET FLAT:$SG122383
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN10@LoadTGA:
; Line 39
	mov	rcx, QWORD PTR file$[rsp]
	call	fclose
; Line 40
	xor	al, al
	jmp	$LN1@LoadTGA
$LN5@LoadTGA:
; Line 42
	mov	eax, 1
	imul	rax, rax, 1
	movzx	eax, BYTE PTR header$[rsp+rax]
	imul	eax, eax, 256				; 00000100H
	mov	ecx, 1
	imul	rcx, rcx, 0
	movzx	ecx, BYTE PTR header$[rsp+rcx]
	add	eax, ecx
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+36], eax
; Line 43
	mov	eax, 1
	imul	rax, rax, 3
	movzx	eax, BYTE PTR header$[rsp+rax]
	imul	eax, eax, 256				; 00000100H
	mov	ecx, 1
	imul	rcx, rcx, 2
	movzx	ecx, BYTE PTR header$[rsp+rcx]
	add	eax, ecx
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+40], eax
; Line 45
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+36], 0
	jbe	SHORT $LN13@LoadTGA
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+40], 0
	jbe	SHORT $LN13@LoadTGA
	mov	eax, 1
	imul	rax, rax, 4
	movzx	eax, BYTE PTR header$[rsp+rax]
	cmp	eax, 24
	je	$LN12@LoadTGA
	mov	eax, 1
	imul	rax, rax, 4
	movzx	eax, BYTE PTR header$[rsp+rax]
	cmp	eax, 32					; 00000020H
	je	$LN12@LoadTGA
$LN13@LoadTGA:
; Line 48
	mov	rcx, QWORD PTR file$[rsp]
	call	fclose
; Line 49
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+36], 0
	jbe	SHORT $LN15@LoadTGA
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+40], 0
	ja	SHORT $LN14@LoadTGA
$LN15@LoadTGA:
; Line 50
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122388
	lea	rdx, OFFSET FLAT:$SG122389
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN14@LoadTGA:
; Line 51
	mov	eax, 1
	imul	rax, rax, 4
	movzx	eax, BYTE PTR header$[rsp+rax]
	cmp	eax, 24
	je	SHORT $LN16@LoadTGA
	mov	eax, 1
	imul	rax, rax, 4
	movzx	eax, BYTE PTR header$[rsp+rax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN16@LoadTGA
; Line 52
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122391
	lea	rdx, OFFSET FLAT:$SG122392
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN16@LoadTGA:
; Line 53
	xor	al, al
	jmp	$LN1@LoadTGA
$LN12@LoadTGA:
; Line 55
	mov	eax, 1
	imul	rax, rax, 4
	movzx	eax, BYTE PTR header$[rsp+rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+32], eax
; Line 56
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+32]
	mov	ecx, 8
	div	ecx
	mov	DWORD PTR bytesPerPixel$[rsp], eax
; Line 57
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+36]
	imul	eax, DWORD PTR [rcx+40]
	imul	eax, DWORD PTR bytesPerPixel$[rsp]
	mov	DWORD PTR imageSize$[rsp], eax
; Line 58
	mov	eax, DWORD PTR imageSize$[rsp]
	mov	ecx, eax
	call	malloc
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax
; Line 59
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN18@LoadTGA
	mov	eax, DWORD PTR imageSize$[rsp]
	mov	r9, QWORD PTR file$[rsp]
	mov	r8d, eax
	mov	edx, 1
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	fread
	mov	ecx, DWORD PTR imageSize$[rsp]
	cmp	rax, rcx
	je	SHORT $LN17@LoadTGA
$LN18@LoadTGA:
; Line 62
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN19@LoadTGA
; Line 63
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	free
$LN19@LoadTGA:
; Line 64
	mov	r9d, 16
	lea	r8, OFFSET FLAT:$SG122396
	lea	rdx, OFFSET FLAT:$SG122397
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 65
	mov	rcx, QWORD PTR file$[rsp]
	call	fclose
; Line 66
	xor	al, al
	jmp	$LN1@LoadTGA
$LN17@LoadTGA:
; Line 68
	mov	DWORD PTR i$6[rsp], 0
	jmp	SHORT $LN4@LoadTGA
$LN2@LoadTGA:
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	mov	ecx, DWORD PTR i$6[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR i$6[rsp], eax
$LN4@LoadTGA:
	mov	eax, DWORD PTR imageSize$[rsp]
	cmp	DWORD PTR i$6[rsp], eax
	jae	SHORT $LN3@LoadTGA
; Line 70
	mov	eax, DWORD PTR i$6[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR temp$[rsp], eax
; Line 71
	mov	eax, DWORD PTR i$6[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	edx, DWORD PTR i$6[rsp]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+24]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR [r8+rdx], al
; Line 72
	mov	eax, DWORD PTR i$6[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	movzx	edx, BYTE PTR temp$[rsp]
	mov	BYTE PTR [rcx+rax], dl
; Line 73
	jmp	$LN2@LoadTGA
$LN3@LoadTGA:
; Line 74
	mov	rcx, QWORD PTR file$[rsp]
	call	fclose
; Line 77
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 44					; 0000002cH
	mov	rdx, rax
	mov	ecx, 1
	call	QWORD PTR __imp_glGenTextures
; Line 78
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+44]
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glBindTexture
; Line 79
	movss	xmm2, DWORD PTR __real@46240000
	mov	edx, 10242				; 00002802H
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glTexParameterf
; Line 80
	movss	xmm2, DWORD PTR __real@46240000
	mov	edx, 10243				; 00002803H
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glTexParameterf
; Line 81
	movss	xmm2, DWORD PTR __real@46180400
	mov	edx, 10240				; 00002800H
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glTexParameterf
; Line 82
	movss	xmm2, DWORD PTR __real@461c0c00
	mov	edx, 10241				; 00002801H
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glTexParameterf
; Line 83
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+32], 24
	jne	SHORT $LN20@LoadTGA
; Line 85
	mov	DWORD PTR type$[rsp], 6407		; 00001907H
$LN20@LoadTGA:
; Line 87
	movss	xmm2, DWORD PTR __real@46040000
	mov	edx, 8704				; 00002200H
	mov	ecx, 8960				; 00002300H
	call	QWORD PTR __imp_glTexEnvf
; Line 88
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], 5121		; 00001401H
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	DWORD PTR [rsp+40], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+36]
	mov	r8d, DWORD PTR type$[rsp]
	xor	edx, edx
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glTexImage2D
; Line 89
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR [rsp+48], rax
	mov	DWORD PTR [rsp+40], 5121		; 00001401H
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+40]
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+36]
	mov	edx, DWORD PTR type$[rsp]
	mov	ecx, 3553				; 00000de1H
	call	gluBuild2DMipmaps
; Line 90
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	free
; Line 91
	mov	al, 1
$LN1@LoadTGA:
; Line 92
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?LoadTGA@TEXTURE@@QEAA_NXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
?LoadTGA@TEXTURE@@QEAA_NXZ ENDP				; TEXTURE::LoadTGA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
??1TEXTURE@@QEAA@XZ PROC				; TEXTURE::~TEXTURE
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\texture.cpp
; Line 10
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 11
	pop	rdi
	ret	0
??1TEXTURE@@QEAA@XZ ENDP				; TEXTURE::~TEXTURE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
??0TEXTURE@@QEAA@XZ PROC				; TEXTURE::TEXTURE
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\texture.cpp
; Line 6
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 7
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0TEXTURE@@QEAA@XZ ENDP				; TEXTURE::TEXTURE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\texture.cpp
; Line 93
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\texture.cpp
; Line 93
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
