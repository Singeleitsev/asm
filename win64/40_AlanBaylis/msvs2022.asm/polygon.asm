; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33133.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG124957 DB	'invalid argument', 00H
	ORG $+3
$SG124958 DB	'%s', 00H
	ORG $+9
$SG124959 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.38.33130\include\xmemory', 00H
	ORG $+14
$SG124960 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '8', 00H, '.', 00H, '3', 00H, '3'
	DB	00H, '1', 00H, '3', 00H, '0', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG124961 DB	00H, 00H
	ORG $+2
$SG124962 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??_FVERTEX@@QEAAXXZ				; VERTEX::`default constructor closure'
PUBLIC	??0POLYGON@@QEAA@XZ				; POLYGON::POLYGON
PUBLIC	??1POLYGON@@QEAA@XZ				; POLYGON::~POLYGON
PUBLIC	?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ		; POLYGON::GetNormal
PUBLIC	?SetNormal@POLYGON@@QEAAXXZ			; POLYGON::SetNormal
PUBLIC	?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ		; POLYGON::GetMidPoint
PUBLIC	?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z ; POLYGON::CheckForCollision
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@40400000
PUBLIC	__real@bf800000
EXTRN	??_L@YAXPEAX_K1P6AX0@Z2@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??0TEXTURE@@QEAA@XZ:PROC			; TEXTURE::TEXTURE
EXTRN	??1TEXTURE@@QEAA@XZ:PROC			; TEXTURE::~TEXTURE
EXTRN	??0VECTOR@@QEAA@MMM@Z:PROC			; VECTOR::VECTOR
EXTRN	??1VECTOR@@QEAA@XZ:PROC				; VECTOR::~VECTOR
EXTRN	??0VERTEX@@QEAA@MMMMMM@Z:PROC			; VERTEX::VERTEX
EXTRN	??1VERTEX@@QEAA@XZ:PROC				; VERTEX::~VERTEX
EXTRN	?DotProduct@@YAMVVECTOR@@0@Z:PROC		; DotProduct
EXTRN	?CrossVector@@YA?AVVECTOR@@V1@0@Z:PROC		; CrossVector
EXTRN	?MagnitudeVector@@YAMVVECTOR@@@Z:PROC		; MagnitudeVector
EXTRN	?GetUnitVector@@YA?AVVECTOR@@V1@@Z:PROC		; GetUnitVector
EXTRN	?GetEdgeVector@@YA?AVVECTOR@@V1@0@Z:PROC	; GetEdgeVector
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_FVERTEX@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??_FVERTEX@@QEAAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0POLYGON@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$??0POLYGON@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1POLYGON@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1POLYGON@@QEAA@XZ
$pdata$?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ DD imagerel $LN6
	DD	imagerel $LN6+568
	DD	imagerel $unwind$?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ
$pdata$?SetNormal@POLYGON@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+685
	DD	imagerel $unwind$?SetNormal@POLYGON@@QEAAXXZ
$pdata$?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ DD imagerel $LN6
	DD	imagerel $LN6+364
	DD	imagerel $unwind$?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ
$pdata$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z DD imagerel $LN35
	DD	imagerel $LN35+3528
	DD	imagerel $unwind$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$pdata$?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$pdata$?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$pdata$?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$pdata$?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$pdata$?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$pdata$?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD imagerel ?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	imagerel ?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
pdata	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
CONST	SEGMENT
	ORG $+2
?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ$rtcName$0 DB 074H	; POLYGON::GetNormal
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ$rtcVarDesc DD 028H ; POLYGON::GetNormal
	DD	0cH
	DQ	FLAT:?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ$rtcName$0
	ORG $+48
?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ$rtcFrameData DD 01H ; POLYGON::GetNormal
	DD	00H
	DQ	FLAT:?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ$rtcVarDesc
?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ$rtcName$0 DB 074H ; POLYGON::GetMidPoint
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ$rtcVarDesc DD 028H ; POLYGON::GetMidPoint
	DD	0cH
	DQ	FLAT:?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ$rtcName$0
	ORG $+48
?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ$rtcFrameData DD 01H ; POLYGON::GetMidPoint
	DD	00H
	DQ	FLAT:?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ$rtcVarDesc
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$0 DB 056H ; POLYGON::CheckForCollision
	DB	065H
	DB	063H
	DB	074H
	DB	031H
	DB	00H
	ORG $+2
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$1 DB 056H ; POLYGON::CheckForCollision
	DB	065H
	DB	063H
	DB	074H
	DB	032H
	DB	00H
	ORG $+2
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$2 DB 056H ; POLYGON::CheckForCollision
	DB	065H
	DB	063H
	DB	074H
	DB	033H
	DB	00H
	ORG $+2
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$3 DB 043H ; POLYGON::CheckForCollision
	DB	061H
	DB	06dH
	DB	065H
	DB	072H
	DB	061H
	DB	050H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+6
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$4 DB 04cH ; POLYGON::CheckForCollision
	DB	061H
	DB	073H
	DB	074H
	DB	043H
	DB	061H
	DB	06dH
	DB	065H
	DB	072H
	DB	061H
	DB	050H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+2
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$5 DB 054H ; POLYGON::CheckForCollision
	DB	065H
	DB	06dH
	DB	070H
	DB	056H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+3
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$6 DB 04eH ; POLYGON::CheckForCollision
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	06cH
	DB	00H
	ORG $+5
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcVarDesc DD 0158H ; POLYGON::CheckForCollision
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$6
	DD	0128H
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$5
	DD	0f8H
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$4
	DD	0c8H
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$3
	DD	098H
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$2
	DD	068H
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$1
	DD	038H
	DD	0cH
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcName$0
	ORG $+336
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcFrameData DD 07H ; POLYGON::CheckForCollision
	DD	00H
	DQ	FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcVarDesc
CONST	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA
	DD	00H
	DD	05H
voltbl	ENDS
xdata	SEGMENT
$unwind$??0POLYGON@@QEAA@XZ DD 020a11H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0POLYGON@@QEAA@XZ
$cppxdata$??0POLYGON@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0POLYGON@@QEAA@XZ
	DD	imagerel $ip2state$??0POLYGON@@QEAA@XZ
$stateUnwindMap$??0POLYGON@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA
$ip2state$??0POLYGON@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'0'
	DB	02H
	DB	'`'
	DB	00H
	ORG $+2
$unwind$?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1POLYGON@@QEAA@XZ DD 020a19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1POLYGON@@QEAA@XZ
$cppxdata$??1POLYGON@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1POLYGON@@QEAA@XZ
$ip2state$??1POLYGON@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
$unwind$?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ DD 032901H
	DD	0700cc210H
	DD	0600bH
$unwind$?SetNormal@POLYGON@@QEAAXXZ DD 020a01H
	DD	07006320aH
$unwind$?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ DD 032601H
	DD	0700ca210H
	DD	0600bH
$unwind$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z DD 043111H
	DD	0910118H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z
$cppxdata$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z
	DD	imagerel $ip2state$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z
$stateUnwindMap$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA
$ip2state$?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z DB '.'
	DB	00H
	DB	00H
	DB	0a6H
	DB	02H
	DB	0d6H
	DB	04H
	DB	0dcH
	DB	06H
	DB	0dH, 02H
	DB	08H
	DB	'.'
	DB	0aH
	DB	'.'
	DB	0cH
	DB	','
	DB	0eH
	DB	0d5H, '*'
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	016H
	DB	00H
	DB	'.'
	DB	0eH
	DB	'l'
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	016H
	DB	00H
	ORG $+2
$unwind$?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_FVERTEX@@QEAAXXZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z PROC	; POLYGON::CheckForCollision
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 71
$LN35:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 1160				; 00000488H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 282				; 0000011aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1184]
; Line 72
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR Radius$[rsp], xmm0
; Line 73
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR Vect1$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 74
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+76]
	movss	DWORD PTR Vect1$[rsp], xmm0
; Line 75
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+80]
	movss	DWORD PTR Vect1$[rsp+4], xmm0
; Line 76
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+84]
	movss	DWORD PTR Vect1$[rsp+8], xmm0
; Line 77
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR Vect2$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 78
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+76]
	movss	DWORD PTR Vect2$[rsp], xmm0
; Line 79
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+80]
	movss	DWORD PTR Vect2$[rsp+4], xmm0
; Line 80
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+84]
	movss	DWORD PTR Vect2$[rsp+8], xmm0
; Line 81
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR Vect3$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 82
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+76]
	movss	DWORD PTR Vect3$[rsp], xmm0
; Line 83
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+80]
	movss	DWORD PTR Vect3$[rsp+4], xmm0
; Line 84
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax+84]
	movss	DWORD PTR Vect3$[rsp+8], xmm0
; Line 85
	xorps	xmm0, xmm0
	movss	DWORD PTR Flag$[rsp], xmm0
; Line 88
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR CameraPos$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 89
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR LastCameraPos$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 90
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR TempVect$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 92
	lea	rdx, QWORD PTR Normal$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ	; POLYGON::GetNormal
	npad	1
; Line 93
	movss	xmm0, DWORD PTR Normal$[rsp]
	mulss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR Normal$[rsp], xmm0
; Line 94
	movss	xmm0, DWORD PTR Normal$[rsp+4]
	mulss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR Normal$[rsp+4], xmm0
; Line 95
	movss	xmm0, DWORD PTR Normal$[rsp+8]
	mulss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR Normal$[rsp+8], xmm0
; Line 96
	lea	rax, QWORD PTR $T22[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T22[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	?GetUnitVector@@YA?AVVECTOR@@V1@@Z	; GetUnitVector
	mov	QWORD PTR tv404[rsp], rax
	lea	rax, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv404[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T10[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 97
	lea	rax, QWORD PTR $T24[rsp]
	lea	rcx, QWORD PTR Vect1$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T23[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T24[rsp]
	lea	rcx, QWORD PTR $T23[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	movss	xmm1, DWORD PTR __real@bf800000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 98
	mov	rax, QWORD PTR pCam$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR [rax+16]
	movss	DWORD PTR CameraPos$[rsp], xmm0
; Line 99
	mov	rax, QWORD PTR pCam$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR [rax+20]
	movss	DWORD PTR CameraPos$[rsp+4], xmm0
; Line 100
	mov	rax, QWORD PTR pCam$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR [rax+24]
	movss	DWORD PTR CameraPos$[rsp+8], xmm0
; Line 101
	lea	rax, QWORD PTR $T26[rsp]
	lea	rcx, QWORD PTR CameraPos$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T25[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T26[rsp]
	lea	rcx, QWORD PTR $T25[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	subss	xmm0, DWORD PTR TempFloat$[rsp]
	movss	DWORD PTR CamDistance$[rsp], xmm0
; Line 102
	mov	rax, QWORD PTR pLastCam$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR [rax+16]
	movss	DWORD PTR LastCameraPos$[rsp], xmm0
; Line 103
	mov	rax, QWORD PTR pLastCam$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR [rax+20]
	movss	DWORD PTR LastCameraPos$[rsp+4], xmm0
; Line 104
	mov	rax, QWORD PTR pLastCam$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR [rax+24]
	movss	DWORD PTR LastCameraPos$[rsp+8], xmm0
; Line 105
	lea	rax, QWORD PTR $T28[rsp]
	lea	rcx, QWORD PTR LastCameraPos$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T27[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T28[rsp]
	lea	rcx, QWORD PTR $T27[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	subss	xmm0, DWORD PTR TempFloat$[rsp]
	movss	DWORD PTR LastCamDistance$[rsp], xmm0
; Line 106
	movss	xmm0, DWORD PTR Radius$[rsp]
	comiss	xmm0, DWORD PTR CamDistance$[rsp]
	jbe	SHORT $LN3@CheckForCo
	movss	xmm0, DWORD PTR LastCamDistance$[rsp]
	comiss	xmm0, DWORD PTR Radius$[rsp]
	jae	SHORT $LN2@CheckForCo
$LN3@CheckForCo:
; Line 107
	jmp	$Skip$36
$LN2@CheckForCo:
; Line 108
	lea	rax, QWORD PTR $T30[rsp]
	lea	rcx, QWORD PTR Vect2$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T29[rsp]
	lea	rcx, QWORD PTR Vect1$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T30[rsp]
	lea	rdx, QWORD PTR $T29[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	?GetEdgeVector@@YA?AVVECTOR@@V1@0@Z	; GetEdgeVector
	mov	QWORD PTR tv406[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv406[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 109
	lea	rax, QWORD PTR $T32[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T31[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T32[rsp]
	lea	rdx, QWORD PTR $T31[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	?CrossVector@@YA?AVVECTOR@@V1@0@Z	; CrossVector
	mov	QWORD PTR tv408[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv408[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T12[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 110
	lea	rax, QWORD PTR $T33[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T33[rsp]
	lea	rcx, QWORD PTR $T13[rsp]
	call	?GetUnitVector@@YA?AVVECTOR@@V1@@Z	; GetUnitVector
	mov	QWORD PTR tv410[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv410[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T13[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 111
	lea	rax, QWORD PTR $T35[rsp]
	lea	rcx, QWORD PTR Vect1$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T34[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T35[rsp]
	lea	rcx, QWORD PTR $T34[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	movss	xmm1, DWORD PTR __real@bf800000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 112
	lea	rax, QWORD PTR $T37[rsp]
	lea	rcx, QWORD PTR CameraPos$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T36[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T37[rsp]
	lea	rcx, QWORD PTR $T36[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	subss	xmm0, DWORD PTR TempFloat$[rsp]
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 113
	movss	xmm0, DWORD PTR TempFloat$[rsp]
	comiss	xmm0, DWORD PTR Radius$[rsp]
	jb	SHORT $LN5@CheckForCo
; Line 114
	jmp	$Skip$36
$LN5@CheckForCo:
; Line 115
	lea	rax, QWORD PTR $T39[rsp]
	lea	rcx, QWORD PTR Vect3$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T38[rsp]
	lea	rcx, QWORD PTR Vect2$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T39[rsp]
	lea	rdx, QWORD PTR $T38[rsp]
	lea	rcx, QWORD PTR $T14[rsp]
	call	?GetEdgeVector@@YA?AVVECTOR@@V1@0@Z	; GetEdgeVector
	mov	QWORD PTR tv412[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv412[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T14[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 116
	lea	rax, QWORD PTR $T41[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T40[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T41[rsp]
	lea	rdx, QWORD PTR $T40[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	?CrossVector@@YA?AVVECTOR@@V1@0@Z	; CrossVector
	mov	QWORD PTR tv414[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv414[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T15[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 117
	lea	rax, QWORD PTR $T42[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T42[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	?GetUnitVector@@YA?AVVECTOR@@V1@@Z	; GetUnitVector
	mov	QWORD PTR tv448[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv448[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T16[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 118
	lea	rax, QWORD PTR $T44[rsp]
	lea	rcx, QWORD PTR Vect2$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T43[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T44[rsp]
	lea	rcx, QWORD PTR $T43[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	movss	xmm1, DWORD PTR __real@bf800000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 119
	lea	rax, QWORD PTR $T46[rsp]
	lea	rcx, QWORD PTR CameraPos$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T45[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T46[rsp]
	lea	rcx, QWORD PTR $T45[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	subss	xmm0, DWORD PTR TempFloat$[rsp]
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 120
	movss	xmm0, DWORD PTR TempFloat$[rsp]
	comiss	xmm0, DWORD PTR Radius$[rsp]
	jb	SHORT $LN7@CheckForCo
; Line 121
	jmp	$Skip$36
$LN7@CheckForCo:
; Line 122
	lea	rax, QWORD PTR $T48[rsp]
	lea	rcx, QWORD PTR Vect1$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T47[rsp]
	lea	rcx, QWORD PTR Vect3$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T48[rsp]
	lea	rdx, QWORD PTR $T47[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	?GetEdgeVector@@YA?AVVECTOR@@V1@0@Z	; GetEdgeVector
	mov	QWORD PTR tv450[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv450[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T17[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 123
	lea	rax, QWORD PTR $T50[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T49[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T50[rsp]
	lea	rdx, QWORD PTR $T49[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	?CrossVector@@YA?AVVECTOR@@V1@0@Z	; CrossVector
	mov	QWORD PTR tv452[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv452[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T18[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 124
	lea	rax, QWORD PTR $T51[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T51[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	?GetUnitVector@@YA?AVVECTOR@@V1@@Z	; GetUnitVector
	mov	QWORD PTR tv454[rsp], rax
	lea	rax, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR tv454[rsp]
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T19[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 125
	lea	rax, QWORD PTR $T53[rsp]
	lea	rcx, QWORD PTR Vect3$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T52[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T53[rsp]
	lea	rcx, QWORD PTR $T52[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	movss	xmm1, DWORD PTR __real@bf800000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 126
	lea	rax, QWORD PTR $T55[rsp]
	lea	rcx, QWORD PTR CameraPos$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR $T54[rsp]
	lea	rcx, QWORD PTR TempVect$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T55[rsp]
	lea	rcx, QWORD PTR $T54[rsp]
	call	?DotProduct@@YAMVVECTOR@@0@Z		; DotProduct
	subss	xmm0, DWORD PTR TempFloat$[rsp]
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 127
	movss	xmm0, DWORD PTR TempFloat$[rsp]
	comiss	xmm0, DWORD PTR Radius$[rsp]
	jb	SHORT $LN9@CheckForCo
; Line 128
	jmp	$Skip$36
$LN9@CheckForCo:
; Line 129
	movss	xmm0, DWORD PTR Radius$[rsp]
	subss	xmm0, DWORD PTR CamDistance$[rsp]
	movss	DWORD PTR tv356[rsp], xmm0
	lea	rax, QWORD PTR $T56[rsp]
	lea	rcx, QWORD PTR Normal$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rcx, QWORD PTR $T56[rsp]
	call	?MagnitudeVector@@YAMVVECTOR@@@Z	; MagnitudeVector
	movss	xmm1, DWORD PTR tv356[rsp]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR TempFloat$[rsp], xmm0
; Line 130
	movss	xmm0, DWORD PTR TempFloat$[rsp]
	mulss	xmm0, DWORD PTR Normal$[rsp]
	mov	rax, QWORD PTR pCam$[rsp]
	movss	xmm1, DWORD PTR [rax+16]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR pCam$[rsp]
	movss	DWORD PTR [rax+16], xmm0
; Line 131
	movss	xmm0, DWORD PTR TempFloat$[rsp]
	mulss	xmm0, DWORD PTR Normal$[rsp+4]
	mov	rax, QWORD PTR pCam$[rsp]
	movss	xmm1, DWORD PTR [rax+20]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR pCam$[rsp]
	movss	DWORD PTR [rax+20], xmm0
; Line 132
	movss	xmm0, DWORD PTR TempFloat$[rsp]
	mulss	xmm0, DWORD PTR Normal$[rsp+8]
	mov	rax, QWORD PTR pCam$[rsp]
	movss	xmm1, DWORD PTR [rax+24]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR pCam$[rsp]
	movss	DWORD PTR [rax+24], xmm0
; Line 133
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR Flag$[rsp], xmm0
; Line 134
	cvtss2sd xmm0, DWORD PTR Flag$[rsp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	jp	SHORT $LN34@CheckForCo
	je	SHORT $LN12@CheckForCo
$LN34@CheckForCo:
	mov	BYTE PTR tv392[rsp], 1
	jmp	SHORT $LN13@CheckForCo
$LN12@CheckForCo:
	mov	BYTE PTR tv392[rsp], 0
$LN13@CheckForCo:
	movzx	eax, BYTE PTR tv392[rsp]
	mov	BYTE PTR $T20[rsp], al
	lea	rcx, QWORD PTR Normal$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR TempVect$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR LastCameraPos$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR CameraPos$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR Vect3$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR Vect2$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR Vect1$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	movzx	eax, BYTE PTR $T20[rsp]
	jmp	$LN1@CheckForCo
$Skip$36:
; Line 136
	cvtss2sd xmm0, DWORD PTR Flag$[rsp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	jp	SHORT $LN33@CheckForCo
	je	SHORT $LN14@CheckForCo
$LN33@CheckForCo:
	mov	BYTE PTR tv395[rsp], 1
	jmp	SHORT $LN15@CheckForCo
$LN14@CheckForCo:
	mov	BYTE PTR tv395[rsp], 0
$LN15@CheckForCo:
	movzx	eax, BYTE PTR tv395[rsp]
	mov	BYTE PTR $T21[rsp], al
	lea	rcx, QWORD PTR Normal$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR TempVect$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR LastCameraPos$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR CameraPos$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR Vect3$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR Vect2$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR Vect1$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	movzx	eax, BYTE PTR $T21[rsp]
$LN1@CheckForCo:
; Line 137
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 1160				; 00000488H
	pop	rdi
	pop	rsi
	ret	0
?CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z ENDP	; POLYGON::CheckForCollision
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Vect1$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Vect2$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Vect3$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR CameraPos$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR LastCameraPos$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR TempVect$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Radius$ = 32
Vect1$ = 56
Vect2$ = 104
Vect3$ = 152
Flag$ = 180
CamDistance$ = 184
LastCamDistance$ = 188
CameraPos$ = 200
LastCameraPos$ = 248
TempVect$ = 296
TempFloat$ = 324
Normal$ = 344
$T10 = 372
$T11 = 384
$T12 = 396
$T13 = 408
$T14 = 420
$T15 = 432
$T16 = 444
$T17 = 456
$T18 = 468
$T19 = 480
$T20 = 492
$T21 = 493
$T22 = 496
$T23 = 512
$T24 = 528
$T25 = 544
$T26 = 560
$T27 = 576
$T28 = 592
$T29 = 608
$T30 = 624
$T31 = 640
$T32 = 656
$T33 = 672
$T34 = 688
$T35 = 704
$T36 = 720
$T37 = 736
$T38 = 752
$T39 = 768
$T40 = 784
$T41 = 800
$T42 = 816
$T43 = 832
$T44 = 848
$T45 = 864
$T46 = 880
$T47 = 896
$T48 = 912
$T49 = 928
$T50 = 944
$T51 = 960
$T52 = 976
$T53 = 992
$T54 = 1008
$T55 = 1024
$T56 = 1040
tv404 = 1056
tv406 = 1064
tv408 = 1072
tv410 = 1080
tv412 = 1088
tv414 = 1096
tv448 = 1104
tv450 = 1112
tv452 = 1120
tv454 = 1128
tv356 = 1136
tv392 = 1140
tv395 = 1141
this$ = 1184
pLastCam$ = 1192
pCam$ = 1200
?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA PROC ; `POLYGON::CheckForCollision'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Normal$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??CheckForCollision@POLYGON@@QEAA_NPEAVCAMERA@@0@Z@4HA ENDP ; `POLYGON::CheckForCollision'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
temp$ = 40
$T4 = 68
this$ = 112
__$ReturnUdt$ = 120
?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ PROC		; POLYGON::GetMidPoint
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 62
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
	mov	DWORD PTR $T4[rsp], 0
; Line 63
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR temp$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
; Line 64
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+76]
	addss	xmm0, DWORD PTR [r8+rcx+76]
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	addss	xmm0, DWORD PTR [rcx+rax+76]
	divss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR temp$[rsp], xmm0
; Line 65
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+80]
	addss	xmm0, DWORD PTR [r8+rcx+80]
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	addss	xmm0, DWORD PTR [rcx+rax+80]
	divss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR temp$[rsp+4], xmm0
; Line 66
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+84]
	addss	xmm0, DWORD PTR [r8+rcx+84]
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	addss	xmm0, DWORD PTR [rcx+rax+84]
	divss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR temp$[rsp+8], xmm0
; Line 67
	lea	rax, QWORD PTR temp$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR temp$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 68
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
?GetMidPoint@POLYGON@@QEAA?AVVECTOR@@XZ ENDP		; POLYGON::GetMidPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
ux$ = 0
uy$ = 4
uz$ = 8
vx$ = 12
vy$ = 16
vz$ = 20
this$ = 48
?SetNormal@POLYGON@@QEAAXXZ PROC			; POLYGON::SetNormal
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 37
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 44
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+76]
	subss	xmm0, DWORD PTR [r8+rcx+76]
	movss	DWORD PTR ux$[rsp], xmm0
; Line 45
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+80]
	subss	xmm0, DWORD PTR [r8+rcx+80]
	movss	DWORD PTR uy$[rsp], xmm0
; Line 46
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+84]
	subss	xmm0, DWORD PTR [r8+rcx+84]
	movss	DWORD PTR uz$[rsp], xmm0
; Line 47
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+76]
	subss	xmm0, DWORD PTR [r8+rcx+76]
	movss	DWORD PTR vx$[rsp], xmm0
; Line 48
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+80]
	subss	xmm0, DWORD PTR [r8+rcx+80]
	movss	DWORD PTR vy$[rsp], xmm0
; Line 49
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+84]
	subss	xmm0, DWORD PTR [r8+rcx+84]
	movss	DWORD PTR vz$[rsp], xmm0
; Line 50
	movss	xmm0, DWORD PTR uy$[rsp]
	mulss	xmm0, DWORD PTR vz$[rsp]
	movss	xmm1, DWORD PTR vy$[rsp]
	mulss	xmm1, DWORD PTR uz$[rsp]
	subss	xmm0, xmm1
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	movss	DWORD PTR [rcx+rax+88], xmm0
; Line 51
	movss	xmm0, DWORD PTR uz$[rsp]
	mulss	xmm0, DWORD PTR vx$[rsp]
	movss	xmm1, DWORD PTR vz$[rsp]
	mulss	xmm1, DWORD PTR ux$[rsp]
	subss	xmm0, xmm1
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	movss	DWORD PTR [rcx+rax+92], xmm0
; Line 52
	movss	xmm0, DWORD PTR ux$[rsp]
	mulss	xmm0, DWORD PTR vy$[rsp]
	movss	xmm1, DWORD PTR vx$[rsp]
	mulss	xmm1, DWORD PTR uy$[rsp]
	subss	xmm0, xmm1
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	movss	DWORD PTR [rcx+rax+96], xmm0
; Line 53
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [r8+rax+88]
	movss	DWORD PTR [rdx+rcx+88], xmm0
; Line 54
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [r8+rax+92]
	movss	DWORD PTR [rdx+rcx+92], xmm0
; Line 55
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [r8+rax+96]
	movss	DWORD PTR [rdx+rcx+96], xmm0
; Line 56
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [r8+rax+88]
	movss	DWORD PTR [rdx+rcx+88], xmm0
; Line 57
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [r8+rax+92]
	movss	DWORD PTR [rdx+rcx+92], xmm0
; Line 58
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [r8+rax+96]
	movss	DWORD PTR [rdx+rcx+96], xmm0
; Line 59
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetNormal@POLYGON@@QEAAXXZ ENDP			; POLYGON::SetNormal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
temp$ = 40
ux$ = 68
uy$ = 72
uz$ = 76
vx$ = 80
vy$ = 84
vz$ = 88
$T4 = 92
this$ = 128
__$ReturnUdt$ = 136
?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ PROC		; POLYGON::GetNormal
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 16
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	DWORD PTR $T4[rsp], 0
; Line 17
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR temp$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
; Line 24
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+76]
	subss	xmm0, DWORD PTR [r8+rcx+76]
	movss	DWORD PTR ux$[rsp], xmm0
; Line 25
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+80]
	subss	xmm0, DWORD PTR [r8+rcx+80]
	movss	DWORD PTR uy$[rsp], xmm0
; Line 26
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+84]
	subss	xmm0, DWORD PTR [r8+rcx+84]
	movss	DWORD PTR uz$[rsp], xmm0
; Line 27
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+76]
	subss	xmm0, DWORD PTR [r8+rcx+76]
	movss	DWORD PTR vx$[rsp], xmm0
; Line 28
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+80]
	subss	xmm0, DWORD PTR [r8+rcx+80]
	movss	DWORD PTR vy$[rsp], xmm0
; Line 29
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax+84]
	subss	xmm0, DWORD PTR [r8+rcx+84]
	movss	DWORD PTR vz$[rsp], xmm0
; Line 30
	movss	xmm0, DWORD PTR uy$[rsp]
	mulss	xmm0, DWORD PTR vz$[rsp]
	movss	xmm1, DWORD PTR vy$[rsp]
	mulss	xmm1, DWORD PTR uz$[rsp]
	subss	xmm0, xmm1
	movss	DWORD PTR temp$[rsp], xmm0
; Line 31
	movss	xmm0, DWORD PTR uz$[rsp]
	mulss	xmm0, DWORD PTR vx$[rsp]
	movss	xmm1, DWORD PTR vz$[rsp]
	mulss	xmm1, DWORD PTR ux$[rsp]
	subss	xmm0, xmm1
	movss	DWORD PTR temp$[rsp+4], xmm0
; Line 32
	movss	xmm0, DWORD PTR ux$[rsp]
	mulss	xmm0, DWORD PTR vy$[rsp]
	movss	xmm1, DWORD PTR vx$[rsp]
	mulss	xmm1, DWORD PTR uy$[rsp]
	subss	xmm0, xmm1
	movss	DWORD PTR temp$[rsp+8], xmm0
; Line 33
	lea	rax, QWORD PTR temp$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR temp$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 34
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?GetNormal@POLYGON@@QEAA?AVVECTOR@@XZ ENDP		; POLYGON::GetNormal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 48
??1POLYGON@@QEAA@XZ PROC				; POLYGON::~POLYGON
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 12
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 13
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 72					; 00000048H
	lea	r9, OFFSET FLAT:??1VERTEX@@QEAA@XZ	; VERTEX::~VERTEX
	mov	r8d, 3
	mov	edx, 36					; 00000024H
	mov	rcx, rax
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1TEXTURE@@QEAA@XZ			; TEXTURE::~TEXTURE
	npad	1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1POLYGON@@QEAA@XZ ENDP				; POLYGON::~POLYGON
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 64
??0POLYGON@@QEAA@XZ PROC				; POLYGON::POLYGON
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 8
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0TEXTURE@@QEAA@XZ			; TEXTURE::TEXTURE
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 72					; 00000048H
	lea	rcx, OFFSET FLAT:??1VERTEX@@QEAA@XZ	; VERTEX::~VERTEX
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??_FVERTEX@@QEAAXXZ
	mov	r8d, 3
	mov	edx, 36					; 00000024H
	mov	rcx, rax
	call	??_L@YAXPEAX_K1P6AX0@Z2@Z
	npad	1
; Line 9
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0POLYGON@@QEAA@XZ ENDP				; POLYGON::POLYGON
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 64
?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA PROC			; `POLYGON::POLYGON'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1TEXTURE@@QEAA@XZ			; TEXTURE::~TEXTURE
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0POLYGON@@QEAA@XZ@4HA ENDP			; `POLYGON::POLYGON'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_FVERTEX@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
??_FVERTEX@@QEAAXXZ PROC				; VERTEX::`default constructor closure', COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR this$[rsp]
	call	??0VERTEX@@QEAA@MMMMMM@Z		; VERTEX::VERTEX
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??_FVERTEX@@QEAAXXZ ENDP				; VERTEX::`default constructor closure'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 141
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\polygon.cpp
; Line 141
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
