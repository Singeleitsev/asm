; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33133.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?pi@@3MA					; pi
PUBLIC	?colorRGB@@3KA					; colorRGB
PUBLIC	?MainRect@@3UtagRECT@@A				; MainRect
PUBLIC	?LogFont@@3UtagLOGFONTA@@A			; LogFont
PUBLIC	?hFont@@3PEAUHFONT__@@EA			; hFont
PUBLIC	?hOldFont@@3PEAUHFONT__@@EA			; hOldFont
PUBLIC	?g_szMainClassName@@3PADA			; g_szMainClassName
PUBLIC	?g_szChild3DClassName@@3PADA			; g_szChild3DClassName
PUBLIC	?g_szChild2DClassName@@3PADA			; g_szChild2DClassName
PUBLIC	?g_hInst@@3PEAUHINSTANCE__@@EA			; g_hInst
PUBLIC	?g_hMDIClient@@3PEAUHWND__@@EA			; g_hMDIClient
PUBLIC	?g_hMainWindow@@3PEAUHWND__@@EA			; g_hMainWindow
PUBLIC	?g_rectChild@@3UtagRECT@@A			; g_rectChild
PUBLIC	?g_fCubeRotationX@@3MA				; g_fCubeRotationX
PUBLIC	?g_fCubeRotationY@@3MA				; g_fCubeRotationY
PUBLIC	?Zoom@@3MA					; Zoom
PUBLIC	?key@@3PA_NA					; key
PUBLIC	?released_key@@3PA_NA				; released_key
PUBLIC	?VerticalShift@@3HA				; VerticalShift
PUBLIC	?HorizontalShift@@3HA				; HorizontalShift
PUBLIC	?g_bMouseDrag@@3_NA				; g_bMouseDrag
PUBLIC	?g_iMouseLastX@@3HA				; g_iMouseLastX
PUBLIC	?g_iMouseLastY@@3HA				; g_iMouseLastY
PUBLIC	?g_iMouseDeltaX@@3HA				; g_iMouseDeltaX
PUBLIC	?g_iMouseDeltaY@@3HA				; g_iMouseDeltaY
PUBLIC	?VertexNumber@@3HA				; VertexNumber
PUBLIC	?ShortestDistance@@3HA				; ShortestDistance
PUBLIC	?MouseX@@3HA					; MouseX
PUBLIC	?MouseY@@3HA					; MouseY
PUBLIC	?FrontDepth@@3MA				; FrontDepth
PUBLIC	?TopDepth@@3MA					; TopDepth
PUBLIC	?LeftDepth@@3MA					; LeftDepth
PUBLIC	?g_bMouseDrag2@@3_NA				; g_bMouseDrag2
PUBLIC	?g_iMouseLastX2@@3HA				; g_iMouseLastX2
PUBLIC	?g_iMouseLastY2@@3HA				; g_iMouseLastY2
PUBLIC	?g_iMouseDeltaX2@@3HA				; g_iMouseDeltaX2
PUBLIC	?g_iMouseDeltaY2@@3HA				; g_iMouseDeltaY2
PUBLIC	?g_iMaxChild@@3HA				; g_iMaxChild
PUBLIC	?g_iNumChild@@3HA				; g_iNumChild
_BSS	SEGMENT
?colorRGB@@3KA DD 01H DUP (?)				; colorRGB
?MainRect@@3UtagRECT@@A DB 010H DUP (?)			; MainRect
?LogFont@@3UtagLOGFONTA@@A DB 03cH DUP (?)		; LogFont
?hFont@@3PEAUHFONT__@@EA DQ 01H DUP (?)			; hFont
?hOldFont@@3PEAUHFONT__@@EA DQ 01H DUP (?)		; hOldFont
?g_hInst@@3PEAUHINSTANCE__@@EA DQ 01H DUP (?)		; g_hInst
?g_hMDIClient@@3PEAUHWND__@@EA DQ 01H DUP (?)		; g_hMDIClient
?g_hMainWindow@@3PEAUHWND__@@EA DQ 01H DUP (?)		; g_hMainWindow
?g_rectChild@@3UtagRECT@@A DB 010H DUP (?)		; g_rectChild
?g_fCubeRotationX@@3MA DD 01H DUP (?)			; g_fCubeRotationX
?g_fCubeRotationY@@3MA DD 01H DUP (?)			; g_fCubeRotationY
?key@@3PA_NA DB	0100H DUP (?)				; key
?released_key@@3PA_NA DB 0100H DUP (?)			; released_key
?VerticalShift@@3HA DD 01H DUP (?)			; VerticalShift
?HorizontalShift@@3HA DD 01H DUP (?)			; HorizontalShift
?g_bMouseDrag@@3_NA DB 01H DUP (?)			; g_bMouseDrag
	ALIGN	4

?g_iMouseLastX@@3HA DD 01H DUP (?)			; g_iMouseLastX
?g_iMouseLastY@@3HA DD 01H DUP (?)			; g_iMouseLastY
?g_iMouseDeltaX@@3HA DD 01H DUP (?)			; g_iMouseDeltaX
?g_iMouseDeltaY@@3HA DD 01H DUP (?)			; g_iMouseDeltaY
?VertexNumber@@3HA DD 01H DUP (?)			; VertexNumber
?MouseX@@3HA DD	01H DUP (?)				; MouseX
?MouseY@@3HA DD	01H DUP (?)				; MouseY
?g_bMouseDrag2@@3_NA DB 01H DUP (?)			; g_bMouseDrag2
	ALIGN	4

?g_iMouseLastX2@@3HA DD 01H DUP (?)			; g_iMouseLastX2
?g_iMouseLastY2@@3HA DD 01H DUP (?)			; g_iMouseLastY2
?g_iMouseDeltaX2@@3HA DD 01H DUP (?)			; g_iMouseDeltaX2
?g_iMouseDeltaY2@@3HA DD 01H DUP (?)			; g_iMouseDeltaY2
?g_iNumChild@@3HA DD 01H DUP (?)			; g_iNumChild
_BSS	ENDS
CONST	SEGMENT
$SG123520 DB	'tile1.tga', 00H
	ORG $+2
$SG123521 DB	'%s', 00H
	ORG $+1
$SG123643 DB	'MDICLIENT', 00H
	ORG $+2
$SG123649 DB	'3D', 00H
	ORG $+1
$SG123651 DB	'Error', 00H
	ORG $+2
$SG123652 DB	'3D Child creation failed.', 00H
	ORG $+2
$SG123656 DB	'Front', 00H
	ORG $+2
$SG123658 DB	'Error', 00H
	ORG $+6
$SG123659 DB	'2D Child creation failed.', 00H
	ORG $+2
$SG123663 DB	'Top', 00H
$SG123665 DB	'Error', 00H
	ORG $+2
$SG123666 DB	'2D Child creation failed.', 00H
	ORG $+2
$SG123670 DB	'Left', 00H
	ORG $+3
$SG123672 DB	'Error', 00H
	ORG $+6
$SG123673 DB	'2D Child creation failed.', 00H
	ORG $+2
$SG123731 DB	'%d', 00H
	ORG $+1
$SG123753 DB	'Arial', 00H
	ORG $+2
$SG123754 DB	'%s', 00H
	ORG $+1
$SG123755 DB	'%d', 00H
	ORG $+1
$SG123853 DB	'%d', 00H
	ORG $+1
$SG123915 DB	'Error', 00H
	ORG $+6
$SG123916 DB	'Failed to register the child window.', 00H
	ORG $+3
$SG123918 DB	'Error', 00H
	ORG $+2
$SG123919 DB	'Failed to register the child window.', 00H
	ORG $+3
$SG123920 DB	'MAIN', 00H
	ORG $+3
$SG123922 DB	'Error', 00H
	ORG $+2
$SG123923 DB	'Failed to register the main window.', 00H
	ORG $+4
$SG123924 DB	'Al''s OpenGL MDI Example', 00H
$SG123926 DB	'ERROR', 00H
	ORG $+2
$SG123927 DB	'Failed to create window.', 00H
	ORG $+7
$SG126187 DB	'invalid argument', 00H
	ORG $+3
$SG126188 DB	'%s', 00H
	ORG $+9
$SG126189 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.38.33130\include\xmemory', 00H
	ORG $+14
$SG126190 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '8', 00H, '.', 00H, '3', 00H, '3'
	DB	00H, '1', 00H, '3', 00H, '0', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG126191 DB	00H, 00H
	ORG $+2
$SG126192 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
?pi@@3MA DD	040490fd8r			; 3.14159 ; pi
?Zoom@@3MA DD	03ccccccdr			; 0.025	; Zoom
?g_szMainClassName@@3PADA DB 'MainWindow', 00H		; g_szMainClassName
	ORG $+5
?g_szChild3DClassName@@3PADA DB '3DOpenGL', 00H		; g_szChild3DClassName
	ORG $+7
?g_szChild2DClassName@@3PADA DB '2DOpenGL', 00H		; g_szChild2DClassName
	ORG $+3
?ShortestDistance@@3HA DD 02710H			; ShortestDistance
?FrontDepth@@3MA DD 042b40000r			; 90	; FrontDepth
?TopDepth@@3MA DD 0c2b40000r			; -90	; TopDepth
?LeftDepth@@3MA DD 0c2b40000r			; -90	; LeftDepth
?g_iMaxChild@@3HA DD 032H				; g_iMaxChild
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	WinMain
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsnprintf_l
PUBLIC	_vsprintf_l
PUBLIC	sprintf
PUBLIC	??_FVERTEX@@QEAAXXZ				; VERTEX::`default constructor closure'
PUBLIC	??_EVERTEX@@QEAAPEAXI@Z				; VERTEX::`vector deleting destructor'
PUBLIC	??_ETEXTURE@@QEAAPEAXI@Z			; TEXTURE::`vector deleting destructor'
PUBLIC	??_EPOLYGON@@QEAAPEAXI@Z			; POLYGON::`vector deleting destructor'
PUBLIC	?SetTextures@@YAXXZ				; SetTextures
PUBLIC	?SetVertices@@YAXXZ				; SetVertices
PUBLIC	?SetPolygons@@YAXXZ				; SetPolygons
PUBLIC	?InitGL@@YAXXZ					; InitGL
PUBLIC	?Set3DProjection@@YAXHH@Z			; Set3DProjection
PUBLIC	?Set2DProjection@@YAXHH@Z			; Set2DProjection
PUBLIC	?Draw3DScene@@YAXXZ				; Draw3DScene
PUBLIC	?Draw2DSceneFront@@YAXPEAUHWND__@@@Z		; Draw2DSceneFront
PUBLIC	?Draw2DSceneTop@@YAXPEAUHWND__@@@Z		; Draw2DSceneTop
PUBLIC	?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z		; Draw2DSceneLeft
PUBLIC	?WndProc@@YA_JPEAUHWND__@@I_K_J@Z		; WndProc
PUBLIC	?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z	; Child3DWndProc
PUBLIC	?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z		; DrawWin32Text
PUBLIC	?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z	; Child2DWndProc
PUBLIC	??$sqrt@H$0A@@@YANH@Z				; sqrt<int,0>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?radians@@3MA					; radians
PUBLIC	?texture@@3PEAVTEXTURE@@EA			; texture
PUBLIC	?vertex@@3PEAVVERTEX@@EA			; vertex
PUBLIC	?polygon@@3PEAVPOLYGON@@EA			; polygon
PUBLIC	?sphere@@3PEAVGLUquadric@@EA			; sphere
PUBLIC	?g_child@@3PEAUCHILD@@EA			; g_child
PUBLIC	__real@00000000
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f666666
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4046800000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@409f400000000000
PUBLIC	__real@42b40000
PUBLIC	__real@42c80000
PUBLIC	__real@43340000
PUBLIC	__real@43480000
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c09f400000000000
PUBLIC	__real@c2c80000
PUBLIC	__real@c3fa0000
EXTRN	??_L@YAXPEAX_K1P6AX0@Z2@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	__report_rangecheckfailure:PROC
EXTRN	memset:PROC
EXTRN	__imp_ChoosePixelFormat:PROC
EXTRN	__imp_CreateFontIndirectA:PROC
EXTRN	__imp_DeleteObject:PROC
EXTRN	__imp_RestoreDC:PROC
EXTRN	__imp_SaveDC:PROC
EXTRN	__imp_SelectObject:PROC
EXTRN	__imp_SetBkMode:PROC
EXTRN	__imp_SetPixelFormat:PROC
EXTRN	__imp_SetTextColor:PROC
EXTRN	__imp_wglCreateContext:PROC
EXTRN	__imp_wglDeleteContext:PROC
EXTRN	__imp_wglMakeCurrent:PROC
EXTRN	__imp_SwapBuffers:PROC
EXTRN	__imp_GetMessageA:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp_DispatchMessageA:PROC
EXTRN	__imp_SendMessageA:PROC
EXTRN	__imp_PostMessageA:PROC
EXTRN	__imp_PostQuitMessage:PROC
EXTRN	__imp_RegisterClassExA:PROC
EXTRN	__imp_CreateWindowExA:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_ShowWindow:PROC
EXTRN	__imp_IsIconic:PROC
EXTRN	__imp_GetDlgCtrlID:PROC
EXTRN	__imp_SetCapture:PROC
EXTRN	__imp_ReleaseCapture:PROC
EXTRN	__imp_GetMenu:PROC
EXTRN	__imp_DrawMenuBar:PROC
EXTRN	__imp_EnableMenuItem:PROC
EXTRN	__imp_GetSubMenu:PROC
EXTRN	__imp_DrawTextA:PROC
EXTRN	__imp_UpdateWindow:PROC
EXTRN	__imp_GetDC:PROC
EXTRN	__imp_ReleaseDC:PROC
EXTRN	__imp_SetWindowTextA:PROC
EXTRN	__imp_GetClientRect:PROC
EXTRN	__imp_MessageBoxA:PROC
EXTRN	__imp_LoadCursorA:PROC
EXTRN	__imp_LoadIconA:PROC
EXTRN	__imp_DefFrameProcA:PROC
EXTRN	__imp_DefMDIChildProcA:PROC
EXTRN	__imp_TranslateMDISysAccel:PROC
EXTRN	sqrt:PROC
EXTRN	__stdio_common_vsprintf:PROC
EXTRN	__imp_glBegin:PROC
EXTRN	__imp_glBindTexture:PROC
EXTRN	__imp_glClear:PROC
EXTRN	__imp_glClearColor:PROC
EXTRN	__imp_glClearDepth:PROC
EXTRN	__imp_glColor4f:PROC
EXTRN	__imp_glCullFace:PROC
EXTRN	__imp_glDepthFunc:PROC
EXTRN	__imp_glDisable:PROC
EXTRN	__imp_glEnable:PROC
EXTRN	__imp_glEnd:PROC
EXTRN	__imp_glFlush:PROC
EXTRN	__imp_glLightfv:PROC
EXTRN	__imp_glLoadIdentity:PROC
EXTRN	__imp_glMaterialfv:PROC
EXTRN	__imp_glMatrixMode:PROC
EXTRN	__imp_glNormal3fv:PROC
EXTRN	__imp_glOrtho:PROC
EXTRN	__imp_glPopMatrix:PROC
EXTRN	__imp_glPushMatrix:PROC
EXTRN	__imp_glRotatef:PROC
EXTRN	__imp_glShadeModel:PROC
EXTRN	__imp_glTexCoord2f:PROC
EXTRN	__imp_glTranslatef:PROC
EXTRN	__imp_glVertex3fv:PROC
EXTRN	__imp_glViewport:PROC
EXTRN	gluPerspective:PROC
EXTRN	gluNewQuadric:PROC
EXTRN	gluQuadricOrientation:PROC
EXTRN	gluSphere:PROC
EXTRN	??0VERTEX@@QEAA@MMMMMM@Z:PROC			; VERTEX::VERTEX
EXTRN	??1VERTEX@@QEAA@XZ:PROC				; VERTEX::~VERTEX
EXTRN	??0TEXTURE@@QEAA@XZ:PROC			; TEXTURE::TEXTURE
EXTRN	??1TEXTURE@@QEAA@XZ:PROC			; TEXTURE::~TEXTURE
EXTRN	?LoadTGA@TEXTURE@@QEAA_NXZ:PROC			; TEXTURE::LoadTGA
EXTRN	??0POLYGON@@QEAA@XZ:PROC			; POLYGON::POLYGON
EXTRN	??1POLYGON@@QEAA@XZ:PROC			; POLYGON::~POLYGON
EXTRN	?SetNormal@POLYGON@@QEAAXXZ:PROC		; POLYGON::SetNormal
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_UninitUse:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?radians@@3MA DD 01H DUP (?)				; radians
	ALIGN	8

?texture@@3PEAVTEXTURE@@EA DQ 01H DUP (?)		; texture
?vertex@@3PEAVVERTEX@@EA DQ 01H DUP (?)			; vertex
?polygon@@3PEAVPOLYGON@@EA DQ 01H DUP (?)		; polygon
?sphere@@3PEAVGLUquadric@@EA DQ 01H DUP (?)		; sphere
?g_child@@3PEAUCHILD@@EA DQ 01H DUP (?)			; g_child
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
pdata	SEGMENT
$pdata$WinMain DD imagerel $LN32
	DD	imagerel $LN32+1919
	DD	imagerel $unwind$WinMain
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_l DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$_vsnprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_l DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$_vsprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$sprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_FVERTEX@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??_FVERTEX@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_EVERTEX@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+156
	DD	imagerel $unwind$??_EVERTEX@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_ETEXTURE@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+156
	DD	imagerel $unwind$??_ETEXTURE@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_EPOLYGON@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+159
	DD	imagerel $unwind$??_EPOLYGON@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eradians@@YAXXZ DD imagerel ??__Eradians@@YAXXZ
	DD	imagerel ??__Eradians@@YAXXZ+28
	DD	imagerel $unwind$??__Eradians@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Etexture@@YAXXZ DD imagerel ??__Etexture@@YAXXZ
	DD	imagerel ??__Etexture@@YAXXZ+141
	DD	imagerel $unwind$??__Etexture@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???__Etexture@@YAXXZ@4HA DD imagerel ?dtor$0@?0???__Etexture@@YAXXZ@4HA
	DD	imagerel ?dtor$0@?0???__Etexture@@YAXXZ@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???__Etexture@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Evertex@@YAXXZ DD imagerel ??__Evertex@@YAXXZ
	DD	imagerel ??__Evertex@@YAXXZ+141
	DD	imagerel $unwind$??__Evertex@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???__Evertex@@YAXXZ@4HA DD imagerel ?dtor$0@?0???__Evertex@@YAXXZ@4HA
	DD	imagerel ?dtor$0@?0???__Evertex@@YAXXZ@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???__Evertex@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Epolygon@@YAXXZ DD imagerel ??__Epolygon@@YAXXZ
	DD	imagerel ??__Epolygon@@YAXXZ+141
	DD	imagerel $unwind$??__Epolygon@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???__Epolygon@@YAXXZ@4HA DD imagerel ?dtor$0@?0???__Epolygon@@YAXXZ@4HA
	DD	imagerel ?dtor$0@?0???__Epolygon@@YAXXZ@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???__Epolygon@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Esphere@@YAXXZ DD imagerel ??__Esphere@@YAXXZ
	DD	imagerel ??__Esphere@@YAXXZ+24
	DD	imagerel $unwind$??__Esphere@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eg_child@@YAXXZ DD imagerel ??__Eg_child@@YAXXZ
	DD	imagerel ??__Eg_child@@YAXXZ+73
	DD	imagerel $unwind$??__Eg_child@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?SetTextures@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?SetTextures@@YAXXZ
$pdata$?SetVertices@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+724
	DD	imagerel $unwind$?SetVertices@@YAXXZ
$pdata$?SetPolygons@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+3136
	DD	imagerel $unwind$?SetPolygons@@YAXXZ
$pdata$?InitGL@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+758
	DD	imagerel $unwind$?InitGL@@YAXXZ
$pdata$?Set3DProjection@@YAXHH@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$?Set3DProjection@@YAXHH@Z
$pdata$?Set2DProjection@@YAXHH@Z DD imagerel $LN4
	DD	imagerel $LN4+202
	DD	imagerel $unwind$?Set2DProjection@@YAXHH@Z
$pdata$?Draw3DScene@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+3053
	DD	imagerel $unwind$?Draw3DScene@@YAXXZ
$pdata$?Draw2DSceneFront@@YAXPEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+4085
	DD	imagerel $unwind$?Draw2DSceneFront@@YAXPEAUHWND__@@@Z
$pdata$?Draw2DSceneTop@@YAXPEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+4113
	DD	imagerel $unwind$?Draw2DSceneTop@@YAXPEAUHWND__@@@Z
$pdata$?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+4113
	DD	imagerel $unwind$?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z
$pdata$?WndProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN48
	DD	imagerel $LN48+3812
	DD	imagerel $unwind$?WndProc@@YA_JPEAUHWND__@@I_K_J@Z
$pdata$?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN27
	DD	imagerel $LN27+1192
	DD	imagerel $unwind$?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z
$pdata$?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+524
	DD	imagerel $unwind$?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z
$pdata$?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN57
	DD	imagerel $LN57+3314
	DD	imagerel $unwind$?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sqrt@H$0A@@@YANH@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??$sqrt@H$0A@@@YANH@Z
pdata	ENDS
CRT$XCU	SEGMENT
?radians$initializer$@@3P6AXXZEA DQ FLAT:??__Eradians@@YAXXZ ; radians$initializer$
CRT$XCU	ENDS
;	COMDAT __real@c3fa0000
CONST	SEGMENT
__real@c3fa0000 DD 0c3fa0000r			; -500
CONST	ENDS
;	COMDAT __real@c2c80000
CONST	SEGMENT
__real@c2c80000 DD 0c2c80000r			; -100
CONST	ENDS
;	COMDAT __real@c09f400000000000
CONST	SEGMENT
__real@c09f400000000000 DQ 0c09f400000000000r	; -2000
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@409f400000000000
CONST	SEGMENT
__real@409f400000000000 DQ 0409f400000000000r	; 2000
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4046800000000000
CONST	SEGMENT
__real@4046800000000000 DQ 04046800000000000r	; 45
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sqrt@H$0A@@@YANH@Z DD 020901H
	DD	070055209H
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	03fH
	DD	0cd8H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z
	DD	03bH
	DD	01f9H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	03fH
	DD	048eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	03fH
	DD	0e89H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z
	DD	030H
	DD	0ff8H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Draw2DSceneTop@@YAXPEAUHWND__@@@Z
	DD	030H
	DD	0ff8H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Draw2DSceneFront@@YAXPEAUHWND__@@@Z
	DD	030H
	DD	0fdcH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?InitGL@@YAXXZ
	DD	024H
	DD	02ddH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eg_child@@YAXXZ DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Esphere@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???__Epolygon@@YAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__Epolygon@@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'*'
	DB	02H
	DB	0ccH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__Epolygon@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__Epolygon@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__Epolygon@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__Epolygon@@YAXXZ
	DD	imagerel $ip2state$??__Epolygon@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Epolygon@@YAXXZ DD 020611H
	DD	070029206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__Epolygon@@YAXXZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???__Evertex@@YAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__Evertex@@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'*'
	DB	02H
	DB	0ccH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__Evertex@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__Evertex@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__Evertex@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__Evertex@@YAXXZ
	DD	imagerel $ip2state$??__Evertex@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Evertex@@YAXXZ DD 020611H
	DD	070029206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__Evertex@@YAXXZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???__Etexture@@YAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__Etexture@@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'*'
	DB	02H
	DB	0ccH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__Etexture@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__Etexture@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__Etexture@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__Etexture@@YAXXZ
	DD	imagerel $ip2state$??__Etexture@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Etexture@@YAXXZ DD 020611H
	DD	070029206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__Etexture@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eradians@@YAXXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_EPOLYGON@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_EPOLYGON@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_EPOLYGON@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_EPOLYGON@@QEAAPEAXI@Z DD 020e19H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_EPOLYGON@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_ETEXTURE@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_ETEXTURE@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_ETEXTURE@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_ETEXTURE@@QEAAPEAXI@Z DD 020e19H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_ETEXTURE@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_EVERTEX@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_EVERTEX@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_EVERTEX@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_EVERTEX@@QEAAPEAXI@Z DD 020e19H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_EVERTEX@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_FVERTEX@@QEAAXXZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf DD 022f01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
sprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
sprintf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:sprintf$rtcName$0
	ORG $+48
sprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:sprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_l DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_l DD 021901H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
xdata	SEGMENT
$unwind$WinMain DD 033501H
	DD	024011cH
	DD	07015H
$unwind$?SetTextures@@YAXXZ DD 020601H
	DD	070023206H
$unwind$?SetVertices@@YAXXZ DD 010201H
	DD	07002H
$unwind$?SetPolygons@@YAXXZ DD 040a01H
	DD	029010aH
	DD	060027003H
$unwind$?InitGL@@YAXXZ DD 032c19H
	DD	02e0109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0160H
$unwind$?Set3DProjection@@YAXHH@Z DD 020d01H
	DD	07009320dH
$unwind$?Set2DProjection@@YAXHH@Z DD 020d01H
	DD	07009720dH
$unwind$?Draw3DScene@@YAXXZ DD 020601H
	DD	070023206H
$unwind$?Draw2DSceneFront@@YAXPEAUHWND__@@@Z DD 033819H
	DD	018010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0b0H
$unwind$?Draw2DSceneTop@@YAXPEAUHWND__@@@Z DD 033819H
	DD	018010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0b0H
$unwind$?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z DD 033819H
	DD	018010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0b0H
$unwind$?WndProc@@YA_JPEAUHWND__@@I_K_J@Z DD 044719H
	DD	087011cH
	DD	060147015H
	DD	imagerel __GSHandlerCheck
	DD	0420H
$unwind$?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z DD 044719H
	DD	013011cH
	DD	060147015H
	DD	imagerel __GSHandlerCheck
	DD	088H
$unwind$?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z DD 024019H
	DD	07014d218H
	DD	imagerel __GSHandlerCheck
	DD	060H
$unwind$?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z DD 044719H
	DD	021011cH
	DD	060147015H
	DD	imagerel __GSHandlerCheck
	DD	0f0H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
WinMain$rtcName$0 DB 04dH
	DB	073H
	DB	067H
	DB	00H
WinMain$rtcName$1 DB 077H
	DB	063H
	DB	00H
	ORG $+9
WinMain$rtcVarDesc DD 0c0H
	DD	050H
	DQ	FLAT:WinMain$rtcName$1
	DD	068H
	DD	030H
	DQ	FLAT:WinMain$rtcName$0
	ORG $+96
WinMain$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:WinMain$rtcVarDesc
?InitGL@@YAXXZ$rtcName$0 DB 066H			; InitGL
	DB	04dH
	DB	061H
	DB	074H
	DB	041H
	DB	06dH
	DB	062H
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+4
?InitGL@@YAXXZ$rtcName$1 DB 066H			; InitGL
	DB	04dH
	DB	061H
	DB	074H
	DB	044H
	DB	069H
	DB	066H
	DB	066H
	DB	075H
	DB	073H
	DB	065H
	DB	00H
	ORG $+4
?InitGL@@YAXXZ$rtcName$2 DB 066H			; InitGL
	DB	04dH
	DB	061H
	DB	074H
	DB	053H
	DB	070H
	DB	065H
	DB	063H
	DB	075H
	DB	06cH
	DB	061H
	DB	072H
	DB	00H
	ORG $+3
?InitGL@@YAXXZ$rtcName$3 DB 066H			; InitGL
	DB	04dH
	DB	061H
	DB	074H
	DB	045H
	DB	06dH
	DB	06dH
	DB	069H
	DB	073H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+3
?InitGL@@YAXXZ$rtcName$4 DB 066H			; InitGL
	DB	04dH
	DB	061H
	DB	074H
	DB	053H
	DB	068H
	DB	069H
	DB	06eH
	DB	069H
	DB	06eH
	DB	065H
	DB	073H
	DB	073H
	DB	00H
	ORG $+2
?InitGL@@YAXXZ$rtcName$5 DB 066H			; InitGL
	DB	04cH
	DB	069H
	DB	067H
	DB	068H
	DB	074H
	DB	041H
	DB	06dH
	DB	062H
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+2
?InitGL@@YAXXZ$rtcName$6 DB 066H			; InitGL
	DB	04cH
	DB	069H
	DB	067H
	DB	068H
	DB	074H
	DB	050H
	DB	06fH
	DB	073H
	DB	069H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+1
?InitGL@@YAXXZ$rtcVarDesc DD 0138H			; InitGL
	DD	010H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$6
	DD	0108H
	DD	010H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$5
	DD	0e4H
	DD	04H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$4
	DD	0b8H
	DD	010H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?InitGL@@YAXXZ$rtcName$0
	ORG $+336
?InitGL@@YAXXZ$rtcFrameData DD 07H			; InitGL
	DD	00H
	DQ	FLAT:?InitGL@@YAXXZ$rtcVarDesc
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcName$0 DB 057H	; Draw2DSceneFront
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcName$1 DB 06dH	; Draw2DSceneFront
	DB	061H
	DB	074H
	DB	05fH
	DB	061H
	DB	06dH
	DB	062H
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+4
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcName$2 DB 06dH	; Draw2DSceneFront
	DB	061H
	DB	074H
	DB	05fH
	DB	064H
	DB	069H
	DB	066H
	DB	066H
	DB	075H
	DB	073H
	DB	065H
	DB	00H
	ORG $+4
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcVarDesc DD 088H	; Draw2DSceneFront
	DD	010H
	DQ	FLAT:?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcName$0
	ORG $+144
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcFrameData DD 03H ; Draw2DSceneFront
	DD	00H
	DQ	FLAT:?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcVarDesc
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcName$0 DB 057H	; Draw2DSceneTop
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcName$1 DB 06dH	; Draw2DSceneTop
	DB	061H
	DB	074H
	DB	05fH
	DB	061H
	DB	06dH
	DB	062H
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+4
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcName$2 DB 06dH	; Draw2DSceneTop
	DB	061H
	DB	074H
	DB	05fH
	DB	064H
	DB	069H
	DB	066H
	DB	066H
	DB	075H
	DB	073H
	DB	065H
	DB	00H
	ORG $+4
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcVarDesc DD 088H	; Draw2DSceneTop
	DD	010H
	DQ	FLAT:?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcName$0
	ORG $+144
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcFrameData DD 03H	; Draw2DSceneTop
	DD	00H
	DQ	FLAT:?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcVarDesc
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcName$0 DB 057H	; Draw2DSceneLeft
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcName$1 DB 06dH	; Draw2DSceneLeft
	DB	061H
	DB	074H
	DB	05fH
	DB	061H
	DB	06dH
	DB	062H
	DB	069H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+4
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcName$2 DB 06dH	; Draw2DSceneLeft
	DB	061H
	DB	074H
	DB	05fH
	DB	064H
	DB	069H
	DB	066H
	DB	066H
	DB	075H
	DB	073H
	DB	065H
	DB	00H
	ORG $+4
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcVarDesc DD 088H	; Draw2DSceneLeft
	DD	010H
	DQ	FLAT:?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcName$0
	ORG $+144
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcFrameData DD 03H	; Draw2DSceneLeft
	DD	00H
	DQ	FLAT:?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcVarDesc
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0 DB 063H	; WndProc
	DB	063H
	DB	073H
	DB	00H
	ORG $+4
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1 DB 073H	; WndProc
	DB	07aH
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	054H
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$2 DB 063H	; WndProc
	DB	073H
	DB	00H
	ORG $+1
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$3 DB 070H	; WndProc
	DB	066H
	DB	064H
	DB	00H
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$4 DB 073H	; WndProc
	DB	07aH
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	054H
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$5 DB 063H	; WndProc
	DB	073H
	DB	00H
	ORG $+1
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$6 DB 070H	; WndProc
	DB	066H
	DB	064H
	DB	00H
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$7 DB 073H	; WndProc
	DB	07aH
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	054H
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$8 DB 063H	; WndProc
	DB	073H
	DB	00H
	ORG $+1
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$9 DB 070H	; WndProc
	DB	066H
	DB	064H
	DB	00H
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$10 DB 073H	; WndProc
	DB	07aH
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	054H
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$11 DB 063H	; WndProc
	DB	073H
	DB	00H
	ORG $+1
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$12 DB 070H	; WndProc
	DB	066H
	DB	064H
	DB	00H
	ORG $+8
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcVarDesc DD 0398H	; WndProc
	DD	028H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$12
	DD	0330H
	DD	050H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$11
	DD	0304H
	DD	05H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$10
	DD	02c8H
	DD	028H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$9
	DD	0260H
	DD	050H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$8
	DD	0234H
	DD	04H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$7
	DD	01f8H
	DD	028H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$6
	DD	0190H
	DD	050H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$5
	DD	0164H
	DD	06H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$4
	DD	0128H
	DD	028H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$3
	DD	0c0H
	DD	050H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$2
	DD	094H
	DD	03H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1
	DD	068H
	DD	010H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0
	ORG $+624
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcFrameData DD 0dH	; WndProc
	DD	00H
	DQ	FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcVarDesc
?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0 DB 073H ; Child3DWndProc
	DB	07aH
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	054H
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcVarDesc DD 038H ; Child3DWndProc
	DD	014H
	DQ	FLAT:?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0
	ORG $+48
?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcFrameData DD 01H ; Child3DWndProc
	DD	00H
	DQ	FLAT:?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcVarDesc
?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z$rtcName$0 DB 074H	; DrawWin32Text
	DB	065H
	DB	06dH
	DB	070H
	DB	073H
	DB	074H
	DB	072H
	DB	069H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+5
?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z$rtcVarDesc DD 038H	; DrawWin32Text
	DD	014H
	DQ	FLAT:?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z$rtcName$0
	ORG $+48
?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z$rtcFrameData DD 01H ; DrawWin32Text
	DD	00H
	DQ	FLAT:?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z$rtcVarDesc
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0 DB 054H ; Child2DWndProc
	DB	065H
	DB	06dH
	DB	070H
	DB	058H
	DB	00H
	ORG $+2
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1 DB 054H ; Child2DWndProc
	DB	065H
	DB	06dH
	DB	070H
	DB	059H
	DB	00H
	ORG $+2
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$2 DB 057H ; Child2DWndProc
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$3 DB 057H ; Child2DWndProc
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	052H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$4 DB 073H ; Child2DWndProc
	DB	07aH
	DB	057H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	054H
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcVarDesc DD 098H ; Child2DWndProc
	DD	014H
	DQ	FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$4
	DD	058H
	DD	010H
	DQ	FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$3
	DD	028H
	DD	010H
	DQ	FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$2
	ORG $+144
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcFrameData DD 03H ; Child2DWndProc
	DD	00H
	DQ	FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?texture$initializer$@@3P6AXXZEA DQ FLAT:??__Etexture@@YAXXZ ; texture$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?vertex$initializer$@@3P6AXXZEA DQ FLAT:??__Evertex@@YAXXZ ; vertex$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?polygon$initializer$@@3P6AXXZEA DQ FLAT:??__Epolygon@@YAXXZ ; polygon$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?sphere$initializer$@@3P6AXXZEA DQ FLAT:??__Esphere@@YAXXZ ; sphere$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?g_child$initializer$@@3P6AXXZEA DQ FLAT:??__Eg_child@@YAXXZ ; g_child$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$sqrt@H$0A@@@YANH@Z
_TEXT	SEGMENT
_Left$ = 64
??$sqrt@H$0A@@@YANH@Z PROC				; sqrt<int,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cmath
; Line 674
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H
	cvtsi2sd xmm0, DWORD PTR _Left$[rsp]
	call	sqrt
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$sqrt@H$0A@@@YANH@Z ENDP				; sqrt<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
WindowRect$8 = 40
iThisChild$9 = 68
WindowRect$10 = 88
iThisChild$11 = 116
Loop$12 = 120
TempX$13 = 124
TempY$14 = 128
iLoop$15 = 132
iThisChild$16 = 136
szWindowTitle$17 = 152
hMenu$18 = 184
hFileMenu$19 = 192
uEnableFlag$20 = 200
$T21 = 216
$T22 = 224
$T23 = 225
tv64 = 228
tv470 = 232
__$ArrayPad$ = 240
hWnd$ = 288
uMessage$ = 296
wParam$ = 304
lParam$ = 312
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z PROC		; Child2DWndProc
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 1300
$LN57:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+288]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1301
	mov	eax, DWORD PTR uMessage$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 273		; 00000111H
	ja	SHORT $LN48@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 273		; 00000111H
	je	$LN44@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 5
	je	SHORT $LN12@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 16
	je	$LN37@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 256		; 00000100H
	je	$LN17@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 257		; 00000101H
	je	$LN18@Child2DWnd
	jmp	$LN2@Child2DWnd
$LN48@Child2DWnd:
	cmp	DWORD PTR tv64[rsp], 512		; 00000200H
	je	$LN21@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 513		; 00000201H
	je	$LN19@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 514		; 00000202H
	je	$LN20@Child2DWnd
	cmp	DWORD PTR tv64[rsp], 546		; 00000222H
	je	$LN41@Child2DWnd
	jmp	$LN2@Child2DWnd
$LN12@Child2DWnd:
; Line 1305
	cmp	QWORD PTR wParam$[rsp], 1
	je	$LN13@Child2DWnd
; Line 1308
	lea	rdx, QWORD PTR WindowRect$8[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetClientRect
; Line 1309
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgCtrlID
	sub	eax, 50000				; 0000c350H
	mov	DWORD PTR iThisChild$9[rsp], eax
; Line 1310
	movsxd	rax, DWORD PTR iThisChild$9[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 2
	jne	SHORT $LN14@Child2DWnd
; Line 1312
	cvtsi2sd xmm0, DWORD PTR WindowRect$8[rsp+12]
	movsd	xmm1, QWORD PTR __real@bfe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@4024000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?TopDepth@@3MA, xmm0		; TopDepth
; Line 1313
	cvtsi2sd xmm0, DWORD PTR WindowRect$8[rsp+8]
	movsd	xmm1, QWORD PTR __real@bfe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@4024000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?LeftDepth@@3MA, xmm0		; LeftDepth
$LN14@Child2DWnd:
; Line 1315
	movsxd	rax, DWORD PTR iThisChild$9[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 3
	jne	SHORT $LN15@Child2DWnd
; Line 1317
	cvtsi2sd xmm0, DWORD PTR WindowRect$8[rsp+12]
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	subsd	xmm0, QWORD PTR __real@4024000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?FrontDepth@@3MA, xmm0	; FrontDepth
; Line 1318
	cvtsi2sd xmm0, DWORD PTR WindowRect$8[rsp+8]
	movsd	xmm1, QWORD PTR __real@bfe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@4024000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?LeftDepth@@3MA, xmm0		; LeftDepth
$LN15@Child2DWnd:
; Line 1320
	movsxd	rax, DWORD PTR iThisChild$9[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 4
	jne	SHORT $LN16@Child2DWnd
; Line 1322
	cvtsi2sd xmm0, DWORD PTR WindowRect$8[rsp+8]
	movsd	xmm1, QWORD PTR __real@bfe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@4024000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?FrontDepth@@3MA, xmm0	; FrontDepth
; Line 1323
	cvtsi2sd xmm0, DWORD PTR WindowRect$8[rsp+12]
	movsd	xmm1, QWORD PTR __real@bfe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@4024000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?TopDepth@@3MA, xmm0		; TopDepth
$LN16@Child2DWnd:
$LN13@Child2DWnd:
; Line 1327
	jmp	$LN2@Child2DWnd
$LN17@Child2DWnd:
; Line 1330
	lea	rax, OFFSET FLAT:?key@@3PA_NA		; key
	mov	rcx, QWORD PTR wParam$[rsp]
	mov	BYTE PTR [rax+rcx], 1
; Line 1331
	jmp	$LN2@Child2DWnd
$LN18@Child2DWnd:
; Line 1334
	mov	rax, QWORD PTR wParam$[rsp]
	mov	QWORD PTR $T21[rsp], rax
	cmp	QWORD PTR $T21[rsp], 256		; 00000100H
	jae	SHORT $LN46@Child2DWnd
	jmp	SHORT $LN47@Child2DWnd
$LN46@Child2DWnd:
	call	__report_rangecheckfailure
$LN47@Child2DWnd:
	lea	rax, OFFSET FLAT:?key@@3PA_NA		; key
	mov	rcx, QWORD PTR $T21[rsp]
	mov	BYTE PTR [rax+rcx], 0
; Line 1335
	jmp	$LN2@Child2DWnd
$LN19@Child2DWnd:
; Line 1338
	mov	BYTE PTR ?g_bMouseDrag2@@3_NA, 1	; g_bMouseDrag2
; Line 1339
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?g_iMouseLastX2@@3HA, eax	; g_iMouseLastX2
; Line 1340
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?g_iMouseLastY2@@3HA, eax	; g_iMouseLastY2
; Line 1341
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_SetCapture
; Line 1342
	jmp	$LN2@Child2DWnd
$LN20@Child2DWnd:
; Line 1345
	mov	BYTE PTR ?g_bMouseDrag2@@3_NA, 0	; g_bMouseDrag2
; Line 1346
	call	QWORD PTR __imp_ReleaseCapture
; Line 1347
	jmp	$LN2@Child2DWnd
$LN21@Child2DWnd:
; Line 1352
	lea	rdx, QWORD PTR WindowRect$10[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetClientRect
; Line 1353
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?MouseX@@3HA, eax		; MouseX
; Line 1354
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?MouseY@@3HA, eax		; MouseY
; Line 1355
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgCtrlID
	sub	eax, 50000				; 0000c350H
	mov	DWORD PTR iThisChild$11[rsp], eax
; Line 1356
	movzx	eax, BYTE PTR ?g_bMouseDrag2@@3_NA	; g_bMouseDrag2
	test	eax, eax
	je	$LN22@Child2DWnd
; Line 1358
	mov	eax, DWORD PTR WindowRect$10[rsp]
	cmp	DWORD PTR ?MouseX@@3HA, eax		; MouseX
	jl	SHORT $LN24@Child2DWnd
	mov	eax, DWORD PTR WindowRect$10[rsp+8]
	cmp	DWORD PTR ?MouseX@@3HA, eax		; MouseX
	jle	SHORT $LN23@Child2DWnd
$LN24@Child2DWnd:
; Line 1360
	mov	eax, DWORD PTR ?g_iMouseLastX2@@3HA	; g_iMouseLastX2
	mov	DWORD PTR ?MouseX@@3HA, eax		; MouseX
$LN23@Child2DWnd:
; Line 1362
	mov	eax, DWORD PTR WindowRect$10[rsp+4]
	cmp	DWORD PTR ?MouseY@@3HA, eax		; MouseY
	jl	SHORT $LN26@Child2DWnd
	mov	eax, DWORD PTR WindowRect$10[rsp+12]
	cmp	DWORD PTR ?MouseY@@3HA, eax		; MouseY
	jle	SHORT $LN25@Child2DWnd
$LN26@Child2DWnd:
; Line 1364
	mov	eax, DWORD PTR ?g_iMouseLastY2@@3HA	; g_iMouseLastY2
	mov	DWORD PTR ?MouseY@@3HA, eax		; MouseY
$LN25@Child2DWnd:
; Line 1366
	mov	eax, DWORD PTR ?g_iMouseLastX2@@3HA	; g_iMouseLastX2
	mov	ecx, DWORD PTR ?MouseX@@3HA		; MouseX
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR ?g_iMouseDeltaX2@@3HA, eax	; g_iMouseDeltaX2
; Line 1367
	mov	eax, DWORD PTR ?g_iMouseLastY2@@3HA	; g_iMouseLastY2
	mov	ecx, DWORD PTR ?MouseY@@3HA		; MouseY
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR ?g_iMouseDeltaY2@@3HA, eax	; g_iMouseDeltaY2
; Line 1368
	mov	eax, DWORD PTR ?MouseX@@3HA		; MouseX
	mov	DWORD PTR ?g_iMouseLastX2@@3HA, eax	; g_iMouseLastX2
; Line 1369
	mov	eax, DWORD PTR ?MouseY@@3HA		; MouseY
	mov	DWORD PTR ?g_iMouseLastY2@@3HA, eax	; g_iMouseLastY2
; Line 1370
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 2
	jne	$LN27@Child2DWnd
; Line 1372
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaX2@@3HA	; g_iMouseDeltaX2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	cvtss2sd xmm1, DWORD PTR [rcx+rax+4]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsd2ss xmm0, xmm0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 1373
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaY2@@3HA	; g_iMouseDeltaY2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	cvtss2sd xmm1, DWORD PTR [rcx+rax+8]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsd2ss xmm0, xmm0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	DWORD PTR [rcx+rax+8], xmm0
$LN27@Child2DWnd:
; Line 1375
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 3
	jne	$LN28@Child2DWnd
; Line 1377
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaX2@@3HA	; g_iMouseDeltaX2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	cvtss2sd xmm1, DWORD PTR [rcx+rax+4]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsd2ss xmm0, xmm0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 1378
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaY2@@3HA	; g_iMouseDeltaY2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	cvtss2sd xmm1, DWORD PTR [rcx+rax+12]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsd2ss xmm0, xmm0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	DWORD PTR [rcx+rax+12], xmm0
$LN28@Child2DWnd:
; Line 1380
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 4
	jne	$LN29@Child2DWnd
; Line 1382
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaX2@@3HA	; g_iMouseDeltaX2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	cvtss2sd xmm1, DWORD PTR [rcx+rax+12]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsd2ss xmm0, xmm0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 1383
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaY2@@3HA	; g_iMouseDeltaY2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	cvtss2sd xmm1, DWORD PTR [rcx+rax+8]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	cvtsd2ss xmm0, xmm0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	DWORD PTR [rcx+rax+8], xmm0
$LN29@Child2DWnd:
; Line 1385
	call	?SetPolygons@@YAXXZ			; SetPolygons
$LN22@Child2DWnd:
; Line 1388
	movzx	eax, BYTE PTR ?g_bMouseDrag2@@3_NA	; g_bMouseDrag2
	test	eax, eax
	jne	$LN30@Child2DWnd
; Line 1389
	mov	BYTE PTR $T22[rsp], 0
	mov	BYTE PTR $T23[rsp], 0
; Line 1390
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	cvtsi2sd xmm0, eax
	cvtsi2sd xmm1, DWORD PTR WindowRect$10[rsp+8]
	movsd	xmm2, QWORD PTR __real@bfe0000000000000
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm2
	addsd	xmm0, xmm1
	cvttsd2si eax, xmm0
	mov	DWORD PTR ?MouseX@@3HA, eax		; MouseX
; Line 1391
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 3
	jne	SHORT $LN31@Child2DWnd
; Line 1392
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	cvtsi2sd xmm0, eax
	cvtsi2sd xmm1, DWORD PTR WindowRect$10[rsp+12]
	movsd	xmm2, QWORD PTR __real@bfe0000000000000
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm2
	addsd	xmm0, xmm1
	cvttsd2si eax, xmm0
	mov	DWORD PTR ?MouseY@@3HA, eax		; MouseY
	jmp	SHORT $LN32@Child2DWnd
$LN31@Child2DWnd:
; Line 1394
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	cvtsi2sd xmm0, eax
	cvtsi2sd xmm1, DWORD PTR WindowRect$10[rsp+12]
	movsd	xmm2, QWORD PTR __real@bfe0000000000000
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm2
	addsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@bff0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvttsd2si eax, xmm0
	mov	DWORD PTR ?MouseY@@3HA, eax		; MouseY
$LN32@Child2DWnd:
; Line 1395
	mov	DWORD PTR ?ShortestDistance@@3HA, 10000	; ShortestDistance, 00002710H
; Line 1399
	mov	DWORD PTR Loop$12[rsp], 0
	jmp	SHORT $LN6@Child2DWnd
$LN4@Child2DWnd:
	mov	eax, DWORD PTR Loop$12[rsp]
	inc	eax
	mov	DWORD PTR Loop$12[rsp], eax
$LN6@Child2DWnd:
	cmp	DWORD PTR Loop$12[rsp], 8
	jge	$LN5@Child2DWnd
; Line 1401
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgCtrlID
	sub	eax, 50000				; 0000c350H
	mov	DWORD PTR iThisChild$11[rsp], eax
; Line 1402
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 2
	jne	SHORT $LN33@Child2DWnd
; Line 1404
	cvtsi2ss xmm0, DWORD PTR ?MouseX@@3HA		; MouseX
	movsxd	rax, DWORD PTR Loop$12[rsp]
	imul	rax, rax, 36				; 00000024H
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	subss	xmm0, DWORD PTR [rcx+rax+4]
	cvttss2si eax, xmm0
	mov	BYTE PTR $T22[rsp], 1
	mov	DWORD PTR TempX$13[rsp], eax
; Line 1405
	cvtsi2ss xmm0, DWORD PTR ?MouseY@@3HA		; MouseY
	movsxd	rax, DWORD PTR Loop$12[rsp]
	imul	rax, rax, 36				; 00000024H
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	subss	xmm0, DWORD PTR [rcx+rax+8]
	cvttss2si eax, xmm0
	mov	BYTE PTR $T23[rsp], 1
	mov	DWORD PTR TempY$14[rsp], eax
$LN33@Child2DWnd:
; Line 1407
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 3
	jne	SHORT $LN34@Child2DWnd
; Line 1409
	cvtsi2ss xmm0, DWORD PTR ?MouseX@@3HA		; MouseX
	movsxd	rax, DWORD PTR Loop$12[rsp]
	imul	rax, rax, 36				; 00000024H
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	subss	xmm0, DWORD PTR [rcx+rax+4]
	cvttss2si eax, xmm0
	mov	BYTE PTR $T22[rsp], 1
	mov	DWORD PTR TempX$13[rsp], eax
; Line 1410
	cvtsi2ss xmm0, DWORD PTR ?MouseY@@3HA		; MouseY
	movsxd	rax, DWORD PTR Loop$12[rsp]
	imul	rax, rax, 36				; 00000024H
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	subss	xmm0, DWORD PTR [rcx+rax+12]
	cvttss2si eax, xmm0
	mov	BYTE PTR $T23[rsp], 1
	mov	DWORD PTR TempY$14[rsp], eax
$LN34@Child2DWnd:
; Line 1412
	movsxd	rax, DWORD PTR iThisChild$11[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 4
	jne	SHORT $LN35@Child2DWnd
; Line 1414
	cvtsi2ss xmm0, DWORD PTR ?MouseX@@3HA		; MouseX
	movsxd	rax, DWORD PTR Loop$12[rsp]
	imul	rax, rax, 36				; 00000024H
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	subss	xmm0, DWORD PTR [rcx+rax+12]
	cvttss2si eax, xmm0
	mov	BYTE PTR $T22[rsp], 1
	mov	DWORD PTR TempX$13[rsp], eax
; Line 1415
	cvtsi2ss xmm0, DWORD PTR ?MouseY@@3HA		; MouseY
	movsxd	rax, DWORD PTR Loop$12[rsp]
	imul	rax, rax, 36				; 00000024H
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	subss	xmm0, DWORD PTR [rcx+rax+8]
	cvttss2si eax, xmm0
	mov	BYTE PTR $T23[rsp], 1
	mov	DWORD PTR TempY$14[rsp], eax
$LN35@Child2DWnd:
; Line 1417
	cmp	BYTE PTR $T22[rsp], 0
	jne	SHORT $LN49@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0
	call	_RTC_UninitUse
$LN49@Child2DWnd:
	cmp	BYTE PTR $T22[rsp], 0
	jne	SHORT $LN50@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0
	call	_RTC_UninitUse
$LN50@Child2DWnd:
	cmp	BYTE PTR $T23[rsp], 0
	jne	SHORT $LN51@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1
	call	_RTC_UninitUse
$LN51@Child2DWnd:
	cmp	BYTE PTR $T23[rsp], 0
	jne	SHORT $LN52@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1
	call	_RTC_UninitUse
$LN52@Child2DWnd:
	mov	eax, DWORD PTR TempX$13[rsp]
	imul	eax, DWORD PTR TempX$13[rsp]
	mov	ecx, DWORD PTR TempY$14[rsp]
	imul	ecx, DWORD PTR TempY$14[rsp]
	add	eax, ecx
	mov	ecx, eax
	call	??$sqrt@H$0A@@@YANH@Z			; sqrt<int,0>
	cvtsi2sd xmm1, DWORD PTR ?ShortestDistance@@3HA	; ShortestDistance
	comisd	xmm1, xmm0
	jbe	$LN36@Child2DWnd
; Line 1419
	cmp	BYTE PTR $T22[rsp], 0
	jne	SHORT $LN53@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0
	call	_RTC_UninitUse
$LN53@Child2DWnd:
	cmp	BYTE PTR $T22[rsp], 0
	jne	SHORT $LN54@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$0
	call	_RTC_UninitUse
$LN54@Child2DWnd:
	cmp	BYTE PTR $T23[rsp], 0
	jne	SHORT $LN55@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1
	call	_RTC_UninitUse
$LN55@Child2DWnd:
	cmp	BYTE PTR $T23[rsp], 0
	jne	SHORT $LN56@Child2DWnd
	lea	rcx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcName$1
	call	_RTC_UninitUse
$LN56@Child2DWnd:
	mov	eax, DWORD PTR TempX$13[rsp]
	imul	eax, DWORD PTR TempX$13[rsp]
	mov	ecx, DWORD PTR TempY$14[rsp]
	imul	ecx, DWORD PTR TempY$14[rsp]
	add	eax, ecx
	mov	ecx, eax
	call	??$sqrt@H$0A@@@YANH@Z			; sqrt<int,0>
	cvttsd2si eax, xmm0
	mov	DWORD PTR ?ShortestDistance@@3HA, eax	; ShortestDistance
; Line 1420
	mov	eax, DWORD PTR Loop$12[rsp]
	mov	DWORD PTR ?VertexNumber@@3HA, eax	; VertexNumber
$LN36@Child2DWnd:
; Line 1422
	jmp	$LN4@Child2DWnd
$LN5@Child2DWnd:
$LN30@Child2DWnd:
; Line 1428
	jmp	$LN2@Child2DWnd
$LN37@Child2DWnd:
; Line 1431
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	mov	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
; Line 1432
	cmp	DWORD PTR ?g_iNumChild@@3HA, 0		; g_iNumChild
	jne	SHORT $LN38@Child2DWnd
; Line 1434
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_wglMakeCurrent
; Line 1435
	mov	eax, 32					; 00000020H
	imul	rax, rax, 0
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+8]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+24]
	call	QWORD PTR __imp_ReleaseDC
; Line 1436
	mov	eax, 32					; 00000020H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+16]
	call	QWORD PTR __imp_wglDeleteContext
; Line 1437
	jmp	$LN39@Child2DWnd
$LN38@Child2DWnd:
; Line 1443
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgCtrlID
	sub	eax, 50000				; 0000c350H
	mov	DWORD PTR iThisChild$16[rsp], eax
; Line 1444
	movsxd	rax, DWORD PTR iThisChild$16[rsp]
	imul	rax, rax, 32				; 00000020H
	movsxd	rcx, DWORD PTR iThisChild$16[rsp]
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+8]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+24]
	call	QWORD PTR __imp_ReleaseDC
; Line 1445
	movsxd	rax, DWORD PTR iThisChild$16[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+16]
	call	QWORD PTR __imp_wglDeleteContext
; Line 1446
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	cmp	DWORD PTR iThisChild$16[rsp], eax
	je	$LN40@Child2DWnd
; Line 1448
	mov	eax, DWORD PTR iThisChild$16[rsp]
	mov	DWORD PTR iLoop$15[rsp], eax
	jmp	SHORT $LN9@Child2DWnd
$LN7@Child2DWnd:
	mov	eax, DWORD PTR iLoop$15[rsp]
	inc	eax
	mov	DWORD PTR iLoop$15[rsp], eax
$LN9@Child2DWnd:
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	cmp	DWORD PTR iLoop$15[rsp], eax
	jge	SHORT $LN8@Child2DWnd
; Line 1450
	mov	eax, DWORD PTR iLoop$15[rsp]
	inc	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	movsxd	rcx, DWORD PTR iLoop$15[rsp]
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	r8, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	lea	rdi, QWORD PTR [rdx+rcx]
	lea	rsi, QWORD PTR [r8+rax]
	mov	ecx, 32					; 00000020H
	rep movsb
; Line 1451
	mov	r8d, DWORD PTR iLoop$15[rsp]
	lea	rdx, OFFSET FLAT:$SG123853
	lea	rcx, QWORD PTR szWindowTitle$17[rsp]
	call	sprintf
; Line 1452
	movsxd	rax, DWORD PTR iLoop$15[rsp]
	imul	rax, rax, 32				; 00000020H
	lea	rdx, QWORD PTR szWindowTitle$17[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	QWORD PTR __imp_SetWindowTextA
; Line 1453
	jmp	$LN7@Child2DWnd
$LN8@Child2DWnd:
$LN40@Child2DWnd:
$LN39@Child2DWnd:
; Line 1456
	jmp	$LN2@Child2DWnd
$LN41@Child2DWnd:
; Line 1463
	mov	rcx, QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA ; g_hMainWindow
	call	QWORD PTR __imp_GetMenu
	mov	QWORD PTR hMenu$18[rsp], rax
; Line 1464
	mov	rax, QWORD PTR lParam$[rsp]
	cmp	QWORD PTR hWnd$[rsp], rax
	jne	SHORT $LN42@Child2DWnd
; Line 1466
	mov	DWORD PTR uEnableFlag$20[rsp], 0
; Line 1467
	jmp	SHORT $LN43@Child2DWnd
$LN42@Child2DWnd:
; Line 1470
	mov	DWORD PTR uEnableFlag$20[rsp], 1
$LN43@Child2DWnd:
; Line 1472
	mov	eax, DWORD PTR uEnableFlag$20[rsp]
	bts	eax, 10
	mov	r8d, eax
	mov	edx, 1
	mov	rcx, QWORD PTR hMenu$18[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1473
	mov	eax, DWORD PTR uEnableFlag$20[rsp]
	bts	eax, 10
	mov	r8d, eax
	mov	edx, 2
	mov	rcx, QWORD PTR hMenu$18[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1475
	xor	edx, edx
	mov	rcx, QWORD PTR hMenu$18[rsp]
	call	QWORD PTR __imp_GetSubMenu
	mov	QWORD PTR hFileMenu$19[rsp], rax
; Line 1476
	mov	r8d, DWORD PTR uEnableFlag$20[rsp]
	mov	edx, 9073				; 00002371H
	mov	rcx, QWORD PTR hFileMenu$19[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1477
	mov	r8d, DWORD PTR uEnableFlag$20[rsp]
	mov	edx, 9074				; 00002372H
	mov	rcx, QWORD PTR hFileMenu$19[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1479
	mov	rcx, QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA ; g_hMainWindow
	call	QWORD PTR __imp_DrawMenuBar
; Line 1481
	jmp	SHORT $LN2@Child2DWnd
$LN44@Child2DWnd:
; Line 1484
	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR tv470[rsp], eax
; Line 1488
	xor	eax, eax
	jmp	SHORT $LN1@Child2DWnd
$LN2@Child2DWnd:
; Line 1490
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR uMessage$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DefMDIChildProcA
$LN1@Child2DWnd:
$LN45@Child2DWnd:
; Line 1491
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 264				; 00000108H
	pop	rdi
	pop	rsi
	ret	0
?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP		; Child2DWndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tempstring$ = 56
__$ArrayPad$ = 96
hDC$ = 128
right$ = 136
bottom$ = 144
x$ = 152
y$ = 160
?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z PROC		; DrawWin32Text
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 1265
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1266
	mov	DWORD PTR ?colorRGB@@3KA, 16777215	; colorRGB, 00ffffffH
; Line 1267
	mov	edx, DWORD PTR ?colorRGB@@3KA		; colorRGB
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_SetTextColor
; Line 1268
	mov	edx, 1
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_SetBkMode
; Line 1269
	mov	DWORD PTR ?MainRect@@3UtagRECT@@A, 0
; Line 1270
	mov	DWORD PTR ?MainRect@@3UtagRECT@@A+4, 0
; Line 1271
	mov	eax, DWORD PTR bottom$[rsp]
	mov	DWORD PTR ?MainRect@@3UtagRECT@@A+12, eax
; Line 1272
	mov	eax, DWORD PTR right$[rsp]
	mov	DWORD PTR ?MainRect@@3UtagRECT@@A+8, eax
; Line 1273
	mov	r8d, 60					; 0000003cH
	xor	edx, edx
	lea	rcx, OFFSET FLAT:?LogFont@@3UtagLOGFONTA@@A ; LogFont
	call	memset
; Line 1274
	mov	DWORD PTR ?LogFont@@3UtagLOGFONTA@@A, 14
; Line 1275
	mov	DWORD PTR ?LogFont@@3UtagLOGFONTA@@A+4, 8
; Line 1276
	mov	DWORD PTR ?LogFont@@3UtagLOGFONTA@@A+8, 0
; Line 1277
	mov	DWORD PTR ?LogFont@@3UtagLOGFONTA@@A+12, 0
; Line 1278
	mov	DWORD PTR ?LogFont@@3UtagLOGFONTA@@A+16, 400 ; 00000190H
; Line 1279
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+20, 0
; Line 1280
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+21, 0
; Line 1281
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+22, 0
; Line 1282
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+23, 1
; Line 1283
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+24, 0
; Line 1284
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+25, 0
; Line 1285
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+26, 0
; Line 1286
	mov	BYTE PTR ?LogFont@@3UtagLOGFONTA@@A+27, 0
; Line 1287
	lea	r8, OFFSET FLAT:$SG123753
	lea	rdx, OFFSET FLAT:$SG123754
	lea	rcx, OFFSET FLAT:?LogFont@@3UtagLOGFONTA@@A+28
	call	sprintf
; Line 1288
	lea	rcx, OFFSET FLAT:?LogFont@@3UtagLOGFONTA@@A ; LogFont
	call	QWORD PTR __imp_CreateFontIndirectA
	mov	QWORD PTR ?hFont@@3PEAUHFONT__@@EA, rax	; hFont
; Line 1289
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_SaveDC
; Line 1290
	mov	rdx, QWORD PTR ?hFont@@3PEAUHFONT__@@EA	; hFont
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_SelectObject
	mov	QWORD PTR ?hOldFont@@3PEAUHFONT__@@EA, rax ; hOldFont
; Line 1292
	mov	r8d, DWORD PTR ?MouseX@@3HA		; MouseX
	lea	rdx, OFFSET FLAT:$SG123755
	lea	rcx, QWORD PTR tempstring$[rsp]
	call	sprintf
; Line 1293
	mov	DWORD PTR [rsp+32], 8472		; 00002118H
	lea	r9, OFFSET FLAT:?MainRect@@3UtagRECT@@A	; MainRect
	mov	r8d, 11
	lea	rdx, QWORD PTR tempstring$[rsp]
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_DrawTextA
; Line 1294
	mov	rdx, QWORD PTR ?hOldFont@@3PEAUHFONT__@@EA ; hOldFont
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_SelectObject
; Line 1295
	mov	rcx, QWORD PTR ?hFont@@3PEAUHFONT__@@EA	; hFont
	call	QWORD PTR __imp_DeleteObject
; Line 1296
	mov	edx, -1
	mov	rcx, QWORD PTR hDC$[rsp]
	call	QWORD PTR __imp_RestoreDC
; Line 1297
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?DrawWin32Text@@YAXPEAUHDC__@@HHHH@Z ENDP		; DrawWin32Text
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
iLoop$4 = 32
iThisChild$5 = 36
szWindowTitle$6 = 56
hMenu$7 = 88
hFileMenu$8 = 96
uEnableFlag$9 = 104
$T10 = 120
tv64 = 128
tv205 = 132
__$ArrayPad$ = 136
hWnd$ = 176
uMessage$ = 184
wParam$ = 192
lParam$ = 200
?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z PROC		; Child3DWndProc
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 1131
$LN27:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 152				; 00000098H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 1132
	mov	eax, DWORD PTR uMessage$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 512		; 00000200H
	ja	SHORT $LN26@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 512		; 00000200H
	je	$LN12@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 16
	je	$LN15@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 256		; 00000100H
	je	SHORT $LN9@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 257		; 00000101H
	je	SHORT $LN10@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 273		; 00000111H
	je	$LN22@Child3DWnd
	jmp	$LN2@Child3DWnd
$LN26@Child3DWnd:
	cmp	DWORD PTR tv64[rsp], 513		; 00000201H
	je	SHORT $LN11@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 514		; 00000202H
	je	$LN14@Child3DWnd
	cmp	DWORD PTR tv64[rsp], 546		; 00000222H
	je	$LN19@Child3DWnd
	jmp	$LN2@Child3DWnd
$LN9@Child3DWnd:
; Line 1135
	lea	rax, OFFSET FLAT:?key@@3PA_NA		; key
	mov	rcx, QWORD PTR wParam$[rsp]
	mov	BYTE PTR [rax+rcx], 1
; Line 1136
	jmp	$LN2@Child3DWnd
$LN10@Child3DWnd:
; Line 1139
	mov	rax, QWORD PTR wParam$[rsp]
	mov	QWORD PTR $T10[rsp], rax
	cmp	QWORD PTR $T10[rsp], 256		; 00000100H
	jae	SHORT $LN24@Child3DWnd
	jmp	SHORT $LN25@Child3DWnd
$LN24@Child3DWnd:
	call	__report_rangecheckfailure
$LN25@Child3DWnd:
	lea	rax, OFFSET FLAT:?key@@3PA_NA		; key
	mov	rcx, QWORD PTR $T10[rsp]
	mov	BYTE PTR [rax+rcx], 0
; Line 1140
	jmp	$LN2@Child3DWnd
$LN11@Child3DWnd:
; Line 1142
	mov	BYTE PTR ?g_bMouseDrag@@3_NA, 1		; g_bMouseDrag
; Line 1143
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?g_iMouseLastX@@3HA, eax	; g_iMouseLastX
; Line 1144
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?g_iMouseLastY@@3HA, eax	; g_iMouseLastY
; Line 1145
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_SetCapture
; Line 1146
	jmp	$LN2@Child3DWnd
$LN12@Child3DWnd:
; Line 1149
	movzx	eax, BYTE PTR ?g_bMouseDrag@@3_NA	; g_bMouseDrag
	test	eax, eax
	je	SHORT $LN13@Child3DWnd
; Line 1151
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	sub	eax, DWORD PTR ?g_iMouseLastX@@3HA	; g_iMouseLastX
	mov	DWORD PTR ?g_iMouseDeltaX@@3HA, eax	; g_iMouseDeltaX
; Line 1152
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	sub	eax, DWORD PTR ?g_iMouseLastY@@3HA	; g_iMouseLastY
	mov	DWORD PTR ?g_iMouseDeltaY@@3HA, eax	; g_iMouseDeltaY
; Line 1153
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?g_iMouseLastX@@3HA, eax	; g_iMouseLastX
; Line 1154
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR ?g_iMouseLastY@@3HA, eax	; g_iMouseLastY
$LN13@Child3DWnd:
; Line 1156
	jmp	$LN2@Child3DWnd
$LN14@Child3DWnd:
; Line 1159
	mov	BYTE PTR ?g_bMouseDrag@@3_NA, 0		; g_bMouseDrag
; Line 1160
	call	QWORD PTR __imp_ReleaseCapture
; Line 1161
	jmp	$LN2@Child3DWnd
$LN15@Child3DWnd:
; Line 1202
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	mov	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
; Line 1203
	cmp	DWORD PTR ?g_iNumChild@@3HA, 0		; g_iNumChild
	jne	SHORT $LN16@Child3DWnd
; Line 1205
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_wglMakeCurrent
; Line 1206
	mov	eax, 32					; 00000020H
	imul	rax, rax, 0
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+8]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+24]
	call	QWORD PTR __imp_ReleaseDC
; Line 1207
	mov	eax, 32					; 00000020H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+16]
	call	QWORD PTR __imp_wglDeleteContext
; Line 1208
	jmp	$LN17@Child3DWnd
$LN16@Child3DWnd:
; Line 1214
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgCtrlID
	sub	eax, 50000				; 0000c350H
	mov	DWORD PTR iThisChild$5[rsp], eax
; Line 1215
	movsxd	rax, DWORD PTR iThisChild$5[rsp]
	imul	rax, rax, 32				; 00000020H
	movsxd	rcx, DWORD PTR iThisChild$5[rsp]
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+8]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+24]
	call	QWORD PTR __imp_ReleaseDC
; Line 1216
	movsxd	rax, DWORD PTR iThisChild$5[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+16]
	call	QWORD PTR __imp_wglDeleteContext
; Line 1217
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	cmp	DWORD PTR iThisChild$5[rsp], eax
	je	$LN18@Child3DWnd
; Line 1219
	mov	eax, DWORD PTR iThisChild$5[rsp]
	mov	DWORD PTR iLoop$4[rsp], eax
	jmp	SHORT $LN6@Child3DWnd
$LN4@Child3DWnd:
	mov	eax, DWORD PTR iLoop$4[rsp]
	inc	eax
	mov	DWORD PTR iLoop$4[rsp], eax
$LN6@Child3DWnd:
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	cmp	DWORD PTR iLoop$4[rsp], eax
	jge	SHORT $LN5@Child3DWnd
; Line 1221
	mov	eax, DWORD PTR iLoop$4[rsp]
	inc	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	movsxd	rcx, DWORD PTR iLoop$4[rsp]
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	r8, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	lea	rdi, QWORD PTR [rdx+rcx]
	lea	rsi, QWORD PTR [r8+rax]
	mov	ecx, 32					; 00000020H
	rep movsb
; Line 1222
	mov	r8d, DWORD PTR iLoop$4[rsp]
	lea	rdx, OFFSET FLAT:$SG123731
	lea	rcx, QWORD PTR szWindowTitle$6[rsp]
	call	sprintf
; Line 1223
	movsxd	rax, DWORD PTR iLoop$4[rsp]
	imul	rax, rax, 32				; 00000020H
	lea	rdx, QWORD PTR szWindowTitle$6[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	QWORD PTR __imp_SetWindowTextA
; Line 1224
	jmp	SHORT $LN4@Child3DWnd
$LN5@Child3DWnd:
$LN18@Child3DWnd:
$LN17@Child3DWnd:
; Line 1227
	jmp	$LN2@Child3DWnd
$LN19@Child3DWnd:
; Line 1234
	mov	rcx, QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA ; g_hMainWindow
	call	QWORD PTR __imp_GetMenu
	mov	QWORD PTR hMenu$7[rsp], rax
; Line 1235
	mov	rax, QWORD PTR lParam$[rsp]
	cmp	QWORD PTR hWnd$[rsp], rax
	jne	SHORT $LN20@Child3DWnd
; Line 1237
	mov	DWORD PTR uEnableFlag$9[rsp], 0
; Line 1238
	jmp	SHORT $LN21@Child3DWnd
$LN20@Child3DWnd:
; Line 1241
	mov	DWORD PTR uEnableFlag$9[rsp], 1
$LN21@Child3DWnd:
; Line 1243
	mov	eax, DWORD PTR uEnableFlag$9[rsp]
	bts	eax, 10
	mov	r8d, eax
	mov	edx, 1
	mov	rcx, QWORD PTR hMenu$7[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1244
	mov	eax, DWORD PTR uEnableFlag$9[rsp]
	bts	eax, 10
	mov	r8d, eax
	mov	edx, 2
	mov	rcx, QWORD PTR hMenu$7[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1246
	xor	edx, edx
	mov	rcx, QWORD PTR hMenu$7[rsp]
	call	QWORD PTR __imp_GetSubMenu
	mov	QWORD PTR hFileMenu$8[rsp], rax
; Line 1247
	mov	r8d, DWORD PTR uEnableFlag$9[rsp]
	mov	edx, 9073				; 00002371H
	mov	rcx, QWORD PTR hFileMenu$8[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1248
	mov	r8d, DWORD PTR uEnableFlag$9[rsp]
	mov	edx, 9074				; 00002372H
	mov	rcx, QWORD PTR hFileMenu$8[rsp]
	call	QWORD PTR __imp_EnableMenuItem
; Line 1250
	mov	rcx, QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA ; g_hMainWindow
	call	QWORD PTR __imp_DrawMenuBar
; Line 1252
	jmp	SHORT $LN2@Child3DWnd
$LN22@Child3DWnd:
; Line 1255
	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR tv205[rsp], eax
; Line 1259
	xor	eax, eax
	jmp	SHORT $LN1@Child3DWnd
$LN2@Child3DWnd:
; Line 1261
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR uMessage$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DefMDIChildProcA
$LN1@Child3DWnd:
$LN23@Child3DWnd:
; Line 1262
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	pop	rdi
	pop	rsi
	ret	0
?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP		; Child3DWndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
ccs$16 = 104
hChild$17 = 136
szWindowTitle$18 = 148
cs$19 = 192
pfd$20 = 296
iFormat$21 = 340
hChild$22 = 344
szWindowTitle$23 = 356
cs$24 = 400
pfd$25 = 504
iFormat$26 = 548
hChild$27 = 552
szWindowTitle$28 = 564
cs$29 = 608
pfd$30 = 712
iFormat$31 = 756
hChild$32 = 760
szWindowTitle$33 = 772
cs$34 = 816
pfd$35 = 920
iFormat$36 = 964
hChild$37 = 968
iLoop$38 = 976
$T39 = 992
$T40 = 1000
$T41 = 1008
$T42 = 1016
tv64 = 1024
tv83 = 1028
tv597 = 1032
tv602 = 1040
tv607 = 1048
__$ArrayPad$ = 1056
hWnd$ = 1104
uMessage$ = 1112
wParam$ = 1120
lParam$ = 1128
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z PROC			; WndProc
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 786
$LN48:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 1080				; 00000438H
	lea	rdi, QWORD PTR [rsp+96]
	mov	ecx, 246				; 000000f6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1104]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 787
	mov	eax, DWORD PTR uMessage$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN9@WndProc
	cmp	DWORD PTR tv64[rsp], 2
	je	$LN38@WndProc
	cmp	DWORD PTR tv64[rsp], 16
	je	$LN36@WndProc
	cmp	DWORD PTR tv64[rsp], 273		; 00000111H
	je	$LN10@WndProc
	jmp	$LN39@WndProc
$LN9@WndProc:
; Line 793
	mov	QWORD PTR ccs$16[rsp], 0
; Line 796
	mov	DWORD PTR ccs$16[rsp+8], 50000		; 0000c350H
; Line 798
	lea	rax, QWORD PTR ccs$16[rsp]
	mov	QWORD PTR [rsp+88], rax
	mov	rax, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 4999		; 00001387H
	mov	rax, QWORD PTR hWnd$[rsp]
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 1174405120				; 46000000H
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG123643
	mov	ecx, 512				; 00000200H
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA, rax ; g_hMDIClient
; Line 803
	mov	edx, 5
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_ShowWindow
; Line 804
	xor	eax, eax
	jmp	$LN1@WndProc
$LN10@WndProc:
; Line 808
	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR tv83[rsp], eax
	mov	eax, DWORD PTR tv83[rsp]
	sub	eax, 9067				; 0000236bH
	mov	DWORD PTR tv83[rsp], eax
	cmp	DWORD PTR tv83[rsp], 15
	ja	$LN32@WndProc
	movsxd	rax, DWORD PTR tv83[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN47@WndProc[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN11@WndProc:
; Line 811
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 16
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_PostMessageA
; Line 812
	jmp	$LN4@WndProc
$LN12@WndProc:
; Line 818
	mov	eax, DWORD PTR ?g_iMaxChild@@3HA	; g_iMaxChild
	cmp	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jge	SHORT $LN13@WndProc
; Line 819
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	inc	eax
	mov	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jmp	SHORT $LN14@WndProc
$LN13@WndProc:
; Line 821
	jmp	$LN4@WndProc
$LN14@WndProc:
; Line 823
	lea	rax, QWORD PTR szWindowTitle$18[rsp]
	lea	rcx, OFFSET FLAT:$SG123649
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 3
	rep movsb
; Line 847
	mov	r8d, 80					; 00000050H
	xor	edx, edx
	lea	rcx, QWORD PTR cs$19[rsp]
	call	memset
; Line 849
	lea	rax, QWORD PTR cs$19[rsp]
	mov	QWORD PTR [rsp+88], rax
	mov	rax, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	rax, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 1355743232				; 50cf0000H
	lea	r8, QWORD PTR szWindowTitle$18[rsp]
	lea	rdx, OFFSET FLAT:?g_szChild3DClassName@@3PADA ; g_szChild3DClassName
	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR hChild$17[rsp], rax
; Line 864
	cmp	QWORD PTR hChild$17[rsp], 0
	jne	SHORT $LN15@WndProc
; Line 866
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123651
	lea	rdx, OFFSET FLAT:$SG123652
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN15@WndProc:
; Line 870
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	DWORD PTR [rcx+rax], 1
; Line 871
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR hChild$17[rsp]
	mov	QWORD PTR [rcx+rax+24], rdx
; Line 872
	mov	rcx, QWORD PTR hChild$17[rsp]
	call	QWORD PTR __imp_GetDC
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+8], rax
; Line 875
	mov	r8d, 40					; 00000028H
	xor	edx, edx
	lea	rcx, QWORD PTR pfd$20[rsp]
	call	memset
; Line 876
	mov	eax, 40					; 00000028H
	mov	WORD PTR pfd$20[rsp], ax
; Line 877
	mov	eax, 1
	mov	WORD PTR pfd$20[rsp+2], ax
; Line 878
	mov	DWORD PTR pfd$20[rsp+4], 37		; 00000025H
; Line 879
	mov	BYTE PTR pfd$20[rsp+8], 0
; Line 880
	mov	BYTE PTR pfd$20[rsp+9], 24
; Line 881
	mov	BYTE PTR pfd$20[rsp+23], 16
; Line 882
	mov	BYTE PTR pfd$20[rsp+26], 0
; Line 883
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	rdx, QWORD PTR pfd$20[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_ChoosePixelFormat
	mov	DWORD PTR iFormat$21[rsp], eax
; Line 884
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	r8, QWORD PTR pfd$20[rsp]
	mov	edx, DWORD PTR iFormat$21[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_SetPixelFormat
; Line 886
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_wglCreateContext
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+16], rax
; Line 887
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+16]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+8]
	call	QWORD PTR __imp_wglMakeCurrent
; Line 888
	call	?InitGL@@YAXXZ				; InitGL
; Line 890
	jmp	$LN4@WndProc
$LN16@WndProc:
; Line 896
	mov	eax, DWORD PTR ?g_iMaxChild@@3HA	; g_iMaxChild
	cmp	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jge	SHORT $LN17@WndProc
; Line 897
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	inc	eax
	mov	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jmp	SHORT $LN18@WndProc
$LN17@WndProc:
; Line 899
	jmp	$LN4@WndProc
$LN18@WndProc:
; Line 901
	lea	rax, QWORD PTR szWindowTitle$23[rsp]
	lea	rcx, OFFSET FLAT:$SG123656
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 6
	rep movsb
; Line 905
	mov	r8d, 80					; 00000050H
	xor	edx, edx
	lea	rcx, QWORD PTR cs$24[rsp]
	call	memset
; Line 907
	lea	rax, QWORD PTR cs$24[rsp]
	mov	QWORD PTR [rsp+88], rax
	mov	rax, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	rax, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 1355743232				; 50cf0000H
	lea	r8, QWORD PTR szWindowTitle$23[rsp]
	lea	rdx, OFFSET FLAT:?g_szChild2DClassName@@3PADA ; g_szChild2DClassName
	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR hChild$22[rsp], rax
; Line 922
	cmp	QWORD PTR hChild$22[rsp], 0
	jne	SHORT $LN19@WndProc
; Line 924
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123658
	lea	rdx, OFFSET FLAT:$SG123659
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN19@WndProc:
; Line 928
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	DWORD PTR [rcx+rax], 2
; Line 929
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR hChild$22[rsp]
	mov	QWORD PTR [rcx+rax+24], rdx
; Line 930
	mov	rcx, QWORD PTR hChild$22[rsp]
	call	QWORD PTR __imp_GetDC
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+8], rax
; Line 933
	mov	r8d, 40					; 00000028H
	xor	edx, edx
	lea	rcx, QWORD PTR pfd$25[rsp]
	call	memset
; Line 934
	mov	eax, 40					; 00000028H
	mov	WORD PTR pfd$25[rsp], ax
; Line 935
	mov	eax, 1
	mov	WORD PTR pfd$25[rsp+2], ax
; Line 936
	mov	DWORD PTR pfd$25[rsp+4], 37		; 00000025H
; Line 937
	mov	BYTE PTR pfd$25[rsp+8], 0
; Line 938
	mov	BYTE PTR pfd$25[rsp+9], 24
; Line 939
	mov	BYTE PTR pfd$25[rsp+23], 16
; Line 940
	mov	BYTE PTR pfd$25[rsp+26], 0
; Line 941
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	rdx, QWORD PTR pfd$25[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_ChoosePixelFormat
	mov	DWORD PTR iFormat$26[rsp], eax
; Line 942
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	r8, QWORD PTR pfd$25[rsp]
	mov	edx, DWORD PTR iFormat$26[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_SetPixelFormat
; Line 944
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_wglCreateContext
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+16], rax
; Line 945
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+16]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+8]
	call	QWORD PTR __imp_wglMakeCurrent
; Line 946
	call	?InitGL@@YAXXZ				; InitGL
; Line 948
	jmp	$LN4@WndProc
$LN20@WndProc:
; Line 954
	mov	eax, DWORD PTR ?g_iMaxChild@@3HA	; g_iMaxChild
	cmp	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jge	SHORT $LN21@WndProc
; Line 955
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	inc	eax
	mov	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jmp	SHORT $LN22@WndProc
$LN21@WndProc:
; Line 957
	jmp	$LN4@WndProc
$LN22@WndProc:
; Line 959
	mov	eax, DWORD PTR $SG123663
	mov	DWORD PTR szWindowTitle$28[rsp], eax
; Line 963
	mov	r8d, 80					; 00000050H
	xor	edx, edx
	lea	rcx, QWORD PTR cs$29[rsp]
	call	memset
; Line 965
	lea	rax, QWORD PTR cs$29[rsp]
	mov	QWORD PTR [rsp+88], rax
	mov	rax, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	rax, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 1355743232				; 50cf0000H
	lea	r8, QWORD PTR szWindowTitle$28[rsp]
	lea	rdx, OFFSET FLAT:?g_szChild2DClassName@@3PADA ; g_szChild2DClassName
	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR hChild$27[rsp], rax
; Line 980
	cmp	QWORD PTR hChild$27[rsp], 0
	jne	SHORT $LN23@WndProc
; Line 982
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123665
	lea	rdx, OFFSET FLAT:$SG123666
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN23@WndProc:
; Line 986
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	DWORD PTR [rcx+rax], 3
; Line 987
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR hChild$27[rsp]
	mov	QWORD PTR [rcx+rax+24], rdx
; Line 988
	mov	rcx, QWORD PTR hChild$27[rsp]
	call	QWORD PTR __imp_GetDC
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+8], rax
; Line 991
	mov	r8d, 40					; 00000028H
	xor	edx, edx
	lea	rcx, QWORD PTR pfd$30[rsp]
	call	memset
; Line 992
	mov	eax, 40					; 00000028H
	mov	WORD PTR pfd$30[rsp], ax
; Line 993
	mov	eax, 1
	mov	WORD PTR pfd$30[rsp+2], ax
; Line 994
	mov	DWORD PTR pfd$30[rsp+4], 37		; 00000025H
; Line 995
	mov	BYTE PTR pfd$30[rsp+8], 0
; Line 996
	mov	BYTE PTR pfd$30[rsp+9], 24
; Line 997
	mov	BYTE PTR pfd$30[rsp+23], 16
; Line 998
	mov	BYTE PTR pfd$30[rsp+26], 0
; Line 999
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	rdx, QWORD PTR pfd$30[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_ChoosePixelFormat
	mov	DWORD PTR iFormat$31[rsp], eax
; Line 1000
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	r8, QWORD PTR pfd$30[rsp]
	mov	edx, DWORD PTR iFormat$31[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_SetPixelFormat
; Line 1002
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_wglCreateContext
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+16], rax
; Line 1003
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+16]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+8]
	call	QWORD PTR __imp_wglMakeCurrent
; Line 1004
	call	?InitGL@@YAXXZ				; InitGL
; Line 1006
	jmp	$LN4@WndProc
$LN24@WndProc:
; Line 1012
	mov	eax, DWORD PTR ?g_iMaxChild@@3HA	; g_iMaxChild
	cmp	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jge	SHORT $LN25@WndProc
; Line 1013
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	inc	eax
	mov	DWORD PTR ?g_iNumChild@@3HA, eax	; g_iNumChild
	jmp	SHORT $LN26@WndProc
$LN25@WndProc:
; Line 1015
	jmp	$LN4@WndProc
$LN26@WndProc:
; Line 1017
	lea	rax, QWORD PTR szWindowTitle$33[rsp]
	lea	rcx, OFFSET FLAT:$SG123670
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 5
	rep movsb
; Line 1021
	mov	r8d, 80					; 00000050H
	xor	edx, edx
	lea	rcx, QWORD PTR cs$34[rsp]
	call	memset
; Line 1023
	lea	rax, QWORD PTR cs$34[rsp]
	mov	QWORD PTR [rsp+88], rax
	mov	rax, QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA ; g_hInst
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	rax, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 1355743232				; 50cf0000H
	lea	r8, QWORD PTR szWindowTitle$33[rsp]
	lea	rdx, OFFSET FLAT:?g_szChild2DClassName@@3PADA ; g_szChild2DClassName
	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR hChild$32[rsp], rax
; Line 1038
	cmp	QWORD PTR hChild$32[rsp], 0
	jne	SHORT $LN27@WndProc
; Line 1040
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123672
	lea	rdx, OFFSET FLAT:$SG123673
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN27@WndProc:
; Line 1044
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	DWORD PTR [rcx+rax], 4
; Line 1045
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR hChild$32[rsp]
	mov	QWORD PTR [rcx+rax+24], rdx
; Line 1046
	mov	rcx, QWORD PTR hChild$32[rsp]
	call	QWORD PTR __imp_GetDC
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+8], rax
; Line 1049
	mov	r8d, 40					; 00000028H
	xor	edx, edx
	lea	rcx, QWORD PTR pfd$35[rsp]
	call	memset
; Line 1050
	mov	eax, 40					; 00000028H
	mov	WORD PTR pfd$35[rsp], ax
; Line 1051
	mov	eax, 1
	mov	WORD PTR pfd$35[rsp+2], ax
; Line 1052
	mov	DWORD PTR pfd$35[rsp+4], 37		; 00000025H
; Line 1053
	mov	BYTE PTR pfd$35[rsp+8], 0
; Line 1054
	mov	BYTE PTR pfd$35[rsp+9], 24
; Line 1055
	mov	BYTE PTR pfd$35[rsp+23], 16
; Line 1056
	mov	BYTE PTR pfd$35[rsp+26], 0
; Line 1057
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	rdx, QWORD PTR pfd$35[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_ChoosePixelFormat
	mov	DWORD PTR iFormat$36[rsp], eax
; Line 1058
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	lea	r8, QWORD PTR pfd$35[rsp]
	mov	edx, DWORD PTR iFormat$36[rsp]
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_SetPixelFormat
; Line 1060
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_wglCreateContext
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR [rdx+rcx+16], rax
; Line 1061
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	ecx, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	dec	ecx
	movsxd	rcx, ecx
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+16]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+8]
	call	QWORD PTR __imp_wglMakeCurrent
; Line 1062
	call	?InitGL@@YAXXZ				; InitGL
; Line 1064
	jmp	$LN4@WndProc
$LN28@WndProc:
; Line 1067
	xor	r9d, r9d
	mov	r8d, 1
	mov	edx, 550				; 00000226H
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_PostMessageA
; Line 1068
	jmp	$LN4@WndProc
$LN29@WndProc:
; Line 1071
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 550				; 00000226H
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_PostMessageA
; Line 1072
	jmp	$LN4@WndProc
$LN30@WndProc:
; Line 1075
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 551				; 00000227H
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_PostMessageA
; Line 1076
	jmp	$LN4@WndProc
$LN31@WndProc:
; Line 1079
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 552				; 00000228H
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_PostMessageA
; Line 1080
	jmp	$LN4@WndProc
$LN32@WndProc:
; Line 1084
	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	cmp	eax, 50000				; 0000c350H
	jl	SHORT $LN33@WndProc
; Line 1086
	mov	rax, QWORD PTR lParam$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR wParam$[rsp]
	mov	r8d, DWORD PTR uMessage$[rsp]
	mov	rdx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DefFrameProcA
; Line 1087
	jmp	SHORT $LN34@WndProc
$LN33@WndProc:
; Line 1091
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 553				; 00000229H
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_SendMessageA
	mov	QWORD PTR hChild$37[rsp], rax
; Line 1092
	cmp	QWORD PTR hChild$37[rsp], 0
	je	SHORT $LN35@WndProc
; Line 1094
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, 273				; 00000111H
	mov	rcx, QWORD PTR hChild$37[rsp]
	call	QWORD PTR __imp_SendMessageA
$LN35@WndProc:
$LN34@WndProc:
$LN4@WndProc:
; Line 1100
	jmp	$LN2@WndProc
$LN36@WndProc:
; Line 1105
	cmp	DWORD PTR ?g_iNumChild@@3HA, 0		; g_iNumChild
	je	SHORT $LN37@WndProc
; Line 1107
	mov	DWORD PTR iLoop$38[rsp], 0
	jmp	SHORT $LN8@WndProc
$LN6@WndProc:
	mov	eax, DWORD PTR iLoop$38[rsp]
	inc	eax
	mov	DWORD PTR iLoop$38[rsp], eax
$LN8@WndProc:
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	cmp	DWORD PTR iLoop$38[rsp], eax
	jge	SHORT $LN7@WndProc
; Line 1109
	movsxd	rax, DWORD PTR iLoop$38[rsp]
	imul	rax, rax, 32				; 00000020H
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 16
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	QWORD PTR __imp_SendMessageA
; Line 1110
	jmp	SHORT $LN6@WndProc
$LN7@WndProc:
$LN37@WndProc:
; Line 1112
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	QWORD PTR $T39[rsp], rax
	mov	rcx, QWORD PTR $T39[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]
; Line 1113
	mov	rax, QWORD PTR ?texture@@3PEAVTEXTURE@@EA ; texture
	mov	QWORD PTR $T40[rsp], rax
	cmp	QWORD PTR $T40[rsp], 0
	je	SHORT $LN41@WndProc
	mov	edx, 3
	mov	rcx, QWORD PTR $T40[rsp]
	call	??_ETEXTURE@@QEAAPEAXI@Z
	mov	QWORD PTR tv597[rsp], rax
	jmp	SHORT $LN42@WndProc
$LN41@WndProc:
	mov	QWORD PTR tv597[rsp], 0
$LN42@WndProc:
; Line 1114
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR $T41[rsp], rax
	cmp	QWORD PTR $T41[rsp], 0
	je	SHORT $LN43@WndProc
	mov	edx, 3
	mov	rcx, QWORD PTR $T41[rsp]
	call	??_EVERTEX@@QEAAPEAXI@Z
	mov	QWORD PTR tv602[rsp], rax
	jmp	SHORT $LN44@WndProc
$LN43@WndProc:
	mov	QWORD PTR tv602[rsp], 0
$LN44@WndProc:
; Line 1115
	mov	rax, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	mov	QWORD PTR $T42[rsp], rax
	cmp	QWORD PTR $T42[rsp], 0
	je	SHORT $LN45@WndProc
	mov	edx, 3
	mov	rcx, QWORD PTR $T42[rsp]
	call	??_EPOLYGON@@QEAAPEAXI@Z
	mov	QWORD PTR tv607[rsp], rax
	jmp	SHORT $LN46@WndProc
$LN45@WndProc:
	mov	QWORD PTR tv607[rsp], 0
$LN46@WndProc:
; Line 1116
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DestroyWindow
; Line 1118
	jmp	SHORT $LN2@WndProc
$LN38@WndProc:
; Line 1121
	xor	ecx, ecx
	call	QWORD PTR __imp_PostQuitMessage
; Line 1122
	jmp	SHORT $LN2@WndProc
$LN39@WndProc:
; Line 1125
	mov	rax, QWORD PTR lParam$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR wParam$[rsp]
	mov	r8d, DWORD PTR uMessage$[rsp]
	mov	rdx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DefFrameProcA
	jmp	SHORT $LN1@WndProc
$LN2@WndProc:
; Line 1127
	xor	eax, eax
$LN1@WndProc:
; Line 1128
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1080				; 00000438H
	pop	rdi
	pop	rsi
	ret	0
	npad	1
$LN47@WndProc:
	DD	$LN12@WndProc
	DD	$LN16@WndProc
	DD	$LN20@WndProc
	DD	$LN24@WndProc
	DD	$LN11@WndProc
	DD	$LN32@WndProc
	DD	$LN32@WndProc
	DD	$LN32@WndProc
	DD	$LN32@WndProc
	DD	$LN32@WndProc
	DD	$LN32@WndProc
	DD	$LN32@WndProc
	DD	$LN30@WndProc
	DD	$LN31@WndProc
	DD	$LN29@WndProc
	DD	$LN28@WndProc
?WndProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP			; WndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
WindowRect$ = 40
mat_ambient$ = 88
mat_diffuse$ = 136
__$ArrayPad$ = 176
hWnd$ = 208
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z PROC		; Draw2DSceneLeft
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 639
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 640
	mov	ecx, 16640				; 00004100H
	call	QWORD PTR __imp_glClear
; Line 641
	mov	ecx, 5888				; 00001700H
	call	QWORD PTR __imp_glMatrixMode
; Line 642
	call	QWORD PTR __imp_glLoadIdentity
; Line 643
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@42b40000
	call	QWORD PTR __imp_glRotatef
; Line 645
	lea	rdx, QWORD PTR WindowRect$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetClientRect
; Line 671
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glDisable
; Line 672
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glDisable
; Line 673
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glColor4f
; Line 674
	call	QWORD PTR __imp_glPushMatrix
; Line 675
	mov	ecx, 1
	call	QWORD PTR __imp_glBegin
; Line 677
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 678
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 679
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 680
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 681
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 682
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 683
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 685
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 686
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 687
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 688
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 689
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 690
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 692
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 693
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 694
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 695
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 696
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 697
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 698
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 700
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 701
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 702
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 703
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 704
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 705
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 707
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 708
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 709
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 710
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 711
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 712
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 713
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 715
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 716
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 717
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 718
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 719
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 720
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 722
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 723
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 724
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 725
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 726
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 727
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 728
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 730
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 731
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 732
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 733
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 734
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 735
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 737
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 738
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 739
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 740
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 741
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 742
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 743
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 745
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 746
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 747
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 748
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 749
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 750
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 752
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 753
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 754
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 755
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 756
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 757
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 758
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 760
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 761
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 762
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 763
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 764
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 765
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 766
	call	QWORD PTR __imp_glEnd
; Line 767
	call	QWORD PTR __imp_glPopMatrix
; Line 768
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glEnable
; Line 769
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 771
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR mat_ambient$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR mat_ambient$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR mat_ambient$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mat_ambient$[rsp+12], xmm0
; Line 772
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR mat_diffuse$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR mat_diffuse$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR mat_diffuse$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mat_diffuse$[rsp+12], xmm0
; Line 773
	lea	r8, QWORD PTR mat_ambient$[rsp]
	mov	edx, 4608				; 00001200H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 774
	lea	r8, QWORD PTR mat_diffuse$[rsp]
	mov	edx, 4609				; 00001201H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 775
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glDisable
; Line 776
	call	QWORD PTR __imp_glPushMatrix
; Line 777
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	movsxd	rcx, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rcx, rcx, 36				; 00000024H
	movsxd	rdx, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rdx, rdx, 36				; 00000024H
	mov	r8, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm2, DWORD PTR [r8+rax+12]
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm1, DWORD PTR [rax+rcx+8]
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR [rax+rdx+4]
	call	QWORD PTR __imp_glTranslatef
; Line 778
	mov	edx, 100020				; 000186b4H
	mov	rcx, QWORD PTR ?sphere@@3PEAVGLUquadric@@EA ; sphere
	call	gluQuadricOrientation
; Line 779
	mov	r9d, 20
	mov	r8d, 20
	movsd	xmm1, QWORD PTR __real@4024000000000000
	mov	rcx, QWORD PTR ?sphere@@3PEAVGLUquadric@@EA ; sphere
	call	gluSphere
; Line 780
	call	QWORD PTR __imp_glPopMatrix
; Line 781
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 783
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z ENDP		; Draw2DSceneLeft
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
WindowRect$ = 40
mat_ambient$ = 88
mat_diffuse$ = 136
__$ArrayPad$ = 176
hWnd$ = 208
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z PROC			; Draw2DSceneTop
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 492
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 493
	mov	ecx, 16640				; 00004100H
	call	QWORD PTR __imp_glClear
; Line 494
	mov	ecx, 5888				; 00001700H
	call	QWORD PTR __imp_glMatrixMode
; Line 495
	call	QWORD PTR __imp_glLoadIdentity
; Line 496
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@42b40000
	call	QWORD PTR __imp_glRotatef
; Line 498
	lea	rdx, QWORD PTR WindowRect$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetClientRect
; Line 524
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glDisable
; Line 525
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glDisable
; Line 526
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glColor4f
; Line 527
	call	QWORD PTR __imp_glPushMatrix
; Line 528
	mov	ecx, 1
	call	QWORD PTR __imp_glBegin
; Line 530
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 531
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 532
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 533
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 534
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 535
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 536
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 538
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 539
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 540
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 541
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 542
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 543
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 545
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 546
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 547
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 548
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 549
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 550
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 551
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 553
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 554
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 555
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 556
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 557
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 558
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 560
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 561
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 562
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 563
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 564
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 565
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 566
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 568
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 569
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 570
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 571
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 572
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 573
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 575
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 576
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 577
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 578
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 579
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 580
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 581
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 583
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 584
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 585
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 586
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 587
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 588
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 590
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 591
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 592
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 593
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 594
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 595
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 596
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 598
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 599
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 600
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 601
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 602
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 603
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 605
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 606
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 607
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 608
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 609
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 610
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 611
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 613
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 614
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 615
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 616
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 617
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 618
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 619
	call	QWORD PTR __imp_glEnd
; Line 620
	call	QWORD PTR __imp_glPopMatrix
; Line 621
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glEnable
; Line 622
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 624
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR mat_ambient$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR mat_ambient$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR mat_ambient$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mat_ambient$[rsp+12], xmm0
; Line 625
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR mat_diffuse$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR mat_diffuse$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR mat_diffuse$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mat_diffuse$[rsp+12], xmm0
; Line 626
	lea	r8, QWORD PTR mat_ambient$[rsp]
	mov	edx, 4608				; 00001200H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 627
	lea	r8, QWORD PTR mat_diffuse$[rsp]
	mov	edx, 4609				; 00001201H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 628
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glDisable
; Line 629
	call	QWORD PTR __imp_glPushMatrix
; Line 630
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	movsxd	rcx, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rcx, rcx, 36				; 00000024H
	movsxd	rdx, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rdx, rdx, 36				; 00000024H
	mov	r8, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm2, DWORD PTR [r8+rax+12]
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm1, DWORD PTR [rax+rcx+8]
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR [rax+rdx+4]
	call	QWORD PTR __imp_glTranslatef
; Line 631
	mov	edx, 100020				; 000186b4H
	mov	rcx, QWORD PTR ?sphere@@3PEAVGLUquadric@@EA ; sphere
	call	gluQuadricOrientation
; Line 632
	mov	r9d, 20
	mov	r8d, 20
	movsd	xmm1, QWORD PTR __real@4024000000000000
	mov	rcx, QWORD PTR ?sphere@@3PEAVGLUquadric@@EA ; sphere
	call	gluSphere
; Line 633
	call	QWORD PTR __imp_glPopMatrix
; Line 634
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 636
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Draw2DSceneTop@@YAXPEAUHWND__@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?Draw2DSceneTop@@YAXPEAUHWND__@@@Z ENDP			; Draw2DSceneTop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
WindowRect$ = 40
mat_ambient$ = 88
mat_diffuse$ = 136
__$ArrayPad$ = 176
hWnd$ = 208
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z PROC		; Draw2DSceneFront
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 346
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 347
	mov	ecx, 16640				; 00004100H
	call	QWORD PTR __imp_glClear
; Line 348
	mov	ecx, 5888				; 00001700H
	call	QWORD PTR __imp_glMatrixMode
; Line 349
	call	QWORD PTR __imp_glLoadIdentity
; Line 351
	lea	rdx, QWORD PTR WindowRect$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetClientRect
; Line 377
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glDisable
; Line 378
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glDisable
; Line 379
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glColor4f
; Line 380
	call	QWORD PTR __imp_glPushMatrix
; Line 381
	mov	ecx, 1
	call	QWORD PTR __imp_glBegin
; Line 383
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 384
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 385
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 386
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 387
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 388
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 389
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 391
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 392
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 393
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 394
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 395
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 396
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 398
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 399
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 400
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 401
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 402
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 403
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 404
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 406
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 407
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 408
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 409
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 410
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 411
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 413
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 414
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 415
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 416
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 417
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 418
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 419
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 421
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 422
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 423
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 424
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 425
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 426
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 428
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 429
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 430
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 431
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 432
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 433
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 434
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 436
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 437
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 438
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 439
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 440
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 441
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 443
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 444
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 445
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 446
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 447
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 448
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 449
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 451
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 452
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 453
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 454
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 455
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 456
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 458
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 459
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 460
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 461
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 462
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 463
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 464
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 466
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 467
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 468
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 469
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 470
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 471
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 472
	call	QWORD PTR __imp_glEnd
; Line 473
	call	QWORD PTR __imp_glPopMatrix
; Line 474
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glEnable
; Line 475
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 477
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR mat_ambient$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR mat_ambient$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR mat_ambient$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mat_ambient$[rsp+12], xmm0
; Line 478
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR mat_diffuse$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR mat_diffuse$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR mat_diffuse$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mat_diffuse$[rsp+12], xmm0
; Line 479
	lea	r8, QWORD PTR mat_ambient$[rsp]
	mov	edx, 4608				; 00001200H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 480
	lea	r8, QWORD PTR mat_diffuse$[rsp]
	mov	edx, 4609				; 00001201H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 481
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glDisable
; Line 482
	call	QWORD PTR __imp_glPushMatrix
; Line 483
	movsxd	rax, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rax, rax, 36				; 00000024H
	movsxd	rcx, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rcx, rcx, 36				; 00000024H
	movsxd	rdx, DWORD PTR ?VertexNumber@@3HA	; VertexNumber
	imul	rdx, rdx, 36				; 00000024H
	mov	r8, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm2, DWORD PTR [r8+rax+12]
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm1, DWORD PTR [rax+rcx+8]
	mov	rax, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR [rax+rdx+4]
	call	QWORD PTR __imp_glTranslatef
; Line 484
	mov	edx, 100020				; 000186b4H
	mov	rcx, QWORD PTR ?sphere@@3PEAVGLUquadric@@EA ; sphere
	call	gluQuadricOrientation
; Line 485
	mov	r9d, 20
	mov	r8d, 20
	movsd	xmm1, QWORD PTR __real@4024000000000000
	mov	rcx, QWORD PTR ?sphere@@3PEAVGLUquadric@@EA ; sphere
	call	gluSphere
; Line 486
	call	QWORD PTR __imp_glPopMatrix
; Line 487
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 489
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Draw2DSceneFront@@YAXPEAUHWND__@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?Draw2DSceneFront@@YAXPEAUHWND__@@@Z ENDP		; Draw2DSceneFront
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?Draw3DScene@@YAXXZ PROC				; Draw3DScene
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 263
$LN4:
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 264
	mov	ecx, 16640				; 00004100H
	call	QWORD PTR __imp_glClear
; Line 265
	mov	ecx, 5888				; 00001700H
	call	QWORD PTR __imp_glMatrixMode
; Line 266
	call	QWORD PTR __imp_glLoadIdentity
; Line 268
	movzx	eax, BYTE PTR ?g_bMouseDrag@@3_NA	; g_bMouseDrag
	test	eax, eax
	je	SHORT $LN2@Draw3DScen
; Line 270
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaY@@3HA	; g_iMouseDeltaY
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtss2sd xmm1, DWORD PTR ?g_fCubeRotationX@@3MA	; g_fCubeRotationX
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?g_fCubeRotationX@@3MA, xmm0	; g_fCubeRotationX
; Line 271
	cvtsi2ss xmm0, DWORD PTR ?g_iMouseDeltaX@@3HA	; g_iMouseDeltaX
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtss2sd xmm1, DWORD PTR ?g_fCubeRotationY@@3MA	; g_fCubeRotationY
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?g_fCubeRotationY@@3MA, xmm0	; g_fCubeRotationY
$LN2@Draw3DScen:
; Line 274
	movss	xmm2, DWORD PTR __real@c3fa0000
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTranslatef
; Line 275
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR ?g_fCubeRotationX@@3MA	; g_fCubeRotationX
	call	QWORD PTR __imp_glRotatef
; Line 276
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR ?g_fCubeRotationY@@3MA	; g_fCubeRotationY
	call	QWORD PTR __imp_glRotatef
; Line 278
	mov	eax, 72					; 00000048H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?texture@@3PEAVTEXTURE@@EA ; texture
	mov	edx, DWORD PTR [rcx+rax+44]
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glBindTexture
; Line 279
	call	QWORD PTR __imp_glPushMatrix
; Line 280
	mov	ecx, 4
	call	QWORD PTR __imp_glBegin
; Line 282
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 283
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 284
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 285
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 287
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 288
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 289
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 290
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 292
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 293
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 294
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 295
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 297
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 298
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 299
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 300
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 302
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 303
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 304
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 305
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 307
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 308
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 309
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 310
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 312
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 313
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 314
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 315
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 317
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 318
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 319
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 320
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 322
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 323
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 324
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 325
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 327
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 328
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 329
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 330
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 332
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 333
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 334
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 335
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 337
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+88]
	mov	rcx, rax
	call	QWORD PTR __imp_glNormal3fv
; Line 338
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 0
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 339
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 1
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 340
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glTexCoord2f
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 36					; 00000024H
	imul	rcx, rcx, 2
	lea	rax, QWORD PTR [rax+rcx+76]
	mov	rcx, rax
	call	QWORD PTR __imp_glVertex3fv
; Line 341
	call	QWORD PTR __imp_glEnd
; Line 342
	call	QWORD PTR __imp_glPopMatrix
; Line 343
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Draw3DScene@@YAXXZ ENDP				; Draw3DScene
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = 48
tv84 = 56
iWidth$ = 80
iHeight$ = 88
?Set2DProjection@@YAXHH@Z PROC				; Set2DProjection
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 251
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 252
	cmp	DWORD PTR iHeight$[rsp], 0
	jne	SHORT $LN2@Set2DProje
; Line 254
	mov	DWORD PTR iHeight$[rsp], 1
$LN2@Set2DProje:
; Line 256
	mov	r9d, DWORD PTR iHeight$[rsp]
	mov	r8d, DWORD PTR iWidth$[rsp]
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_glViewport
; Line 257
	mov	ecx, 5889				; 00001701H
	call	QWORD PTR __imp_glMatrixMode
; Line 258
	call	QWORD PTR __imp_glLoadIdentity
; Line 259
	cvtsi2sd xmm0, DWORD PTR iHeight$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	mov	eax, DWORD PTR iHeight$[rsp]
	neg	eax
	cvtsi2sd xmm1, eax
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	cvtsi2sd xmm2, DWORD PTR iWidth$[rsp]
	mulsd	xmm2, QWORD PTR __real@3fe0000000000000
	movsd	QWORD PTR tv80[rsp], xmm2
	mov	eax, DWORD PTR iWidth$[rsp]
	neg	eax
	cvtsi2sd xmm3, eax
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	movsd	QWORD PTR tv84[rsp], xmm3
	movsd	xmm4, QWORD PTR __real@409f400000000000
	movsd	QWORD PTR [rsp+40], xmm4
	movsd	xmm4, QWORD PTR __real@c09f400000000000
	movsd	QWORD PTR [rsp+32], xmm4
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movsd	xmm0, QWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv84[rsp]
	call	QWORD PTR __imp_glOrtho
; Line 260
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?Set2DProjection@@YAXHH@Z ENDP				; Set2DProjection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
iWidth$ = 48
iHeight$ = 56
?Set3DProjection@@YAXHH@Z PROC				; Set3DProjection
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 238
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 239
	cmp	DWORD PTR iHeight$[rsp], 0
	jne	SHORT $LN2@Set3DProje
; Line 241
	mov	DWORD PTR iHeight$[rsp], 1
$LN2@Set3DProje:
; Line 243
	mov	r9d, DWORD PTR iHeight$[rsp]
	mov	r8d, DWORD PTR iWidth$[rsp]
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_glViewport
; Line 244
	mov	ecx, 5889				; 00001701H
	call	QWORD PTR __imp_glMatrixMode
; Line 245
	call	QWORD PTR __imp_glLoadIdentity
; Line 246
	cvtsi2ss xmm0, DWORD PTR iWidth$[rsp]
	cvtsi2ss xmm1, DWORD PTR iHeight$[rsp]
	divss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	movsd	xmm3, QWORD PTR __real@408f400000000000
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	movaps	xmm1, xmm0
	movsd	xmm0, QWORD PTR __real@4046800000000000
	call	gluPerspective
; Line 247
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Set3DProjection@@YAXHH@Z ENDP				; Set3DProjection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
fMatAmbient$ = 40
fMatDiffuse$ = 88
fMatSpecular$ = 136
fMatEmmision$ = 184
fMatShininess$ = 228
fLightAmbient$ = 264
fLightPosition$ = 312
__$ArrayPad$ = 352
?InitGL@@YAXXZ PROC					; InitGL
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 201
$LN3:
	push	rdi
	sub	rsp, 368				; 00000170H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 202
	mov	ecx, 1029				; 00000405H
	call	QWORD PTR __imp_glCullFace
; Line 203
	mov	ecx, 2884				; 00000b44H
	call	QWORD PTR __imp_glEnable
; Line 204
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glClearColor
; Line 205
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	call	QWORD PTR __imp_glClearDepth
; Line 206
	mov	ecx, 513				; 00000201H
	call	QWORD PTR __imp_glDepthFunc
; Line 207
	mov	ecx, 2929				; 00000b71H
	call	QWORD PTR __imp_glEnable
; Line 208
	mov	ecx, 7425				; 00001d01H
	call	QWORD PTR __imp_glShadeModel
; Line 209
	mov	ecx, 2977				; 00000ba1H
	call	QWORD PTR __imp_glEnable
; Line 211
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR fMatAmbient$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR fMatAmbient$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR fMatAmbient$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR fMatAmbient$[rsp+12], xmm0
; Line 212
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR fMatDiffuse$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR fMatDiffuse$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR fMatDiffuse$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR fMatDiffuse$[rsp+12], xmm0
; Line 213
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR fMatSpecular$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR fMatSpecular$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR fMatSpecular$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR fMatSpecular$[rsp+12], xmm0
; Line 214
	xorps	xmm0, xmm0
	movss	DWORD PTR fMatEmmision$[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR fMatEmmision$[rsp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR fMatEmmision$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR fMatEmmision$[rsp+12], xmm0
; Line 215
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR fMatShininess$[rsp], xmm0
; Line 217
	lea	r8, QWORD PTR fMatAmbient$[rsp]
	mov	edx, 4608				; 00001200H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 218
	lea	r8, QWORD PTR fMatDiffuse$[rsp]
	mov	edx, 4609				; 00001201H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 219
	lea	r8, QWORD PTR fMatSpecular$[rsp]
	mov	edx, 4610				; 00001202H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 220
	lea	r8, QWORD PTR fMatEmmision$[rsp]
	mov	edx, 5632				; 00001600H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 221
	lea	r8, QWORD PTR fMatShininess$[rsp]
	mov	edx, 5633				; 00001601H
	mov	ecx, 1028				; 00000404H
	call	QWORD PTR __imp_glMaterialfv
; Line 223
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR fLightAmbient$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR fLightAmbient$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR fLightAmbient$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR fLightAmbient$[rsp+12], xmm0
; Line 224
	lea	r8, QWORD PTR fLightAmbient$[rsp]
	mov	edx, 4608				; 00001200H
	mov	ecx, 16384				; 00004000H
	call	QWORD PTR __imp_glLightfv
; Line 225
	movss	xmm0, DWORD PTR __real@43480000
	movss	DWORD PTR fLightPosition$[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR fLightPosition$[rsp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR fLightPosition$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR fLightPosition$[rsp+12], xmm0
; Line 226
	lea	r8, QWORD PTR fLightPosition$[rsp]
	mov	edx, 4611				; 00001203H
	mov	ecx, 16384				; 00004000H
	call	QWORD PTR __imp_glLightfv
; Line 228
	mov	ecx, 2896				; 00000b50H
	call	QWORD PTR __imp_glEnable
; Line 229
	mov	ecx, 16384				; 00004000H
	call	QWORD PTR __imp_glEnable
; Line 231
	call	?SetTextures@@YAXXZ			; SetTextures
; Line 233
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR __imp_glEnable
; Line 234
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?InitGL@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 368				; 00000170H
	pop	rdi
	ret	0
?InitGL@@YAXXZ ENDP					; InitGL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv432 = 32
tv440 = 40
tv448 = 48
tv456 = 56
tv464 = 64
tv472 = 72
tv480 = 80
tv488 = 88
tv496 = 96
tv504 = 104
tv512 = 112
tv520 = 120
tv528 = 128
tv536 = 136
tv544 = 144
tv552 = 152
tv560 = 160
tv568 = 168
tv576 = 176
tv584 = 184
tv592 = 192
tv600 = 200
tv608 = 208
tv616 = 216
tv624 = 224
tv632 = 232
tv640 = 240
tv648 = 248
tv656 = 256
tv664 = 264
tv672 = 272
tv680 = 280
tv688 = 288
tv696 = 296
tv704 = 304
?SetPolygons@@YAXXZ PROC				; SetPolygons
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 133
$LN3:
	push	rsi
	push	rdi
	sub	rsp, 328				; 00000148H
; Line 137
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	lea	rdi, QWORD PTR [rcx+rdx+72]
	lea	rsi, QWORD PTR [r8+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 138
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv432[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv432[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 139
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv440[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv440[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 141
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv448[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv448[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 142
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv456[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv456[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 143
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv464[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv464[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 145
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv472[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv472[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 146
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv480[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv480[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 147
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv488[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv488[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 149
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv496[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv496[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 150
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv504[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv504[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 151
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv512[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv512[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 153
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv520[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv520[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 154
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv528[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv528[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 155
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv536[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv536[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 157
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv544[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv544[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 158
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv552[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv552[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 159
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv560[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv560[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 161
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv568[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv568[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 162
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv576[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv576[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 163
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv584[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv584[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 165
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 7
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv592[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv592[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 166
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 7
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv600[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv600[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 167
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 7
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv608[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv608[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 169
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 8
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv616[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv616[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 170
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 8
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv624[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv624[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 171
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 8
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv632[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv632[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 173
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 9
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv640[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv640[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 174
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 9
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv648[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv648[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 175
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 9
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv656[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv656[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 177
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 10
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv664[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv664[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 178
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 10
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv672[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv672[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 179
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 10
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv680[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv680[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 181
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 11
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 0
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv688[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv688[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 182
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 11
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 1
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv696[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv696[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 183
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	ecx, 184				; 000000b8H
	imul	rcx, rcx, 11
	mov	rdx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rdx, rcx
	mov	rcx, rdx
	mov	edx, 36					; 00000024H
	imul	rdx, rdx, 2
	mov	rdi, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	mov	QWORD PTR tv704[rsp], rdi
	lea	rdi, QWORD PTR [rcx+rdx+72]
	mov	rcx, QWORD PTR tv704[rsp]
	lea	rsi, QWORD PTR [rcx+rax]
	mov	ecx, 36					; 00000024H
	rep movsb
; Line 185
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 186
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 187
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 188
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 189
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 190
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 191
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 192
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 193
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 8
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 194
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 9
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 195
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 10
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 196
	mov	eax, 184				; 000000b8H
	imul	rax, rax, 11
	mov	rcx, QWORD PTR ?polygon@@3PEAVPOLYGON@@EA ; polygon
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?SetNormal@POLYGON@@QEAAXXZ		; POLYGON::SetNormal
; Line 197
	add	rsp, 328				; 00000148H
	pop	rdi
	pop	rsi
	ret	0
?SetPolygons@@YAXXZ ENDP				; SetPolygons
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?SetVertices@@YAXXZ PROC				; SetVertices
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 96
$LN3:
	push	rdi
; Line 99
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 100
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 101
	mov	eax, 36					; 00000024H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 103
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 104
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 105
	mov	eax, 36					; 00000024H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 107
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 108
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 109
	mov	eax, 36					; 00000024H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 111
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 112
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 113
	mov	eax, 36					; 00000024H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 115
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 116
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 117
	mov	eax, 36					; 00000024H
	imul	rax, rax, 4
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 119
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 120
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 121
	mov	eax, 36					; 00000024H
	imul	rax, rax, 5
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 123
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 124
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 125
	mov	eax, 36					; 00000024H
	imul	rax, rax, 6
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 127
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 128
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 129
	mov	eax, 36					; 00000024H
	imul	rax, rax, 7
	mov	rcx, QWORD PTR ?vertex@@3PEAVVERTEX@@EA	; vertex
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 130
	pop	rdi
	ret	0
?SetVertices@@YAXXZ ENDP				; SetVertices
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?SetTextures@@YAXXZ PROC				; SetTextures
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 90
$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 91
	mov	eax, 72					; 00000048H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?texture@@3PEAVTEXTURE@@EA ; texture
	add	rcx, rax
	mov	rax, rcx
	lea	r8, OFFSET FLAT:$SG123520
	lea	rdx, OFFSET FLAT:$SG123521
	mov	rcx, rax
	call	sprintf
; Line 92
	mov	eax, 72					; 00000048H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?texture@@3PEAVTEXTURE@@EA ; texture
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?LoadTGA@TEXTURE@@QEAA_NXZ		; TEXTURE::LoadTGA
; Line 93
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetTextures@@YAXXZ ENDP				; SetTextures
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_child@@YAXXZ
text$di	SEGMENT
$T1 = 32
tv67 = 40
??__Eg_child@@YAXXZ PROC				; `dynamic initializer for 'g_child'', COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 87
	push	rdi
	sub	rsp, 48					; 00000030H
	movsxd	rax, DWORD PTR ?g_iMaxChild@@3HA	; g_iMaxChild
	mov	QWORD PTR tv67[rsp], rax
	mov	eax, 32					; 00000020H
	mov	rcx, QWORD PTR tv67[rsp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR ?g_child@@3PEAUCHILD@@EA, rax	; g_child
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??__Eg_child@@YAXXZ ENDP				; `dynamic initializer for 'g_child''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Esphere@@YAXXZ
text$di	SEGMENT
??__Esphere@@YAXXZ PROC					; `dynamic initializer for 'sphere'', COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 69
	push	rdi
	sub	rsp, 32					; 00000020H
	call	gluNewQuadric
	mov	QWORD PTR ?sphere@@3PEAVGLUquadric@@EA, rax ; sphere
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??__Esphere@@YAXXZ ENDP					; `dynamic initializer for 'sphere''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epolygon@@YAXXZ
text$di	SEGMENT
$T1 = 48
$T2 = 56
tv80 = 64
??__Epolygon@@YAXXZ PROC				; `dynamic initializer for 'polygon'', COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 41
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	ecx, 2216				; 000008a8H
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN3@dynamic
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rax], 12
	mov	rax, QWORD PTR $T2[rsp]
	add	rax, 8
	lea	rcx, OFFSET FLAT:??1POLYGON@@QEAA@XZ	; POLYGON::~POLYGON
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??0POLYGON@@QEAA@XZ	; POLYGON::POLYGON
	mov	r8d, 12
	mov	edx, 184				; 000000b8H
	mov	rcx, rax
	call	??_L@YAXPEAX_K1P6AX0@Z2@Z
	mov	rax, QWORD PTR $T2[rsp]
	add	rax, 8
	mov	QWORD PTR tv80[rsp], rax
	jmp	SHORT $LN4@dynamic
$LN3@dynamic:
	mov	QWORD PTR tv80[rsp], 0
$LN4@dynamic:
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR ?polygon@@3PEAVPOLYGON@@EA, rax ; polygon
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??__Epolygon@@YAXXZ ENDP				; `dynamic initializer for 'polygon''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
tv80 = 64
?dtor$0@?0???__Epolygon@@YAXXZ@4HA PROC			; ``dynamic initializer for 'polygon'''::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	edx, 2216				; 000008a8H
	mov	rcx, QWORD PTR $T2[rbp]
	call	??_V@YAXPEAX_K@Z			; operator delete[]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???__Epolygon@@YAXXZ@4HA ENDP			; ``dynamic initializer for 'polygon'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Evertex@@YAXXZ
text$di	SEGMENT
$T1 = 48
$T2 = 56
tv80 = 64
??__Evertex@@YAXXZ PROC					; `dynamic initializer for 'vertex'', COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 38
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	ecx, 296				; 00000128H
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN3@dynamic
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rax], 8
	mov	rax, QWORD PTR $T2[rsp]
	add	rax, 8
	lea	rcx, OFFSET FLAT:??1VERTEX@@QEAA@XZ	; VERTEX::~VERTEX
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??_FVERTEX@@QEAAXXZ
	mov	r8d, 8
	mov	edx, 36					; 00000024H
	mov	rcx, rax
	call	??_L@YAXPEAX_K1P6AX0@Z2@Z
	mov	rax, QWORD PTR $T2[rsp]
	add	rax, 8
	mov	QWORD PTR tv80[rsp], rax
	jmp	SHORT $LN4@dynamic
$LN3@dynamic:
	mov	QWORD PTR tv80[rsp], 0
$LN4@dynamic:
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR ?vertex@@3PEAVVERTEX@@EA, rax	; vertex
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??__Evertex@@YAXXZ ENDP					; `dynamic initializer for 'vertex''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
tv80 = 64
?dtor$0@?0???__Evertex@@YAXXZ@4HA PROC			; ``dynamic initializer for 'vertex'''::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	edx, 296				; 00000128H
	mov	rcx, QWORD PTR $T2[rbp]
	call	??_V@YAXPEAX_K@Z			; operator delete[]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???__Evertex@@YAXXZ@4HA ENDP			; ``dynamic initializer for 'vertex'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Etexture@@YAXXZ
text$di	SEGMENT
$T1 = 48
$T2 = 56
tv80 = 64
??__Etexture@@YAXXZ PROC				; `dynamic initializer for 'texture'', COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 35
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	ecx, 80					; 00000050H
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN3@dynamic
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rax], 1
	mov	rax, QWORD PTR $T2[rsp]
	add	rax, 8
	lea	rcx, OFFSET FLAT:??1TEXTURE@@QEAA@XZ	; TEXTURE::~TEXTURE
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??0TEXTURE@@QEAA@XZ	; TEXTURE::TEXTURE
	mov	r8d, 1
	mov	edx, 72					; 00000048H
	mov	rcx, rax
	call	??_L@YAXPEAX_K1P6AX0@Z2@Z
	mov	rax, QWORD PTR $T2[rsp]
	add	rax, 8
	mov	QWORD PTR tv80[rsp], rax
	jmp	SHORT $LN4@dynamic
$LN3@dynamic:
	mov	QWORD PTR tv80[rsp], 0
$LN4@dynamic:
	mov	rax, QWORD PTR tv80[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR ?texture@@3PEAVTEXTURE@@EA, rax ; texture
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??__Etexture@@YAXXZ ENDP				; `dynamic initializer for 'texture''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
tv80 = 64
?dtor$0@?0???__Etexture@@YAXXZ@4HA PROC			; ``dynamic initializer for 'texture'''::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	edx, 80					; 00000050H
	mov	rcx, QWORD PTR $T2[rbp]
	call	??_V@YAXPEAX_K@Z			; operator delete[]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???__Etexture@@YAXXZ@4HA ENDP			; ``dynamic initializer for 'texture'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eradians@@YAXXZ
text$di	SEGMENT
??__Eradians@@YAXXZ PROC				; `dynamic initializer for 'radians'', COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 25
	push	rdi
	movss	xmm0, DWORD PTR ?pi@@3MA		; pi
	divss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR ?radians@@3MA, xmm0		; radians
	pop	rdi
	ret	0
??__Eradians@@YAXXZ ENDP				; `dynamic initializer for 'radians''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_EPOLYGON@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_EPOLYGON@@QEAAPEAXI@Z PROC				; POLYGON::`vector deleting destructor', COMDAT
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@vector
	lea	r9, OFFSET FLAT:??1POLYGON@@QEAA@XZ	; POLYGON::~POLYGON
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax-8]
	mov	edx, 184				; 000000b8H
	mov	rcx, QWORD PTR this$[rsp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@vector
	mov	rax, QWORD PTR this$[rsp]
	imul	rax, QWORD PTR [rax-8], 184		; 000000b8H
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 8
	mov	rdx, rax
	call	??_V@YAXPEAX_K@Z			; operator delete[]
$LN3@vector:
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 8
	jmp	SHORT $LN1@vector
$LN2@vector:
	mov	rcx, QWORD PTR this$[rsp]
	call	??1POLYGON@@QEAA@XZ			; POLYGON::~POLYGON
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@vector
	mov	edx, 184				; 000000b8H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@vector:
	mov	rax, QWORD PTR this$[rsp]
$LN1@vector:
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_EPOLYGON@@QEAAPEAXI@Z ENDP				; POLYGON::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_ETEXTURE@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_ETEXTURE@@QEAAPEAXI@Z PROC				; TEXTURE::`vector deleting destructor', COMDAT
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@vector
	lea	r9, OFFSET FLAT:??1TEXTURE@@QEAA@XZ	; TEXTURE::~TEXTURE
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax-8]
	mov	edx, 72					; 00000048H
	mov	rcx, QWORD PTR this$[rsp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@vector
	mov	rax, QWORD PTR this$[rsp]
	imul	rax, QWORD PTR [rax-8], 72		; 00000048H
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 8
	mov	rdx, rax
	call	??_V@YAXPEAX_K@Z			; operator delete[]
$LN3@vector:
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 8
	jmp	SHORT $LN1@vector
$LN2@vector:
	mov	rcx, QWORD PTR this$[rsp]
	call	??1TEXTURE@@QEAA@XZ			; TEXTURE::~TEXTURE
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@vector
	mov	edx, 72					; 00000048H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@vector:
	mov	rax, QWORD PTR this$[rsp]
$LN1@vector:
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_ETEXTURE@@QEAAPEAXI@Z ENDP				; TEXTURE::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_EVERTEX@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_EVERTEX@@QEAAPEAXI@Z PROC				; VERTEX::`vector deleting destructor', COMDAT
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@vector
	lea	r9, OFFSET FLAT:??1VERTEX@@QEAA@XZ	; VERTEX::~VERTEX
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax-8]
	mov	edx, 36					; 00000024H
	mov	rcx, QWORD PTR this$[rsp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@vector
	mov	rax, QWORD PTR this$[rsp]
	imul	rax, QWORD PTR [rax-8], 36		; 00000024H
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 8
	mov	rdx, rax
	call	??_V@YAXPEAX_K@Z			; operator delete[]
$LN3@vector:
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 8
	jmp	SHORT $LN1@vector
$LN2@vector:
	mov	rcx, QWORD PTR this$[rsp]
	call	??1VERTEX@@QEAA@XZ			; VERTEX::~VERTEX
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@vector
	mov	edx, 36					; 00000024H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@vector:
	mov	rax, QWORD PTR this$[rsp]
$LN1@vector:
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_EVERTEX@@QEAAPEAXI@Z ENDP				; VERTEX::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_FVERTEX@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
??_FVERTEX@@QEAAXXZ PROC				; VERTEX::`default constructor closure', COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR this$[rsp]
	call	??0VERTEX@@QEAA@MMMMMM@Z		; VERTEX::VERTEX
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??_FVERTEX@@QEAAXXZ ENDP				; VERTEX::`default constructor closure'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT sprintf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Buffer$ = 96
_Format$ = 104
sprintf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 1771
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 1774
	lea	rax, QWORD PTR _Format$[rsp+8]
	mov	QWORD PTR _ArgList$[rsp], rax
; Line 1776
	mov	r9, QWORD PTR _ArgList$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rsp]
	mov	rcx, QWORD PTR _Buffer$[rsp]
	call	_vsprintf_l
	mov	DWORD PTR _Result$[rsp], eax
; Line 1778
	mov	QWORD PTR _ArgList$[rsp], 0
; Line 1779
	mov	eax, DWORD PTR _Result$[rsp]
; Line 1780
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:sprintf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
sprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _vsprintf_l
_TEXT	SEGMENT
_Buffer$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vsprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 1458
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 1459
	mov	rax, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR _Locale$[rsp]
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, -1
	mov	rcx, QWORD PTR _Buffer$[rsp]
	call	_vsnprintf_l
; Line 1460
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _vsnprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 1391
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 1392
	call	__local_stdio_printf_options
	mov	rax, QWORD PTR [rax]
	or	rax, 1
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rsp]
	mov	r8, QWORD PTR _BufferCount$[rsp]
	mov	rdx, QWORD PTR _Buffer$[rsp]
	mov	rcx, rax
	call	__stdio_common_vsprintf
	mov	DWORD PTR _Result$[rsp], eax
; Line 1396
	cmp	DWORD PTR _Result$[rsp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[rsp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	eax, DWORD PTR _Result$[rsp]
	mov	DWORD PTR tv74[rsp], eax
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[rsp]
; Line 1397
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
_vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
; Line 90
$LN3:
	push	rdi
; Line 92
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	rdi
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
Msg$ = 104
wc$ = 192
iLoop$ = 276
tv221 = 280
hInstance$ = 304
__formal$ = 312
__formal$ = 320
nCmdShow$ = 328
WinMain	PROC
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 1494
$LN32:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 288				; 00000120H
	lea	rdi, QWORD PTR [rsp+96]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+304]
; Line 1497
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR ?g_hInst@@3PEAUHINSTANCE__@@EA, rax ; g_hInst
; Line 1500
	mov	DWORD PTR wc$[rsp], 80			; 00000050H
; Line 1501
	mov	DWORD PTR wc$[rsp+4], 43		; 0000002bH
; Line 1502
	lea	rax, OFFSET FLAT:?Child3DWndProc@@YA_JPEAUHWND__@@I_K_J@Z ; Child3DWndProc
	mov	QWORD PTR wc$[rsp+8], rax
; Line 1503
	mov	DWORD PTR wc$[rsp+16], 0
; Line 1504
	mov	DWORD PTR wc$[rsp+20], 0
; Line 1505
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR wc$[rsp+24], rax
; Line 1506
	mov	edx, 105				; 00000069H
	mov	rcx, QWORD PTR hInstance$[rsp]
	call	QWORD PTR __imp_LoadIconA
	mov	QWORD PTR wc$[rsp+32], rax
; Line 1507
	mov	edx, 32512				; 00007f00H
	xor	ecx, ecx
	call	QWORD PTR __imp_LoadCursorA
	mov	QWORD PTR wc$[rsp+40], rax
; Line 1508
	mov	QWORD PTR wc$[rsp+48], 17
; Line 1509
	mov	QWORD PTR wc$[rsp+56], 0
; Line 1510
	lea	rax, OFFSET FLAT:?g_szChild3DClassName@@3PADA ; g_szChild3DClassName
	mov	QWORD PTR wc$[rsp+64], rax
; Line 1511
	mov	edx, 105				; 00000069H
	mov	rcx, QWORD PTR hInstance$[rsp]
	call	QWORD PTR __imp_LoadIconA
	mov	QWORD PTR wc$[rsp+72], rax
; Line 1513
	lea	rcx, QWORD PTR wc$[rsp]
	call	QWORD PTR __imp_RegisterClassExA
	movzx	eax, ax
	test	eax, eax
	jne	SHORT $LN9@WinMain
; Line 1515
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123915
	lea	rdx, OFFSET FLAT:$SG123916
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 1516
	xor	eax, eax
	jmp	$LN1@WinMain
$LN9@WinMain:
; Line 1520
	mov	DWORD PTR wc$[rsp], 80			; 00000050H
; Line 1521
	mov	DWORD PTR wc$[rsp+4], 43		; 0000002bH
; Line 1522
	lea	rax, OFFSET FLAT:?Child2DWndProc@@YA_JPEAUHWND__@@I_K_J@Z ; Child2DWndProc
	mov	QWORD PTR wc$[rsp+8], rax
; Line 1523
	mov	DWORD PTR wc$[rsp+16], 0
; Line 1524
	mov	DWORD PTR wc$[rsp+20], 0
; Line 1525
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR wc$[rsp+24], rax
; Line 1526
	mov	edx, 105				; 00000069H
	mov	rcx, QWORD PTR hInstance$[rsp]
	call	QWORD PTR __imp_LoadIconA
	mov	QWORD PTR wc$[rsp+32], rax
; Line 1527
	mov	edx, 32512				; 00007f00H
	xor	ecx, ecx
	call	QWORD PTR __imp_LoadCursorA
	mov	QWORD PTR wc$[rsp+40], rax
; Line 1528
	mov	QWORD PTR wc$[rsp+48], 17
; Line 1529
	mov	QWORD PTR wc$[rsp+56], 0
; Line 1530
	lea	rax, OFFSET FLAT:?g_szChild2DClassName@@3PADA ; g_szChild2DClassName
	mov	QWORD PTR wc$[rsp+64], rax
; Line 1531
	mov	edx, 105				; 00000069H
	mov	rcx, QWORD PTR hInstance$[rsp]
	call	QWORD PTR __imp_LoadIconA
	mov	QWORD PTR wc$[rsp+72], rax
; Line 1533
	lea	rcx, QWORD PTR wc$[rsp]
	call	QWORD PTR __imp_RegisterClassExA
	movzx	eax, ax
	test	eax, eax
	jne	SHORT $LN10@WinMain
; Line 1535
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123918
	lea	rdx, OFFSET FLAT:$SG123919
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 1536
	xor	eax, eax
	jmp	$LN1@WinMain
$LN10@WinMain:
; Line 1540
	mov	DWORD PTR wc$[rsp], 80			; 00000050H
; Line 1541
	mov	DWORD PTR wc$[rsp+4], 3
; Line 1542
	lea	rax, OFFSET FLAT:?WndProc@@YA_JPEAUHWND__@@I_K_J@Z ; WndProc
	mov	QWORD PTR wc$[rsp+8], rax
; Line 1543
	mov	DWORD PTR wc$[rsp+16], 0
; Line 1544
	mov	DWORD PTR wc$[rsp+20], 0
; Line 1545
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR wc$[rsp+24], rax
; Line 1546
	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR hInstance$[rsp]
	call	QWORD PTR __imp_LoadIconA
	mov	QWORD PTR wc$[rsp+32], rax
; Line 1547
	mov	edx, 32512				; 00007f00H
	xor	ecx, ecx
	call	QWORD PTR __imp_LoadCursorA
	mov	QWORD PTR wc$[rsp+40], rax
; Line 1548
	mov	QWORD PTR wc$[rsp+48], 17
; Line 1549
	lea	rax, OFFSET FLAT:$SG123920
	mov	QWORD PTR wc$[rsp+56], rax
; Line 1550
	lea	rax, OFFSET FLAT:?g_szMainClassName@@3PADA ; g_szMainClassName
	mov	QWORD PTR wc$[rsp+64], rax
; Line 1551
	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR hInstance$[rsp]
	call	QWORD PTR __imp_LoadIconA
	mov	QWORD PTR wc$[rsp+72], rax
; Line 1553
	lea	rcx, QWORD PTR wc$[rsp]
	call	QWORD PTR __imp_RegisterClassExA
	movzx	eax, ax
	test	eax, eax
	jne	SHORT $LN11@WinMain
; Line 1555
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123922
	lea	rdx, OFFSET FLAT:$SG123923
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 1557
	mov	eax, -1
	jmp	$LN1@WinMain
$LN11@WinMain:
; Line 1560
	mov	QWORD PTR [rsp+88], 0
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	QWORD PTR [rsp+64], 0
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 47120384				; 02cf0000H
	lea	r8, OFFSET FLAT:$SG123924
	lea	rdx, OFFSET FLAT:?g_szMainClassName@@3PADA ; g_szMainClassName
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA, rax ; g_hMainWindow
; Line 1565
	cmp	QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA, 0 ; g_hMainWindow
	jne	SHORT $LN12@WinMain
; Line 1567
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:$SG123926
	lea	rdx, OFFSET FLAT:$SG123927
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 1568
	mov	eax, -1
	jmp	$LN1@WinMain
$LN12@WinMain:
; Line 1571
	mov	edx, DWORD PTR nCmdShow$[rsp]
	mov	rcx, QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA ; g_hMainWindow
	call	QWORD PTR __imp_ShowWindow
; Line 1572
	mov	rcx, QWORD PTR ?g_hMainWindow@@3PEAUHWND__@@EA ; g_hMainWindow
	call	QWORD PTR __imp_UpdateWindow
; Line 1573
	call	?SetVertices@@YAXXZ			; SetVertices
; Line 1574
	call	?SetPolygons@@YAXXZ			; SetPolygons
$LN2@WinMain:
; Line 1577
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR Msg$[rsp]
	call	QWORD PTR __imp_GetMessageA
	test	eax, eax
	je	$LN3@WinMain
; Line 1579
	lea	rdx, QWORD PTR Msg$[rsp]
	mov	rcx, QWORD PTR ?g_hMDIClient@@3PEAUHWND__@@EA ; g_hMDIClient
	call	QWORD PTR __imp_TranslateMDISysAccel
	test	eax, eax
	jne	SHORT $LN13@WinMain
; Line 1581
	lea	rcx, QWORD PTR Msg$[rsp]
	call	QWORD PTR __imp_TranslateMessage
; Line 1582
	lea	rcx, QWORD PTR Msg$[rsp]
	call	QWORD PTR __imp_DispatchMessageA
$LN13@WinMain:
; Line 1585
	cmp	DWORD PTR ?g_iNumChild@@3HA, 0		; g_iNumChild
	je	$LN14@WinMain
; Line 1587
	mov	DWORD PTR iLoop$[rsp], 0
	jmp	SHORT $LN6@WinMain
$LN4@WinMain:
	mov	eax, DWORD PTR iLoop$[rsp]
	inc	eax
	mov	DWORD PTR iLoop$[rsp], eax
$LN6@WinMain:
	mov	eax, DWORD PTR ?g_iNumChild@@3HA	; g_iNumChild
	cmp	DWORD PTR iLoop$[rsp], eax
	jge	$LN5@WinMain
; Line 1589
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	QWORD PTR __imp_IsIconic
	test	eax, eax
	jne	$LN15@WinMain
; Line 1591
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	movsxd	rcx, DWORD PTR iLoop$[rsp]
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rdx, QWORD PTR [rdx+rax+16]
	mov	rax, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rax+rcx+8]
	call	QWORD PTR __imp_wglMakeCurrent
; Line 1592
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	lea	rdx, OFFSET FLAT:?g_rectChild@@3UtagRECT@@A ; g_rectChild
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	QWORD PTR __imp_GetClientRect
; Line 1593
	cmp	DWORD PTR ?g_rectChild@@3UtagRECT@@A+8, 0
	jle	$LN16@WinMain
	cmp	DWORD PTR ?g_rectChild@@3UtagRECT@@A+12, 0
	jle	$LN16@WinMain
; Line 1595
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	cmp	DWORD PTR [rcx+rax], 1
	jne	SHORT $LN17@WinMain
; Line 1597
	mov	edx, DWORD PTR ?g_rectChild@@3UtagRECT@@A+12
	mov	ecx, DWORD PTR ?g_rectChild@@3UtagRECT@@A+8
	call	?Set3DProjection@@YAXHH@Z		; Set3DProjection
; Line 1598
	call	?Draw3DScene@@YAXXZ			; Draw3DScene
; Line 1599
	jmp	$LN18@WinMain
$LN17@WinMain:
; Line 1602
	mov	edx, DWORD PTR ?g_rectChild@@3UtagRECT@@A+12
	mov	ecx, DWORD PTR ?g_rectChild@@3UtagRECT@@A+8
	call	?Set2DProjection@@YAXHH@Z		; Set2DProjection
; Line 1603
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR tv221[rsp], eax
	cmp	DWORD PTR tv221[rsp], 2
	je	SHORT $LN19@WinMain
	cmp	DWORD PTR tv221[rsp], 3
	je	SHORT $LN20@WinMain
	cmp	DWORD PTR tv221[rsp], 4
	je	SHORT $LN21@WinMain
	jmp	SHORT $LN7@WinMain
$LN19@WinMain:
; Line 1606
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	?Draw2DSceneFront@@YAXPEAUHWND__@@@Z	; Draw2DSceneFront
; Line 1607
	jmp	SHORT $LN7@WinMain
$LN20@WinMain:
; Line 1610
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	?Draw2DSceneTop@@YAXPEAUHWND__@@@Z	; Draw2DSceneTop
; Line 1611
	jmp	SHORT $LN7@WinMain
$LN21@WinMain:
; Line 1614
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+24]
	call	?Draw2DSceneLeft@@YAXPEAUHWND__@@@Z	; Draw2DSceneLeft
$LN7@WinMain:
$LN18@WinMain:
$LN16@WinMain:
; Line 1619
	call	QWORD PTR __imp_glFlush
; Line 1620
	movsxd	rax, DWORD PTR iLoop$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR ?g_child@@3PEAUCHILD@@EA	; g_child
	mov	rcx, QWORD PTR [rcx+rax+8]
	call	QWORD PTR __imp_SwapBuffers
; Line 1622
	mov	eax, 1
	imul	rax, rax, 49				; 00000031H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN22@WinMain
; Line 1624
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR ?Zoom@@3MA		; Zoom
	jbe	SHORT $LN23@WinMain
; Line 1625
	cvtss2sd xmm0, DWORD PTR ?Zoom@@3MA		; Zoom
	addsd	xmm0, QWORD PTR __real@3f50624dd2f1a9fc
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?Zoom@@3MA, xmm0		; Zoom
$LN23@WinMain:
$LN22@WinMain:
; Line 1628
	mov	eax, 1
	imul	rax, rax, 50				; 00000032H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN24@WinMain
; Line 1630
	movss	xmm0, DWORD PTR ?Zoom@@3MA		; Zoom
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN25@WinMain
; Line 1631
	cvtss2sd xmm0, DWORD PTR ?Zoom@@3MA		; Zoom
	subsd	xmm0, QWORD PTR __real@3f50624dd2f1a9fc
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ?Zoom@@3MA, xmm0		; Zoom
$LN25@WinMain:
$LN24@WinMain:
; Line 1634
	mov	eax, 1
	imul	rax, rax, 51				; 00000033H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN26@WinMain
; Line 1636
	mov	eax, DWORD PTR ?VerticalShift@@3HA	; VerticalShift
	inc	eax
	mov	DWORD PTR ?VerticalShift@@3HA, eax	; VerticalShift
$LN26@WinMain:
; Line 1639
	mov	eax, 1
	imul	rax, rax, 52				; 00000034H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN27@WinMain
; Line 1641
	mov	eax, DWORD PTR ?VerticalShift@@3HA	; VerticalShift
	dec	eax
	mov	DWORD PTR ?VerticalShift@@3HA, eax	; VerticalShift
$LN27@WinMain:
; Line 1644
	mov	eax, 1
	imul	rax, rax, 53				; 00000035H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN28@WinMain
; Line 1646
	mov	eax, DWORD PTR ?HorizontalShift@@3HA	; HorizontalShift
	inc	eax
	mov	DWORD PTR ?HorizontalShift@@3HA, eax	; HorizontalShift
$LN28@WinMain:
; Line 1649
	mov	eax, 1
	imul	rax, rax, 54				; 00000036H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN29@WinMain
; Line 1651
	mov	eax, DWORD PTR ?HorizontalShift@@3HA	; HorizontalShift
	dec	eax
	mov	DWORD PTR ?HorizontalShift@@3HA, eax	; HorizontalShift
$LN29@WinMain:
; Line 1654
	mov	eax, 1
	imul	rax, rax, 32				; 00000020H
	lea	rcx, OFFSET FLAT:?key@@3PA_NA		; key
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN30@WinMain
; Line 1656
	call	?SetVertices@@YAXXZ			; SetVertices
; Line 1657
	call	?SetPolygons@@YAXXZ			; SetPolygons
$LN30@WinMain:
$LN15@WinMain:
; Line 1661
	jmp	$LN4@WinMain
$LN5@WinMain:
$LN14@WinMain:
; Line 1663
	jmp	$LN2@WinMain
$LN3@WinMain:
; Line 1664
	mov	eax, DWORD PTR Msg$[rsp+16]
$LN1@WinMain:
; Line 1665
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:WinMain$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 288				; 00000120H
	pop	rdi
	ret	0
WinMain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 1690
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\Oglmdi2.cpp
; Line 1690
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
