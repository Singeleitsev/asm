; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33133.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG124700 DB	'invalid argument', 00H
	ORG $+3
$SG124701 DB	'%s', 00H
	ORG $+9
$SG124702 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.38.33130\include\xmemory', 00H
	ORG $+14
$SG124703 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '8', 00H, '.', 00H, '3', 00H, '3'
	DB	00H, '1', 00H, '3', 00H, '0', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG124704 DB	00H, 00H
	ORG $+2
$SG124705 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	??0QUAT@@QEAA@MMMM@Z				; QUAT::QUAT
PUBLIC	??1QUAT@@QEAA@XZ				; QUAT::~QUAT
PUBLIC	?Set@QUAT@@QEAAXXZ				; QUAT::Set
PUBLIC	?CopyQuat@QUAT@@QEAAXV1@@Z			; QUAT::CopyQuat
PUBLIC	?AxisAngleToQuat@QUAT@@QEAAXVVECTOR@@M@Z	; QUAT::AxisAngleToQuat
PUBLIC	?EulerToQuat@QUAT@@QEAAXMMM@Z			; QUAT::EulerToQuat
PUBLIC	?NormaliseQuat@QUAT@@QEAAXXZ			; QUAT::NormaliseQuat
PUBLIC	?MagnitudeQuat@QUAT@@QEAAMXZ			; QUAT::MagnitudeQuat
PUBLIC	?MultQuat@QUAT@@QEAAXV1@@Z			; QUAT::MultQuat
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@40000000
EXTRN	cosf:PROC
EXTRN	sinf:PROC
EXTRN	sqrtf:PROC
EXTRN	??0VECTOR@@QEAA@MMM@Z:PROC			; VECTOR::VECTOR
EXTRN	??1VECTOR@@QEAA@XZ:PROC				; VECTOR::~VECTOR
EXTRN	?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z:PROC	; VECTOR::CrossProduct
EXTRN	?DotProduct@VECTOR@@QEAAMV1@@Z:PROC		; VECTOR::DotProduct
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cos@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?cos@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sin@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?sin@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sqrt@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?sqrt@@YAMM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0QUAT@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0QUAT@@QEAA@MMMM@Z
$pdata$??1QUAT@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1QUAT@@QEAA@XZ
$pdata$?Set@QUAT@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?Set@QUAT@@QEAAXXZ
$pdata$?CopyQuat@QUAT@@QEAAXV1@@Z DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?CopyQuat@QUAT@@QEAAXV1@@Z
$pdata$?AxisAngleToQuat@QUAT@@QEAAXVVECTOR@@M@Z DD imagerel $LN4
	DD	imagerel $LN4+187
	DD	imagerel $unwind$?AxisAngleToQuat@QUAT@@QEAAXVVECTOR@@M@Z
$pdata$?EulerToQuat@QUAT@@QEAAXMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+395
	DD	imagerel $unwind$?EulerToQuat@QUAT@@QEAAXMMM@Z
$pdata$?NormaliseQuat@QUAT@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$?NormaliseQuat@QUAT@@QEAAXXZ
$pdata$?MagnitudeQuat@QUAT@@QEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?MagnitudeQuat@QUAT@@QEAAMXZ
$pdata$?MultQuat@QUAT@@QEAAXV1@@Z DD imagerel $LN11
	DD	imagerel $LN11+986
	DD	imagerel $unwind$?MultQuat@QUAT@@QEAAXV1@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$pdata$?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$pdata$?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$pdata$?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$pdata$?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$pdata$?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$pdata$?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD imagerel ?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	imagerel ?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
pdata	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DD	00H
	DD	05H
voltbl	ENDS
CONST	SEGMENT
	ORG $+2
?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$0 DB 071H		; QUAT::MultQuat
	DB	033H
	DB	00H
	ORG $+5
?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$1 DB 076H		; QUAT::MultQuat
	DB	065H
	DB	063H
	DB	074H
	DB	06fH
	DB	072H
	DB	071H
	DB	031H
	DB	00H
	ORG $+7
?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$2 DB 076H		; QUAT::MultQuat
	DB	065H
	DB	063H
	DB	074H
	DB	06fH
	DB	072H
	DB	071H
	DB	032H
	DB	00H
	ORG $+7
?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$3 DB 074H		; QUAT::MultQuat
	DB	065H
	DB	06dH
	DB	070H
	DB	076H
	DB	065H
	DB	063H
	DB	031H
	DB	00H
	ORG $+7
?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$4 DB 074H		; QUAT::MultQuat
	DB	065H
	DB	06dH
	DB	070H
	DB	076H
	DB	065H
	DB	063H
	DB	032H
	DB	00H
	ORG $+7
?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$5 DB 074H		; QUAT::MultQuat
	DB	065H
	DB	06dH
	DB	070H
	DB	076H
	DB	065H
	DB	063H
	DB	033H
	DB	00H
	ORG $+15
?MultQuat@QUAT@@QEAAXV1@@Z$rtcVarDesc DD 0128H		; QUAT::MultQuat
	DD	0cH
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$5
	DD	0f8H
	DD	0cH
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$4
	DD	0c8H
	DD	0cH
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$3
	DD	098H
	DD	0cH
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$2
	DD	068H
	DD	0cH
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcName$0
	ORG $+288
?MultQuat@QUAT@@QEAAXV1@@Z$rtcFrameData DD 06H		; QUAT::MultQuat
	DD	00H
	DQ	FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$??0QUAT@@QEAA@MMMM@Z DD 011801H
	DD	07018H
$unwind$??1QUAT@@QEAA@XZ DD 010601H
	DD	07006H
$unwind$?Set@QUAT@@QEAAXXZ DD 010601H
	DD	07006H
$unwind$?CopyQuat@QUAT@@QEAAXV1@@Z DD 020f01H
	DD	0700b320fH
$unwind$?AxisAngleToQuat@QUAT@@QEAAXVVECTOR@@M@Z DD 021501H
	DD	070115215H
$unwind$?EulerToQuat@QUAT@@QEAAXMMM@Z DD 021c01H
	DD	07018721cH
$unwind$?NormaliseQuat@QUAT@@QEAAXXZ DD 020a01H
	DD	07006520aH
$unwind$?MagnitudeQuat@QUAT@@QEAAMXZ DD 020a01H
	DD	07006520aH
$unwind$?MultQuat@QUAT@@QEAAXV1@@Z DD 042c11H
	DD	0330113H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?MultQuat@QUAT@@QEAAXV1@@Z
$cppxdata$?MultQuat@QUAT@@QEAAXV1@@Z DB 028H
	DD	imagerel $stateUnwindMap$?MultQuat@QUAT@@QEAAXV1@@Z
	DD	imagerel $ip2state$?MultQuat@QUAT@@QEAAXV1@@Z
$stateUnwindMap$?MultQuat@QUAT@@QEAAXV1@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA
$ip2state$?MultQuat@QUAT@@QEAAXV1@@Z DB 01eH
	DB	00H
	DB	00H
	DB	'X'
	DB	02H
	DB	'D'
	DB	04H
	DB	'('
	DB	06H
	DB	'.'
	DB	08H
	DB	'A', 02H
	DB	0aH
	DB	'.'
	DB	0cH
	DB	'.'
	DB	0eH
	DB	0bdH, 08H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	01cH
	DB	04H
	DB	016H
	DB	02H
	DB	016H
	DB	00H
	ORG $+2
$unwind$?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sqrt@@YAMM@Z DD 020b01H
	DD	07007520bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sin@@YAMM@Z DD 020b01H
	DD	07007520bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cos@@YAMM@Z DD 020b01H
	DD	07007520bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?MultQuat@QUAT@@QEAAXV1@@Z PROC				; QUAT::MultQuat
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 79
$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+432]
; Line 80
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR q3$[rsp]
	call	??0QUAT@@QEAA@MMMM@Z			; QUAT::QUAT
	npad	1
; Line 81
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR vectorq1$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 82
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR vectorq2$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 83
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR vectorq1$[rsp], xmm0
; Line 84
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR vectorq1$[rsp+4], xmm0
; Line 85
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR vectorq1$[rsp+8], xmm0
; Line 86
	mov	rax, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR vectorq2$[rsp], xmm0
; Line 87
	mov	rax, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR vectorq2$[rsp+4], xmm0
; Line 88
	mov	rax, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR vectorq2$[rsp+8], xmm0
; Line 90
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR tempvec1$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 91
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR tempvec2$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 92
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR tempvec3$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 93
	lea	rax, QWORD PTR tempvec1$[rsp]
	lea	rcx, QWORD PTR vectorq1$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 94
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR tv142[rsp], xmm0
	lea	rax, QWORD PTR $T10[rsp]
	lea	rcx, QWORD PTR vectorq2$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rdx, QWORD PTR $T10[rsp]
	lea	rcx, QWORD PTR tempvec1$[rsp]
	call	?DotProduct@VECTOR@@QEAAMV1@@Z		; VECTOR::DotProduct
	movss	xmm1, DWORD PTR tv142[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR q3$[rsp+12], xmm0
; Line 95
	lea	rax, QWORD PTR $T11[rsp]
	lea	rcx, QWORD PTR vectorq2$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	r8, QWORD PTR $T11[rsp]
	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR tempvec1$[rsp]
	call	?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z	; VECTOR::CrossProduct
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
; Line 96
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR tempvec2$[rsp], xmm0
; Line 97
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR tempvec2$[rsp+4], xmm0
; Line 98
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR tempvec2$[rsp+8], xmm0
; Line 99
	mov	rax, QWORD PTR q$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR tempvec3$[rsp], xmm0
; Line 100
	mov	rax, QWORD PTR q$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR tempvec3$[rsp+4], xmm0
; Line 101
	mov	rax, QWORD PTR q$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR tempvec3$[rsp+8], xmm0
; Line 102
	movss	xmm0, DWORD PTR tempvec1$[rsp]
	addss	xmm0, DWORD PTR tempvec2$[rsp]
	addss	xmm0, DWORD PTR tempvec3$[rsp]
	movss	DWORD PTR q3$[rsp], xmm0
; Line 103
	movss	xmm0, DWORD PTR tempvec1$[rsp+4]
	addss	xmm0, DWORD PTR tempvec2$[rsp+4]
	addss	xmm0, DWORD PTR tempvec3$[rsp+4]
	movss	DWORD PTR q3$[rsp+4], xmm0
; Line 104
	movss	xmm0, DWORD PTR tempvec1$[rsp+8]
	addss	xmm0, DWORD PTR tempvec2$[rsp+8]
	addss	xmm0, DWORD PTR tempvec3$[rsp+8]
	movss	DWORD PTR q3$[rsp+8], xmm0
; Line 105
	lea	rax, QWORD PTR $T12[rsp]
	lea	rcx, QWORD PTR q3$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	lea	rdx, QWORD PTR $T12[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?CopyQuat@QUAT@@QEAAXV1@@Z		; QUAT::CopyQuat
	npad	1
; Line 106
	lea	rcx, QWORD PTR tempvec3$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR tempvec2$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR tempvec1$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR vectorq2$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR vectorq1$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	npad	1
	lea	rcx, QWORD PTR q3$[rsp]
	call	??1QUAT@@QEAA@XZ			; QUAT::~QUAT
	npad	1
	mov	rcx, QWORD PTR q$[rsp]
	call	??1QUAT@@QEAA@XZ			; QUAT::~QUAT
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?MultQuat@QUAT@@QEAAXV1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 408				; 00000198H
	pop	rdi
	pop	rsi
	ret	0
?MultQuat@QUAT@@QEAAXV1@@Z ENDP				; QUAT::MultQuat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR q$[rbp]
	call	??1QUAT@@QEAA@XZ			; QUAT::~QUAT
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR q3$[rbp]
	call	??1QUAT@@QEAA@XZ			; QUAT::~QUAT
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR vectorq1$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR vectorq2$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR tempvec1$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR tempvec2$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
q3$ = 56
vectorq1$ = 104
vectorq2$ = 152
tempvec1$ = 200
tempvec2$ = 248
tempvec3$ = 296
$T9 = 324
$T10 = 336
$T11 = 352
$T12 = 368
tv142 = 384
this$ = 432
q$ = 440
?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA PROC		; `QUAT::MultQuat'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR tempvec3$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??MultQuat@QUAT@@QEAAXV1@@Z@4HA ENDP		; `QUAT::MultQuat'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 64
?MagnitudeQuat@QUAT@@QEAAMXZ PROC			; QUAT::MagnitudeQuat
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 64
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 65
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR [rcx]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
; Line 66
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?MagnitudeQuat@QUAT@@QEAAMXZ ENDP			; QUAT::MagnitudeQuat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
Mag$ = 32
this$ = 64
?NormaliseQuat@QUAT@@QEAAXXZ PROC			; QUAT::NormaliseQuat
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 69
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 71
	mov	rcx, QWORD PTR this$[rsp]
	call	?MagnitudeQuat@QUAT@@QEAAMXZ		; QUAT::MagnitudeQuat
	movss	DWORD PTR Mag$[rsp], xmm0
; Line 72
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	divss	xmm0, DWORD PTR Mag$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 73
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR Mag$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 74
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR Mag$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 75
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR Mag$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 76
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?NormaliseQuat@QUAT@@QEAAXXZ ENDP			; QUAT::NormaliseQuat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
cr$ = 32
cp$ = 36
cy$ = 40
sr$ = 44
sp$ = 48
sy$ = 52
cpcy$ = 56
spsy$ = 60
this$ = 80
roll$ = 88
pitch$ = 96
yaw$ = 104
?EulerToQuat@QUAT@@QEAAXMMM@Z PROC			; QUAT::EulerToQuat
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 47
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 49
	movss	xmm0, DWORD PTR roll$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	call	?cos@@YAMM@Z				; cos
	movss	DWORD PTR cr$[rsp], xmm0
; Line 50
	movss	xmm0, DWORD PTR pitch$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	call	?cos@@YAMM@Z				; cos
	movss	DWORD PTR cp$[rsp], xmm0
; Line 51
	movss	xmm0, DWORD PTR yaw$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	call	?cos@@YAMM@Z				; cos
	movss	DWORD PTR cy$[rsp], xmm0
; Line 52
	movss	xmm0, DWORD PTR roll$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	call	?sin@@YAMM@Z				; sin
	movss	DWORD PTR sr$[rsp], xmm0
; Line 53
	movss	xmm0, DWORD PTR pitch$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	call	?sin@@YAMM@Z				; sin
	movss	DWORD PTR sp$[rsp], xmm0
; Line 54
	movss	xmm0, DWORD PTR yaw$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	call	?sin@@YAMM@Z				; sin
	movss	DWORD PTR sy$[rsp], xmm0
; Line 55
	movss	xmm0, DWORD PTR cp$[rsp]
	mulss	xmm0, DWORD PTR cy$[rsp]
	movss	DWORD PTR cpcy$[rsp], xmm0
; Line 56
	movss	xmm0, DWORD PTR sp$[rsp]
	mulss	xmm0, DWORD PTR sy$[rsp]
	movss	DWORD PTR spsy$[rsp], xmm0
; Line 57
	movss	xmm0, DWORD PTR cr$[rsp]
	mulss	xmm0, DWORD PTR cpcy$[rsp]
	movss	xmm1, DWORD PTR sr$[rsp]
	mulss	xmm1, DWORD PTR spsy$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 58
	movss	xmm0, DWORD PTR sr$[rsp]
	mulss	xmm0, DWORD PTR cpcy$[rsp]
	movss	xmm1, DWORD PTR cr$[rsp]
	mulss	xmm1, DWORD PTR spsy$[rsp]
	subss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 59
	movss	xmm0, DWORD PTR cr$[rsp]
	mulss	xmm0, DWORD PTR sp$[rsp]
	mulss	xmm0, DWORD PTR cy$[rsp]
	movss	xmm1, DWORD PTR sr$[rsp]
	mulss	xmm1, DWORD PTR cp$[rsp]
	mulss	xmm1, DWORD PTR sy$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 60
	movss	xmm0, DWORD PTR cr$[rsp]
	mulss	xmm0, DWORD PTR cp$[rsp]
	mulss	xmm0, DWORD PTR sy$[rsp]
	movss	xmm1, DWORD PTR sr$[rsp]
	mulss	xmm1, DWORD PTR sp$[rsp]
	mulss	xmm1, DWORD PTR cy$[rsp]
	subss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 61
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?EulerToQuat@QUAT@@QEAAXMMM@Z ENDP			; QUAT::EulerToQuat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
halfTheta$ = 32
cosHalfTheta$ = 36
sinHalfTheta$ = 40
this$ = 64
axis$ = 72
theta$ = 80
?AxisAngleToQuat@QUAT@@QEAAXVVECTOR@@M@Z PROC		; QUAT::AxisAngleToQuat
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 36
$LN4:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 37
	cvtss2sd xmm0, DWORD PTR theta$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR halfTheta$[rsp], xmm0
; Line 38
	movss	xmm0, DWORD PTR halfTheta$[rsp]
	call	?cos@@YAMM@Z				; cos
	movss	DWORD PTR cosHalfTheta$[rsp], xmm0
; Line 39
	movss	xmm0, DWORD PTR halfTheta$[rsp]
	call	?sin@@YAMM@Z				; sin
	movss	DWORD PTR sinHalfTheta$[rsp], xmm0
; Line 40
	mov	rax, QWORD PTR axis$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR sinHalfTheta$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 41
	mov	rax, QWORD PTR axis$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR sinHalfTheta$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 42
	mov	rax, QWORD PTR axis$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR sinHalfTheta$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 43
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR cosHalfTheta$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 44
	mov	rcx, QWORD PTR axis$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?AxisAngleToQuat@QUAT@@QEAAXVVECTOR@@M@Z ENDP		; QUAT::AxisAngleToQuat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 48
q$ = 56
?CopyQuat@QUAT@@QEAAXV1@@Z PROC				; QUAT::CopyQuat
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 28
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 29
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
; Line 30
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
; Line 31
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
; Line 32
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR q$[rsp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0
; Line 33
	mov	rcx, QWORD PTR q$[rsp]
	call	??1QUAT@@QEAA@XZ			; QUAT::~QUAT
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?CopyQuat@QUAT@@QEAAXV1@@Z ENDP				; QUAT::CopyQuat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
?Set@QUAT@@QEAAXXZ PROC					; QUAT::Set
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 20
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 21
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
; Line 22
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
; Line 23
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
; Line 24
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+12], xmm0
; Line 25
	pop	rdi
	ret	0
?Set@QUAT@@QEAAXXZ ENDP					; QUAT::Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
??1QUAT@@QEAA@XZ PROC					; QUAT::~QUAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 16
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 17
	pop	rdi
	ret	0
??1QUAT@@QEAA@XZ ENDP					; QUAT::~QUAT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
sx$ = 24
sy$ = 32
sz$ = 40
sw$ = 48
??0QUAT@@QEAA@MMMM@Z PROC				; QUAT::QUAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 12
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 8
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sx$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 9
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sy$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 10
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sz$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 11
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sw$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 13
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0QUAT@@QEAA@MMMM@Z ENDP				; QUAT::QUAT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 64
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cmath
; Line 264
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 265
	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	sqrtf
; Line 266
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 64
?sin@@YAMM@Z PROC					; sin, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cmath
; Line 256
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 257
	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	sinf
; Line 258
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 64
?cos@@YAMM@Z PROC					; cos, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cmath
; Line 88
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 89
	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	cosf
; Line 90
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 107
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\quat.cpp
; Line 107
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
