; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33133.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG124623 DB	'invalid argument', 00H
	ORG $+3
$SG124624 DB	'%s', 00H
	ORG $+9
$SG124625 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.38.33130\include\xmemory', 00H
	ORG $+14
$SG124626 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '8', 00H, '.', 00H, '3', 00H, '3'
	DB	00H, '1', 00H, '3', 00H, '0', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG124627 DB	00H, 00H
	ORG $+2
$SG124628 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	??0VECTOR@@QEAA@MMM@Z				; VECTOR::VECTOR
PUBLIC	??1VECTOR@@QEAA@XZ				; VECTOR::~VECTOR
PUBLIC	?Set@VECTOR@@QEAAXXZ				; VECTOR::Set
PUBLIC	?MagnitudeVector@VECTOR@@QEAAMXZ		; VECTOR::MagnitudeVector
PUBLIC	?NormaliseVector@VECTOR@@QEAA?AV1@XZ		; VECTOR::NormaliseVector
PUBLIC	?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z		; VECTOR::CrossProduct
PUBLIC	?DotProduct@VECTOR@@QEAAMV1@@Z			; VECTOR::DotProduct
EXTRN	sqrtf:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sqrt@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?sqrt@@YAMM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0VECTOR@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0VECTOR@@QEAA@MMM@Z
$pdata$??1VECTOR@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1VECTOR@@QEAA@XZ
$pdata$?Set@VECTOR@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?Set@VECTOR@@QEAAXXZ
$pdata$?MagnitudeVector@VECTOR@@QEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?MagnitudeVector@VECTOR@@QEAAMXZ
$pdata$?NormaliseVector@VECTOR@@QEAA?AV1@XZ DD imagerel $LN6
	DD	imagerel $LN6+221
	DD	imagerel $unwind$?NormaliseVector@VECTOR@@QEAA?AV1@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA DD imagerel ?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA
	DD	imagerel ?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z DD imagerel $LN7
	DD	imagerel $LN7+311
	DD	imagerel $unwind$?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z
$pdata$?DotProduct@VECTOR@@QEAAMV1@@Z DD imagerel $LN4
	DD	imagerel $LN4+121
	DD	imagerel $unwind$?DotProduct@VECTOR@@QEAAMV1@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA
	DD	00H
	DD	05H
voltbl	ENDS
CONST	SEGMENT
	ORG $+2
?NormaliseVector@VECTOR@@QEAA?AV1@XZ$rtcName$0 DB 076H	; VECTOR::NormaliseVector
	DB	065H
	DB	063H
	DB	00H
?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z$rtcName$0 DB 074H	; VECTOR::CrossProduct
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+7
?NormaliseVector@VECTOR@@QEAA?AV1@XZ$rtcVarDesc DD 028H	; VECTOR::NormaliseVector
	DD	0cH
	DQ	FLAT:?NormaliseVector@VECTOR@@QEAA?AV1@XZ$rtcName$0
	ORG $+48
?NormaliseVector@VECTOR@@QEAA?AV1@XZ$rtcFrameData DD 01H ; VECTOR::NormaliseVector
	DD	00H
	DQ	FLAT:?NormaliseVector@VECTOR@@QEAA?AV1@XZ$rtcVarDesc
?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z$rtcVarDesc DD 028H	; VECTOR::CrossProduct
	DD	0cH
	DQ	FLAT:?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z$rtcName$0
	ORG $+48
?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z$rtcFrameData DD 01H ; VECTOR::CrossProduct
	DD	00H
	DQ	FLAT:?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$??0VECTOR@@QEAA@MMM@Z DD 011801H
	DD	07018H
$unwind$??1VECTOR@@QEAA@XZ DD 010601H
	DD	07006H
$unwind$?Set@VECTOR@@QEAAXXZ DD 010601H
	DD	07006H
$unwind$?MagnitudeVector@VECTOR@@QEAAMXZ DD 020a01H
	DD	07006520aH
$unwind$?NormaliseVector@VECTOR@@QEAA?AV1@XZ DD 032611H
	DD	0700ca210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?NormaliseVector@VECTOR@@QEAA?AV1@XZ
$cppxdata$?NormaliseVector@VECTOR@@QEAA?AV1@XZ DB 028H
	DD	imagerel $stateUnwindMap$?NormaliseVector@VECTOR@@QEAA?AV1@XZ
	DD	imagerel $ip2state$?NormaliseVector@VECTOR@@QEAA?AV1@XZ
$stateUnwindMap$?NormaliseVector@VECTOR@@QEAA?AV1@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA
$ip2state$?NormaliseVector@VECTOR@@QEAA?AV1@XZ DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	0e0H
	DB	00H
	ORG $+2
$unwind$?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z DD 032b01H
	DD	07011a215H
	DD	06010H
$unwind$?DotProduct@VECTOR@@QEAAMV1@@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sqrt@@YAMM@Z DD 020b01H
	DD	07007520bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
dot$ = 48
$T1 = 52
this$ = 80
vect$ = 88
?DotProduct@VECTOR@@QEAAMV1@@Z PROC			; VECTOR::DotProduct
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 40
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 42
	mov	rax, QWORD PTR vect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR vect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR vect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR dot$[rsp], xmm0
; Line 43
	movss	xmm0, DWORD PTR dot$[rsp]
	movss	DWORD PTR $T1[rsp], xmm0
	mov	rcx, QWORD PTR vect$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	movss	xmm0, DWORD PTR $T1[rsp]
; Line 44
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?DotProduct@VECTOR@@QEAAMV1@@Z ENDP			; VECTOR::DotProduct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
temp$ = 40
$T4 = 68
this$ = 112
__$ReturnUdt$ = 120
vect$ = 128
?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z PROC		; VECTOR::CrossProduct
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 47
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
	mov	DWORD PTR $T4[rsp], 0
; Line 48
	lea	rax, QWORD PTR temp$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR this$[rsp]
	mov	ecx, 12
	rep movsb
; Line 49
	mov	rax, QWORD PTR vect$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR temp$[rsp+8]
	mov	rax, QWORD PTR vect$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR temp$[rsp+4]
	subss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 50
	mov	rax, QWORD PTR vect$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR temp$[rsp]
	mov	rax, QWORD PTR vect$[rsp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR temp$[rsp+8]
	subss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 51
	mov	rax, QWORD PTR vect$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR temp$[rsp+4]
	mov	rax, QWORD PTR vect$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR temp$[rsp]
	subss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 52
	lea	rax, QWORD PTR temp$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR temp$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	mov	rcx, QWORD PTR vect$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 53
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
?CrossProduct@VECTOR@@QEAA?AV1@V1@@Z ENDP		; VECTOR::CrossProduct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
vec$ = 40
temp$ = 68
$T4 = 72
this$ = 112
__$ReturnUdt$ = 120
?NormaliseVector@VECTOR@@QEAA?AV1@XZ PROC		; VECTOR::NormaliseVector
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 30
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]
	mov	DWORD PTR $T4[rsp], 0
; Line 31
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR vec$[rsp]
	call	??0VECTOR@@QEAA@MMM@Z			; VECTOR::VECTOR
	npad	1
; Line 32
	mov	rcx, QWORD PTR this$[rsp]
	call	?MagnitudeVector@VECTOR@@QEAAMXZ	; VECTOR::MagnitudeVector
	movss	DWORD PTR temp$[rsp], xmm0
; Line 33
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR temp$[rsp]
	movss	DWORD PTR vec$[rsp], xmm0
; Line 34
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR temp$[rsp]
	movss	DWORD PTR vec$[rsp+4], xmm0
; Line 35
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR temp$[rsp]
	movss	DWORD PTR vec$[rsp+8], xmm0
; Line 36
	lea	rax, QWORD PTR vec$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR vec$[rsp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 37
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?NormaliseVector@VECTOR@@QEAA?AV1@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
?NormaliseVector@VECTOR@@QEAA?AV1@XZ ENDP		; VECTOR::NormaliseVector
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
vec$ = 40
temp$ = 68
$T4 = 72
this$ = 112
__$ReturnUdt$ = 120
?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA PROC ; `VECTOR::NormaliseVector'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR vec$[rbp]
	call	??1VECTOR@@QEAA@XZ			; VECTOR::~VECTOR
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??NormaliseVector@VECTOR@@QEAA?AV1@XZ@4HA ENDP ; `VECTOR::NormaliseVector'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 64
?MagnitudeVector@VECTOR@@QEAAMXZ PROC			; VECTOR::MagnitudeVector
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 25
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 26
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
; Line 27
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?MagnitudeVector@VECTOR@@QEAAMXZ ENDP			; VECTOR::MagnitudeVector
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
?Set@VECTOR@@QEAAXXZ PROC				; VECTOR::Set
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 18
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 19
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
; Line 20
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
; Line 21
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
; Line 22
	pop	rdi
	ret	0
?Set@VECTOR@@QEAAXXZ ENDP				; VECTOR::Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
??1VECTOR@@QEAA@XZ PROC					; VECTOR::~VECTOR
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 14
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 15
	pop	rdi
	ret	0
??1VECTOR@@QEAA@XZ ENDP					; VECTOR::~VECTOR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
this$ = 16
sx$ = 24
sy$ = 32
sz$ = 40
??0VECTOR@@QEAA@MMM@Z PROC				; VECTOR::VECTOR
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 10
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
; Line 7
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sx$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 8
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sy$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 9
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR sz$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 11
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0VECTOR@@QEAA@MMM@Z ENDP				; VECTOR::VECTOR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 64
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cmath
; Line 264
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 265
	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	sqrtf
; Line 266
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 54
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\dev\cpp\40_BIM\01_AlanBaylis\cpp\OGLMDI2_VS2022\Build01\vector.cpp
; Line 54
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
