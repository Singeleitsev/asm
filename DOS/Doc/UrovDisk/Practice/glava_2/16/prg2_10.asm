;--------------------------------------------------------------------------------;
;prg2_10.asm - пример реализации односв€зных списков с помощью двух массивов
;¬ход: массивы с данными и указател€ми.
;¬ыход: нет. ¬ динамике работа программы наблюдаетс€ под управлением отладчика.
;--------------------------------------------------------------------------------;
masm
model small
.data
;задаем массив
mas	db	0,55,0,12,0,42,94,0,18,0,06,67,0,58,46
n=$-mas
point	db	0	;указатель списка - индекс первого ненулевого элемента в mas
;определим массив указателей
mas_point	db	n dup (0)
.stack	256
.486
.code
main:
	mov	dx,@data
	mov	ds,dx
	lea	si,mas	;в si адрес mas_point
	xor	bx,bx	;в bx будут индексы - кандидаты на включение в массив указателей
;ищем первый ненулевой элемент
	mov	cx,n-1
cycl1:
	cmp	byte ptr [si][bx],0
	jne	m1
;если нулевые элементы
	inc	bx
	loop	cycl1
	jmp	exit	;если нет ненулевых элементов
m1:
	mov	point,bl	;запоминаем индекс первого ненулевого в point
	mov	di,bx	;в di индекс предыдущего ненулевого
;просматриваем далее (cx тот же)
	inc	bx
cycl2:	cmp	byte ptr [si][bx],0
	je	m2	;нулевой => пропускаем
;формируем индекс
	mov	mas_point[di],bl	;индекс следующего ненулевого в элемени mas_point предыдущего
	mov	di,bx	;запоминаем индекс ненулевого
m2:
	inc	bx
	loop	cycl2
	mov	mas_point[di],0ffh	;индекс следующего ненулевого в элемени mas_point
;выход
;а теперь подсчитаем единичные, не просматрива€ все - результат в ax
	xor	ax,ax
	cmp	point,0
	je	exit
	inc	ax
	mov	bl,point
cycl3:
	cmp	mas_point[bx],0ffh
	je	exit
	inc	ax
	mov	bl,mas_point[bx]
	jmp	cycl3
;результат подсчета в ax, с ним нужно что-то делать, иначе он будет запорчен
exit:
	mov	ax,4c00h
	int	21h
end	main
