;----------------------------------------------------------
;prg07_11.asm - программа чтения и вывода на экран содержимого файла, имя которого вводится в командной строке.
;----------------------------------------------------------
masm
model small
.data
file_name	db	128 dup (" ")	;буфер, в который будет помещен путь к файлу
point_fname	dd	file_name
string	db	80 dup (" ")
len_string=$-string
point_string dd	string
handle	dw	0	;дескриптор файла
size_f	dd	0	;размер файла
.stack	256
.486
.code
main:
;копируем командную строку в file_name
;вначале уберем (установкой указателя) ведущие пробелы в командной строке перед путем к файлу:
	mov	di,81h
	mov	al," "
	mov	cx,128
repe	scasb
	dec di
push	di
pop	si
	mov	ax,@data	;адрес сегмента данных - в регистр ax
	mov	es,ax	;ax в es
	mov	cl,ds:[80h]
	dec	cl
	lea	di,file_name
rep	movsb
push	es
pop	ds
;---------открываем файл---------------------------------------------
	mov	al,00h	;режим доступа - только чтение
	lds	dx,point_fname	;формируем указатель на имя файла
	mov	ah,3dh	;номер функции DOS
	int	21h	;открываем файл
	jc	exit	;переход, в случае ошибки
	mov	handle,ax
;---------определяем размер файла---------------------------------------------
	mov	bx,ax	;дескриптор файла - в bx
	mov	al,2
	xor	cx,cx
	xor	dx,dx	;CX:DX =0 - нулевое смещение
	mov	ah,42h
	int	21h	;в DX:AX возвращается длина файла в байтах
	jc	exit	;если ошибка
;формируем полную длину в edx
	shl	eax,16
	shld	edx,eax,16
	mov	size_f,edx	;сохраним как условие выхода из программы при достижении снизу
;---------устанавливаем указатель на начало файла---------------------------------------------
	mov	bx,handle	;дескриптор файла - в bx
	mov	al,0
	xor	cx,cx
	xor	dx,dx	;CX:DX =0 - нулевое смещение
	mov	ah,42h
	int	21h	;текущий указатель в начале файла
	jc	exit	;если ошибка
;---------читаем файл по len_string байт---------------------------------------------
cycl:
	mov	bx,handle	;дескриптор файла в bx
	mov	cx,len_string
	lds	dx,point_string	;формируем указатель на строку string
	mov	ah,3fh	;номер функции DOS
	int	21h	;открываем файл
	jc	exit	;переход в случае ошибки
;---------выводим на экран целиком---------------------------------------------
	mov	bx,1	;стандартный дескриптор - экран
	mov	cx,len_string
	lds	dx,point_string	;формируем указатель на строку string
	mov	ah,40h	;номер функции DOS
	int	21h	;открываем файл
	jc	exit	;переход в случае ошибки
	cwde	;расширяем количество выведенных байт
	sub	size_f,eax
	cmp	size_f,0
	jle	exit	;достигли конца файла
	jmp	cycl
exit:
;выход из программы
	mov	al,1
	int	21h
	mov	ax,4c00h	;пересылка 4c00h в регистр ax
	int	21h	;вызов прерывания с номером 21h
end	main		;конец программы с точкой входа main
