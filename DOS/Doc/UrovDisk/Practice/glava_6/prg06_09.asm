;----------------------------------------------------------
;prg06_09.asm - программа вывода целого десятичного числа из диапазона 0.. 999 999 999 999 999 999 на экран.
;Вход: выводимое значение - в поле string_bin_dword.
;Выход: вывод десятичного числа из диапазона 0.. 999 999 999 999 999 999 на экран
;----------------------------------------------------------
masm
model small
.data
;поле string_bin_dword содержит выводимое значение - с помощью идентификаторов, вводимых директивой label, это значение может трактоваться как значение различной разрядности:
string_bin_byte	label	byte
string_bin_word	label	word
string_bin_dword	label	dword
string_bin_qword	dq	0de0b6b3a763ffffh	;зададим максимально возможное для сопроцессора двоичное целое со знаком
;в string_pack исходное значение из string_bin_dword в упакованном десятичном формате
string_pack	dt	0
len_string_pack=$-string_pack
adr_string_pack	dd	string_pack
string	db	20 dup (0)	;максимальный результат состоит из 18 десятичных цифр
len_string=$-string
adr_string	dd	string
.stack	256
.586p
.code
main:
	mov	ax,@data	;адрес сегмента данных - в регистр ax
	mov	ds,ax	;ax в ds
;	xor	edx,edx
;---------преобразуем bin->dec ---------------------------------------------
	finit
	fild	string_bin_qword	;заносим в сопроцессор двоичное целое число
	fbstp	string_pack	;извлекаем упакованное десятичное
;---------распакуем----------------------------------------------------------
	lds	si,adr_string_pack
	add	si,len_string_pack-2	;на конец string_pack (18 упак. дес. цифр)
	les	di,adr_string
	mov	cx,9	;9 пар упакованных десятичных цифр
	xor	ax,ax
cycl:
	xor	ax,ax
	std	;string_pack обрабатываем с конца
	lodsb	;в аl очередные 2 упакованные десятичные цифры
;распаковываем - ah=младшая, al=старшая
	shl	ax,4
	rol	al,4
	or	ax,3030h	;преобразуем в символьное представление
	xchg	ah,al	;ah=младшая, al=старшая
	cld	;в string записываем с начала
	stosw
	loop	cycl
;---------выводим на консоль----------------------------------------------------------
	mov	bx,1	;стандартный дескриптор - экран
	mov	cx,len_string
	lds	dx,adr_string	;формируем указатель на строку string
	mov	ah,40h	;номер функции DOS
	int	21h	;выводим
	jc	exit	;переход в случае ошибки
exit:	;выход из программы
	mov	ax,4c00h	;пересылка 4c00h в регистр ax
	int	21h	;вызов прерывания с номером 21h
end	main		;конец программы с точкой входа main
