;----------------------------------------------------------
;prg06_03.asm - программа ввода целых десятичных чисел из диапазона 0..999 999 999 999 999 999 и преобразования их в эквивалентное двоичное представление.
;Вход: ввод с клавиатуры числа в десятичной системе счисления в диапазоне значений 0..999 999 999 999 999 999.
;Выход: двоичное число-результат преобразования в области памяти string_bin.
;----------------------------------------------------------
masm
model small
.data
	db	0	;барьер, если введенное количество цифр нечетно
string	db	20 dup (0)	;максимальное исходное число состоит из 18 цифр (20 - с учетом 0d0ah)
len_string=$-string
adr_string	dd	string
string_pack	dt	0	;сюда упаковывается исходное значение
len_string_pack=$-string_pack
adr_string_pack	dd	string_pack
;результат - двоичное значение различной разрядности:
string_bin_byte	label	byte
string_bin_word	label	word
string_bin_word	label	word
string_bin_dword	label	dword
string_bin	dq	0	;поле для полного результата - эквивалентного двоичного представления
.stack	256
.586p
.code
main:
	mov	ax,@data	;адрес сегмента данных в регистр ax
	mov	ds,ax	;ax в ds
	xor	edx,edx
;---------вводим с экрана---------------------------------------------
	mov	bx,0	;стандартный дескриптор - клавиатура
	mov	cx, len_string
	lea	dx,string	;формируем указатель на строку string
	mov	ah,3fh	;номер функции DOS
	int	21h
	jc	exit	;переход в случае ошибки
;в регистре AL - количество действительно введенных десятичных цифр
;преобразуем строку с десятичными числами в ее двоичный эквивалент
	mov	cx,ax
	sub	cx,2	; корректируем счетчик цикла (чтобы не учитывать 0d0ah, вводимые 3fh)
	jecxz	exit	;число не было введено
	lds	si,adr_string
	add	si,cx
	dec	si	;указатель на последнюю введенную десятичную цифру
	les	di,adr_string_pack
m1:
	std	;флаг df=1 - работаем со строкой string, начиная с ее конца
	xor	ax,ax
	lodsb
	and	al,0fh
	shl	ax,8
	lodsb
	shl	al,4
	add	al,ah	;в AL две очередные упакованные цифры
	cld	;флаг df=1 - работаем со строкой string_pack, начиная с ее начала
	stosb
	sub	cx,2
	cmp	cx,0
	jg	m1
;конец преобразования в упакованное представление
	finit	;инициализируем сопроцессор
;теперь преобразуем в эквивалентное двоичное представление:
	fbld	string_pack	;помещаем в стек сопроцессора
	fistp	string_bin	;и извлекаем
;эквивалентное двоичное представление в поле string_bin
exit:	;выход из программы
	mov	ax,4c00h	;пересылка 4c00h в регистр ax
	int	21h	;вызов прерывания с номером 21h
end	main		;конец программы с точкой входа main
